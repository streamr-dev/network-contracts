import { Wallet } from "ethers"
import { StreamrEnvDeployer } from "../../src/StreamrEnvDeployer"

async function main() {
    // hardhat node mockchain (first priv key auto-generated by hardhat)
    // const key = "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"
    // const url = "http://127.0.0.1:8547"

    // sidechain key preloaded with ETH (from docker-dev-init)
    // const key = "0x2cd9855d17e01ce041953829398af7e48b24ece04ff9d0e183414de54dc52285"
    // const url = "http://10.200.10.1:8546"
    
    // mumbai testnet
    const key = "0x23f12a73997bc0b1dad9204ce648757fe1fca39fb9b16e2ea73a895c74b9b8f3"
    const url = "https://rpc-mumbai.maticvigil.com"
    // const url = "https://rpc.ankr.com/polygon_mumbai"

    const streamrEnvDeployer = new StreamrEnvDeployer(key, url)

    await streamrEnvDeployer.deployEnvironment()
    await streamrEnvDeployer.createFundStakeSponsorshipAndOperator()
    await streamrEnvDeployer.deployEns()
    await streamrEnvDeployer.registerEnsName("streamrasd", Wallet.createRandom())

    const contracts = await streamrEnvDeployer.contracts
    await (await contracts.streamRegistry.createStream("/test" + Date.now(), "{}")).wait()

}

main()
