# TODO: how to define dates? This was suggested in https://graphql.org/learn/schema/
# scalar Date

type Permission @entity {
  id: ID!
  "Ethereum address, owner of this permission"
  userAddress: Bytes!
  "Target stream this permission applies to"
  stream: Stream
  "Edit permission enables changing the stream's metadata"
  canEdit: Boolean
  "canDelete permission allows deleting the stream from the StreamRegistry"
  canDelete: Boolean
  "publishExpiration timestamp tells until what time this address may publish data to the stream"
  publishExpiration: BigInt
  "subscribeExpires timestamp tells until what time this address may subscribe to the stream"
  subscribeExpiration: BigInt
  "grant permission allows granting and revoking permissions to this stream"
  canGrant: Boolean
}

type Stream @entity {
  "stream ID = 'creator address'/'path' where path can be any string"
  id: ID!
  "Stream metadata JSON"
  metadata: String!
  "Permissions that each Ethereum address owns to this stream"
  permissions: [Permission!] @derivedFrom(field: "stream")
  "Nodes the have been registered as storage nodes to this stream in the StreamStorageRegistry"
  storageNodes: [Node!] @derivedFrom(field: "storedStreams")
}

type Node @entity {
  "node ID = address"
  id: ID!
  "Connection metadata, e.g. URL of the node, e.g. http://mynode.com:3000"
  metadata: String!
  "Epoch timestamp of the last time the node metadata was updated"
  lastSeen: BigInt!
  "Streams for which this node is registered as a storage node in the StreamStorageRegistry"
  storedStreams: [Stream!] # @derivedFrom(field: "storageNodes")
  # whitelisted: Boolean! # Problem: should whitelisting "create" nodes that show up in query results?
}

# many-to-many relationship: https://thegraph.com/docs/developer/create-subgraph-hosted#many-to-many-relationships
# "more performant option" according the the docs:
# type StreamStorage @entity {
#   id: ID!
#   created: BigInt!
#   node: Node!
#   stream: Stream!
# }
