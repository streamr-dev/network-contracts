# TODO: how to define dates? This was suggested in https://graphql.org/learn/schema/
# scalar Date

type Permission @entity {
  id: ID!
  userAddress: Bytes!
  stream: Stream
  edit: Boolean
  canDelete: Boolean
  publishExpiration: BigInt
  subscribeExpiration: BigInt
  share: Boolean
}

type Stream @entity {
  id: ID!
  metadata: String!
  permissions: [Permission!] @derivedFrom(field: "stream")
  storageNodes: [Node!] @derivedFrom(field: "storedStreams")
}

type Node @entity {
  id: ID!
  metadata: String!
  lastSeen: BigInt!
  # whitelisted: Boolean!
  storedStreams: [Stream!] # @derivedFrom(field: "storageNodes")
}

# many-to-many relationship: https://thegraph.com/docs/developer/create-subgraph-hosted#many-to-many-relationships
# "more performant option" according the the docs:
# type StreamStorage @entity {
#   id: ID!
#   created: BigInt!
#   node: Node!
#   stream: Stream!
# }
