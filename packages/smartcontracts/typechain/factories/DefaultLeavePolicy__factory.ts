/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DefaultLeavePolicy,
  DefaultLeavePolicyInterface,
} from "../DefaultLeavePolicy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "streamID",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "broker",
        type: "address",
      },
    ],
    name: "Leave",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "streamId",
        type: "string",
      },
      {
        internalType: "address",
        name: "broker",
        type: "address",
      },
    ],
    name: "checkPenaltyForLeaving",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610112806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063637a41fe14602d575b600080fd5b604160383660046053565b60019392505050565b60405190815260200160405180910390f35b600080600060408486031215606757600080fd5b833567ffffffffffffffff80821115607e57600080fd5b818601915086601f830112609157600080fd5b813581811115609f57600080fd5b87602082850101111560b057600080fd5b602092830195509350508401356001600160a01b038116811460d157600080fd5b80915050925092509256fea264697066735822122033c5a9391efaf3b9b6036a7da5d7bbfb42162dcc574557519711b9244f3fe34964736f6c63430008090033";

type DefaultLeavePolicyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefaultLeavePolicyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefaultLeavePolicy__factory extends ContractFactory {
  constructor(...args: DefaultLeavePolicyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DefaultLeavePolicy";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DefaultLeavePolicy> {
    return super.deploy(overrides || {}) as Promise<DefaultLeavePolicy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DefaultLeavePolicy {
    return super.attach(address) as DefaultLeavePolicy;
  }
  connect(signer: Signer): DefaultLeavePolicy__factory {
    return super.connect(signer) as DefaultLeavePolicy__factory;
  }
  static readonly contractName: "DefaultLeavePolicy";
  public readonly contractName: "DefaultLeavePolicy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefaultLeavePolicyInterface {
    return new utils.Interface(_abi) as DefaultLeavePolicyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DefaultLeavePolicy {
    return new Contract(address, _abi, signerOrProvider) as DefaultLeavePolicy;
  }
}
