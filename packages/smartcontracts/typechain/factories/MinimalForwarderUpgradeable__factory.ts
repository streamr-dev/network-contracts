/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MinimalForwarderUpgradeable,
  MinimalForwarderUpgradeableInterface,
} from "../MinimalForwarderUpgradeable";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarderUpgradeable.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct MinimalForwarderUpgradeable.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aa3806100206000396000f3fe6080604052600436106100345760003560e01c80632d0335ab1461003957806347153f8214610082578063bf5d3bdb146100a3575b600080fd5b34801561004557600080fd5b5061006f610054366004610825565b6001600160a01b031660009081526035602052604090205490565b6040519081526020015b60405180910390f35b610095610090366004610855565b6100d3565b604051610079929190610924565b3480156100af57600080fd5b506100c36100be366004610855565b610273565b6040519015158152602001610079565b600060606100e2858585610273565b61014e5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61015d60808601356001610960565b6035600061016e6020890189610825565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101a89190610825565b6001600160a01b0316606088013560408901356101c860a08b018b610986565b6101d560208d018d610825565b6040516020016101e7939291906109cd565b60408051601f1981840301815290829052610201916109f3565b600060405180830381858888f193505050503d806000811461023f576040519150601f19603f3d011682016040523d82523d6000602084013e610244565b606091505b509092509050610259603f6060890135610a0f565b5a1161026757610267610a31565b90969095509350505050565b60008061038684848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061038092507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e4891506102e3905060208a018a610825565b6102f360408b0160208c01610825565b60408b013560608c013560808d013561030f60a08f018f610986565b60405161031d929190610a47565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e081019190915261010001604051602081830303815290604052805190602001206103f2565b90610446565b905060808501356035600061039e6020890189610825565b6001600160a01b03166001600160a01b03168152602001908152602001600020541480156103e957506103d46020860186610825565b6001600160a01b0316816001600160a01b0316145b95945050505050565b60006104406103ff61046a565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061045585856104ea565b915091506104628161055a565b509392505050565b60006104e57f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f61049960015490565b6002546040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b905090565b6000808251604114156105215760208301516040840151606085015160001a61051587828585610713565b94509450505050610553565b82516040141561054b57602083015160408401516105408683836107f6565b935093505050610553565b506000905060025b9250929050565b600081600481111561056e5761056e610a57565b14156105775750565b600181600481111561058b5761058b610a57565b14156105d45760405162461bcd60e51b815260206004820152601860248201527745434453413a20696e76616c6964207369676e617475726560401b6044820152606401610145565b60028160048111156105e8576105e8610a57565b14156106365760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610145565b600381600481111561064a5761064a610a57565b14156106a35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610145565b60048160048111156106b7576106b7610a57565b14156107105760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610145565b50565b6000806fa2a8918ca85bafe22016d0b997e4df60600160ff1b0383111561074057506000905060036107ed565b8460ff16601b1415801561075857508460ff16601c14155b1561076957506000905060046107ed565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156107bd573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166107e6576000600192509250506107ed565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b0161081787828885610713565b935093505050935093915050565b60006020828403121561083757600080fd5b81356001600160a01b038116811461084e57600080fd5b9392505050565b60008060006040848603121561086a57600080fd5b833567ffffffffffffffff8082111561088257600080fd5b9085019060c0828803121561089657600080fd5b909350602085013590808211156108ac57600080fd5b818601915086601f8301126108c057600080fd5b8135818111156108cf57600080fd5b8760208285010111156108e157600080fd5b6020830194508093505050509250925092565b60005b8381101561090f5781810151838201526020016108f7565b8381111561091e576000848401525b50505050565b8215158152604060208201526000825180604084015261094b8160608501602087016108f4565b601f01601f1916919091016060019392505050565b6000821982111561098157634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e1984360301811261099d57600080fd5b83018035915067ffffffffffffffff8211156109b857600080fd5b60200191503681900382131561055357600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610a058184602087016108f4565b9190910192915050565b600082610a2c57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052600160045260246000fd5b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220118e866f6bc4f084f4efe4f9d144b332a738c75b6a102a891fb418e30fb5dc7a64736f6c63430008090033";

type MinimalForwarderUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalForwarderUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalForwarderUpgradeable__factory extends ContractFactory {
  constructor(...args: MinimalForwarderUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "MinimalForwarderUpgradeable";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinimalForwarderUpgradeable> {
    return super.deploy(
      overrides || {}
    ) as Promise<MinimalForwarderUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MinimalForwarderUpgradeable {
    return super.attach(address) as MinimalForwarderUpgradeable;
  }
  connect(signer: Signer): MinimalForwarderUpgradeable__factory {
    return super.connect(signer) as MinimalForwarderUpgradeable__factory;
  }
  static readonly contractName: "MinimalForwarderUpgradeable";
  public readonly contractName: "MinimalForwarderUpgradeable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalForwarderUpgradeableInterface {
    return new utils.Interface(_abi) as MinimalForwarderUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalForwarderUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MinimalForwarderUpgradeable;
  }
}
