/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DefaultJoinPolicy,
  DefaultJoinPolicyInterface,
} from "../DefaultJoinPolicy";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "streamID",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "broker",
        type: "address",
      },
    ],
    name: "Joining",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "streamId",
        type: "string",
      },
      {
        internalType: "address",
        name: "broker",
        type: "address",
      },
    ],
    name: "checkAbleToJoin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610114806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80637c6188e314602d575b600080fd5b604160383660046055565b60019392505050565b604051901515815260200160405180910390f35b600080600060408486031215606957600080fd5b833567ffffffffffffffff80821115608057600080fd5b818601915086601f830112609357600080fd5b81358181111560a157600080fd5b87602082850101111560b257600080fd5b602092830195509350508401356001600160a01b038116811460d357600080fd5b80915050925092509256fea2646970667358221220d99878987d22ac65b7ea46a0f6b3c4905a76d31675735c4c2972a4df1af4226e64736f6c63430008090033";

type DefaultJoinPolicyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DefaultJoinPolicyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DefaultJoinPolicy__factory extends ContractFactory {
  constructor(...args: DefaultJoinPolicyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DefaultJoinPolicy";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DefaultJoinPolicy> {
    return super.deploy(overrides || {}) as Promise<DefaultJoinPolicy>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DefaultJoinPolicy {
    return super.attach(address) as DefaultJoinPolicy;
  }
  connect(signer: Signer): DefaultJoinPolicy__factory {
    return super.connect(signer) as DefaultJoinPolicy__factory;
  }
  static readonly contractName: "DefaultJoinPolicy";
  public readonly contractName: "DefaultJoinPolicy";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DefaultJoinPolicyInterface {
    return new utils.Interface(_abi) as DefaultJoinPolicyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DefaultJoinPolicy {
    return new Contract(address, _abi, signerOrProvider) as DefaultJoinPolicy;
  }
}
