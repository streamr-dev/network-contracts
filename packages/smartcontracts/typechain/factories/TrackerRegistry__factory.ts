/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TrackerRegistry,
  TrackerRegistryInterface,
} from "../TrackerRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "requiresWhitelist_",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "initialNodes",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "initialMetadata",
        type: "string[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "NodeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "isNew",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastSeen",
        type: "uint256",
      },
    ],
    name: "NodeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "NodeWhitelistApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "NodeWhitelistRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "RequiresWhitelistChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadata_",
        type: "string",
      },
    ],
    name: "createOrUpdateNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata_",
        type: "string",
      },
    ],
    name: "createOrUpdateNodeSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastSeen",
            type: "uint256",
          },
        ],
        internalType: "struct TrackerRegistry.Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "getNodeByNumber",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastSeen",
            type: "uint256",
          },
        ],
        internalType: "struct TrackerRegistry.Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNodes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastSeen",
            type: "uint256",
          },
        ],
        internalType: "struct TrackerRegistry.Node[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "kickOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nodeCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nodes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastSeen",
            type: "uint256",
          },
        ],
        internalType: "struct TrackerRegistry.Node",
        name: "node",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "next",
        type: "address",
      },
      {
        internalType: "address",
        name: "prev",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "removeNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeNodeSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requiresWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setRequiresWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tailNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "enum TrackerRegistry.WhitelistState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "whitelistApproveNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "whitelistRejectNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200202b3803806200202b833981016040819052620000349162000726565b6200003f336200012f565b6200004a846200017f565b6002805460ff60a01b1916600160a01b851515021790558051825114620000b85760405162461bcd60e51b815260206004820152601460248201527f6572726f725f626164547261636b65724461746100000000000000000000000060448201526064015b60405180910390fd5b60005b825181101562000124576200010f838281518110620000de57620000de62000822565b6020026020010151838381518110620000fb57620000fb62000822565b60200260200101516200023f60201b60201c565b806200011b816200084e565b915050620000bb565b50505050506200098b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001ca5760405162461bcd60e51b815260206004820181905260248201526000805160206200200b8339815191526044820152606401620000af565b6001600160a01b038116620002315760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000af565b6200023c816200012f565b50565b6000546001600160a01b031633146200028a5760405162461bcd60e51b815260206004820181905260248201526000805160206200200b8339815191526044820152606401620000af565b6200029682826200029a565b5050565b6001600160a01b038216600090815260036020526040812060028101549091906200046357506040805160c0810182526001600160a01b0385811660608301818152608084018790524260a085015283526000602080850182905260018054851686880152928252600381529490208351805182546001600160a01b031916941693909317815582850151805192959193928492620003409284890192910190620004d8565b506040918201516002919091015560208301516003830180546001600160a01b03199081166001600160a01b0393841617909155939091015160049092018054909316911617905560008054600160a01b90046001600160401b0316906014620003aa836200086c565b82546001600160401b039182166101009390930a9283029190920219909116179055506001546001600160a01b03161562000415576001546001600160a01b0390811660009081526003602081905260409091200180546001600160a01b0319169186169190911790555b6002546001600160a01b03166200044257600280546001600160a01b0319166001600160a01b0386161790555b600180546001600160a01b0319166001600160a01b03861617905562000482565b82516200047a9060018401906020860190620004d8565b504260028301555b600282015460405182916001600160a01b038716917f7b8ea65757bf0d882563917834f76c4df069ea7e489c9fc65bf764289792e33491620004ca91600188019190620008d3565b60405180910390a350505050565b828054620004e69062000896565b90600052602060002090601f0160209004810192826200050a576000855562000555565b82601f106200052557805160ff191683800117855562000555565b8280016001018555821562000555579182015b828111156200055557825182559160200191906001019062000538565b506200056392915062000567565b5090565b5b8082111562000563576000815560010162000568565b80516001600160a01b03811681146200059657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715620005dc57620005dc6200059b565b604052919050565b60006001600160401b038211156200060057620006006200059b565b5060051b60200190565b6000601f83818401126200061d57600080fd5b82516020620006366200063083620005e4565b620005b1565b82815260059290921b850181019181810190878411156200065657600080fd5b8287015b848110156200071a5780516001600160401b03808211156200067c5760008081fd5b818a0191508a603f830112620006925760008081fd5b8582015181811115620006a957620006a96200059b565b620006bc818a01601f19168801620005b1565b915080825260408c81838601011115620006d65760008081fd5b60005b82811015620006f6578481018201518482018a01528801620006d9565b82811115620007085760008984860101525b5050508452509183019183016200065a565b50979650505050505050565b600080600080608085870312156200073d57600080fd5b62000748856200057e565b935060208086015180151581146200075f57600080fd5b60408701519094506001600160401b03808211156200077d57600080fd5b818801915088601f8301126200079257600080fd5b8151620007a36200063082620005e4565b81815260059190911b8301840190848101908b831115620007c357600080fd5b938501935b82851015620007ec57620007dc856200057e565b82529385019390850190620007c8565b60608b015190975094505050808311156200080657600080fd5b505062000816878288016200060a565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141562000865576200086562000838565b5060010190565b60006001600160401b03828116808214156200088c576200088c62000838565b6001019392505050565b600181811c90821680620008ab57607f821691505b60208210811415620008cd57634e487b7160e01b600052602260045260246000fd5b50919050565b60408152600080845481600182811c915080831680620008f457607f831692505b60208084108214156200091557634e487b7160e01b86526022600452602486fd5b6040880184905260608801828015620009375760018114620009495762000976565b60ff1987168252828201975062000976565b60008c81526020902060005b87811015620009705781548482015290860190840162000955565b83019850505b50509690960196909652509095945050505050565b611670806200099b6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806399e68eea116100ad578063b2b99ec911610071578063b2b99ec9146102c4578063bfdf0866146102d7578063e29581aa146102ea578063e670c15d146102ff578063f2fde38b1461030757600080fd5b806399e68eea1461022a5780639b19251a1461023d5780639d2090481461026d578063a5ee5b411461028d578063ae5b4961146102b157600080fd5b80635888799c116100f45780635888799c146101c25780635d8f7f2a146101d55780636da49b83146101e8578063715018a61461021a5780638da5cb5b1461022257600080fd5b8063189a5a171461013157806320a59a031461015c5780632af575801461017157806346c198f6146101845780635668c8fb146101af575b600080fd5b61014461013f3660046111a9565b61031a565b6040516101539392919061123d565b60405180910390f35b61016f61016a366004611270565b610406565b005b61016f61017f3660046111a9565b610487565b600254610197906001600160a01b031681565b6040516001600160a01b039091168152602001610153565b61016f6101bd3660046111a9565b610502565b61016f6101d03660046111a9565b610546565b61016f6101e3366004611334565b6105c1565b60005461020290600160a01b90046001600160401b031681565b6040516001600160401b039091168152602001610153565b61016f6105fe565b610197610639565b61016f610238366004611381565b610648565b61026061024b3660046111a9565b60046020526000908152604090205460ff1681565b60405161015391906113d3565b61028061027b3660046111a9565b6106ce565b60405161015391906113fb565b6002546102a190600160a01b900460ff1681565b6040519015158152602001610153565b6102806102bf36600461140e565b6107ac565b61016f6102d23660046111a9565b61092a565b600154610197906001600160a01b031681565b6102f2610962565b6040516101539190611427565b61016f610b06565b61016f6103153660046111a9565b610b0f565b60036020908152600091825260409182902082516060810190935280546001600160a01b031683526001810180549193928492908401919061035b90611489565b80601f016020809104026020016040519081016040528092919081815260200182805461038790611489565b80156103d45780601f106103a9576101008083540402835291602001916103d4565b820191906000526020600020905b8154815290600101906020018083116103b757829003601f168201915b505050918352505060029190910154602090910152600382015460049092015490916001600160a01b03908116911683565b3361040f610639565b6001600160a01b03161461043e5760405162461bcd60e51b8152600401610435906114c4565b60405180910390fd5b6002805460ff60a01b1916600160a01b831515908102919091179091556040517f7623db9c426686f05cec977c4cadb8ff9657502540ca665ae347731114dac69d90600090a250565b33610490610639565b6001600160a01b0316146104b65760405162461bcd60e51b8152600401610435906114c4565b6001600160a01b038116600081815260046020526040808220805460ff19166002179055517fbbe2a784aa6240d8175fa65a8459058efd8f44c5ab66caa2525fe9d6342108789190a250565b3361050b610639565b6001600160a01b0316146105315760405162461bcd60e51b8152600401610435906114c4565b61053a81610487565b6105438161092a565b50565b3361054f610639565b6001600160a01b0316146105755760405162461bcd60e51b8152600401610435906114c4565b6001600160a01b038116600081815260046020526040808220805460ff19166001179055517fdfe83f699699403a4b116b6f9504680228c3f319bbf5ab26b48a81d3005d98b29190a250565b336105ca610639565b6001600160a01b0316146105f05760405162461bcd60e51b8152600401610435906114c4565b6105fa8282610bac565b5050565b33610607610639565b6001600160a01b03161461062d5760405162461bcd60e51b8152600401610435906114c4565b6106376000610dde565b565b6000546001600160a01b031690565b600254600160a01b900460ff161580610684575060013360009081526004602052604090205460ff166002811115610682576106826113bd565b145b6106c45760405162461bcd60e51b8152602060048201526011602482015270195c9c9bdc97db9bdd105c1c1c9bdd9959607a1b6044820152606401610435565b6105433382610bac565b6106d6611094565b6001600160a01b038083166000908152600360209081526040918290208251606081019093528054909316825260018301805484928401919061071890611489565b80601f016020809104026020016040519081016040528092919081815260200182805461074490611489565b80156107915780601f1061076657610100808354040283529160200191610791565b820191906000526020600020905b81548152906001019060200180831161077457829003601f168201915b50505050508152602001600282015481525050915050919050565b6107b4611094565b600054600160a01b90046001600160401b0316821061080e5760405162461bcd60e51b81526020600482015260166024820152756572726f725f696e6465784f75744f66426f756e647360501b6044820152606401610435565b6002546001600160a01b0316600081815260036020526040902060015b848111610866576003918201546001600160a01b0316600081815260209390935260409092209192508061085e8161150f565b91505061082b565b50604080516060810190915281546001600160a01b031681526001820180548391602084019161089590611489565b80601f01602080910402602001604051908101604052809291908181526020018280546108c190611489565b801561090e5780601f106108e35761010080835404028352916020019161090e565b820191906000526020600020905b8154815290600101906020018083116108f157829003601f168201915b5050505050815260200160028201548152505092505050919050565b33610933610639565b6001600160a01b0316146109595760405162461bcd60e51b8152600401610435906114c4565b61054381610e2e565b60008054606091906001600160401b03600160a01b90910481169081111561098c5761098c611292565b6040519080825280602002602001820160405280156109c557816020015b6109b2611094565b8152602001906001900390816109aa5790505b506002549091506001600160a01b031660005b600054600160a01b90046001600160401b0316811015610afe576001600160a01b0380831660009081526003602090815260409182902082516060810190935280549093168252600183018054849284019190610a3490611489565b80601f0160208091040260200160405190810160405280929190818152602001828054610a6090611489565b8015610aad5780601f10610a8257610100808354040283529160200191610aad565b820191906000526020600020905b815481529060010190602001808311610a9057829003601f168201915b50505050508152602001600282015481525050848381518110610ad257610ad261152a565b6020908102919091010152600301546001600160a01b0316915080610af68161150f565b9150506109d8565b509092915050565b61063733610e2e565b33610b18610639565b6001600160a01b031614610b3e5760405162461bcd60e51b8152600401610435906114c4565b6001600160a01b038116610ba35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610435565b61054381610dde565b6001600160a01b03821660009081526003602052604081206002810154909190610d6d57506040805160c0810182526001600160a01b0385811660608301818152608084018790524260a085015283526000602080850182905260018054851686880152928252600381529490208351805182546001600160a01b031916941693909317815582850151805192959193928492610c4f92848901929101906110be565b506040918201516002919091015560208301516003830180546001600160a01b03199081166001600160a01b0393841617909155939091015160049092018054909316911617905560008054600160a01b90046001600160401b0316906014610cb783611540565b82546001600160401b039182166101009390930a9283029190920219909116179055506001546001600160a01b031615610d21576001546001600160a01b0390811660009081526003602081905260409091200180546001600160a01b0319169186169190911790555b6002546001600160a01b0316610d4d57600280546001600160a01b0319166001600160a01b0386161790555b600180546001600160a01b0319166001600160a01b038616179055610d8a565b8251610d8290600184019060208601906110be565b504260028301555b600282015460405182916001600160a01b038716917f7b8ea65757bf0d882563917834f76c4df069ea7e489c9fc65bf764289792e33491610dd091600188019190611567565b60405180910390a350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811660009081526003602052604090206002810154610e885760405162461bcd60e51b815260206004820152600e60248201526d195c9c9bdc97db9bdd119bdd5b9960921b6044820152606401610435565b60048101546001600160a01b031615610ed65760048101546001600160a01b03908116600090815260036020819052604090912083820154910180546001600160a01b031916919092161790555b60038101546001600160a01b031615610f26576003818101546001600160a01b0390811660009081526020929092526040909120600480840154910180546001600160a01b031916919092161790555b60008054600160a01b90046001600160401b0316906014610f4683611617565b82546001600160401b039182166101009390930a9283029190920219909116179055506001546001600160a01b0383811691161415610fb157600180546001600160a01b03808216600090815260036020526040902060040154166001600160a01b03199091161790555b6002546001600160a01b0383811691161415610ffa57600280546001600160a01b0380821660009081526003602081905260409091200154166001600160a01b03199091161790555b6001600160a01b038216600090815260036020526040812080546001600160a01b03191681559081816110306001830182611142565b5060006002919091018190556003830180546001600160a01b031990811690915560049093018054909316909255506040516001600160a01b038416917fcfc24166db4bb677e857cacabd1541fb2b30645021b27c5130419589b84db52b91a25050565b604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b8280546110ca90611489565b90600052602060002090601f0160209004810192826110ec5760008555611132565b82601f1061110557805160ff1916838001178555611132565b82800160010185558215611132579182015b82811115611132578251825591602001919060010190611117565b5061113e929150611178565b5090565b50805461114e90611489565b6000825580601f1061115e575050565b601f01602090049060005260206000209081019061054391905b5b8082111561113e5760008155600101611179565b80356001600160a01b03811681146111a457600080fd5b919050565b6000602082840312156111bb57600080fd5b6111c48261118d565b9392505050565b60018060a01b0381511682526000602080830151606082860152805180606087015260005b8181101561120c578281018401518782016080015283016111f0565b8181111561121e576000608083890101525b5060409485015194860194909452505050601f01601f19160160800190565b60608152600061125060608301866111cb565b6001600160a01b0394851660208401529290931660409091015292915050565b60006020828403121561128257600080fd5b813580151581146111c457600080fd5b634e487b7160e01b600052604160045260246000fd5b600082601f8301126112b957600080fd5b81356001600160401b03808211156112d3576112d3611292565b604051601f8301601f19908116603f011681019082821181831017156112fb576112fb611292565b8160405283815286602085880101111561131457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561134757600080fd5b6113508361118d565b915060208301356001600160401b0381111561136b57600080fd5b611377858286016112a8565b9150509250929050565b60006020828403121561139357600080fd5b81356001600160401b038111156113a957600080fd5b6113b5848285016112a8565b949350505050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106113f557634e487b7160e01b600052602160045260246000fd5b91905290565b6020815260006111c460208301846111cb565b60006020828403121561142057600080fd5b5035919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561147c57603f1988860301845261146a8583516111cb565b9450928501929085019060010161144e565b5092979650505050505050565b600181811c9082168061149d57607f821691505b602082108114156114be57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000600019821415611523576115236114f9565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60006001600160401b038083168181141561155d5761155d6114f9565b6001019392505050565b60408152600080845481600182811c91508083168061158757607f831692505b60208084108214156115a757634e487b7160e01b86526022600452602486fd5b60408801849052606088018280156115c657600181146115d757611602565b60ff19871682528282019750611602565b60008c81526020902060005b878110156115fc578154848201529086019084016115e3565b83019850505b50509690960196909652509095945050505050565b60006001600160401b03821680611630576116306114f9565b600019019291505056fea2646970667358221220741039738a94c72e4e85c6a1d220971fe1640b74a530305bc3e7f56d3a05ebcc64736f6c634300080900334f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572";

type TrackerRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrackerRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrackerRegistry__factory extends ContractFactory {
  constructor(...args: TrackerRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "TrackerRegistry";
  }

  deploy(
    owner: string,
    requiresWhitelist_: boolean,
    initialNodes: string[],
    initialMetadata: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TrackerRegistry> {
    return super.deploy(
      owner,
      requiresWhitelist_,
      initialNodes,
      initialMetadata,
      overrides || {}
    ) as Promise<TrackerRegistry>;
  }
  getDeployTransaction(
    owner: string,
    requiresWhitelist_: boolean,
    initialNodes: string[],
    initialMetadata: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      requiresWhitelist_,
      initialNodes,
      initialMetadata,
      overrides || {}
    );
  }
  attach(address: string): TrackerRegistry {
    return super.attach(address) as TrackerRegistry;
  }
  connect(signer: Signer): TrackerRegistry__factory {
    return super.connect(signer) as TrackerRegistry__factory;
  }
  static readonly contractName: "TrackerRegistry";
  public readonly contractName: "TrackerRegistry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrackerRegistryInterface {
    return new utils.Interface(_abi) as TrackerRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrackerRegistry {
    return new Contract(address, _abi, signerOrProvider) as TrackerRegistry;
  }
}
