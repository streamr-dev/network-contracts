/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WeightedNodeRegistry,
  WeightedNodeRegistryInterface,
} from "../WeightedNodeRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "NodeRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "isNew",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lastSeen",
        type: "uint256",
      },
    ],
    name: "NodeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "NodeWhitelistApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "NodeWhitelistRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "RequiresWhitelistChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "node",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadata_",
        type: "string",
      },
    ],
    name: "createOrUpdateNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadata_",
        type: "string",
      },
    ],
    name: "createOrUpdateNodeSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "getNode",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastSeen",
            type: "uint256",
          },
        ],
        internalType: "struct NodeRegistry.Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "getNodeByNumber",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastSeen",
            type: "uint256",
          },
        ],
        internalType: "struct NodeRegistry.Node",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNodes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastSeen",
            type: "uint256",
          },
        ],
        internalType: "struct NodeRegistry.Node[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "getWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "headNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "requiresWhitelist_",
        type: "bool",
      },
      {
        internalType: "address",
        name: "weightStrategy_",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "initialNodes",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "initialUrls",
        type: "string[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "requiresWhitelist_",
        type: "bool",
      },
      {
        internalType: "address[]",
        name: "initialNodes",
        type: "address[]",
      },
      {
        internalType: "string[]",
        name: "initialMetadata",
        type: "string[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "kickOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nodeCount",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nodes",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "nodeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "metadata",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastSeen",
            type: "uint256",
          },
        ],
        internalType: "struct NodeRegistry.Node",
        name: "node",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "next",
        type: "address",
      },
      {
        internalType: "address",
        name: "prev",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "removeNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "removeNodeSelf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requiresWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "setRequiresWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "weightStrategy_",
        type: "address",
      },
    ],
    name: "setWeightStrategy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "strat",
    outputs: [
      {
        internalType: "contract WeightStrategy",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tailNode",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "whitelist",
    outputs: [
      {
        internalType: "enum NodeRegistry.WhitelistState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "whitelistApproveNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nodeAddress",
        type: "address",
      },
    ],
    name: "whitelistRejectNode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b506080516125d36100456000396000818161072701528181610767015281816107f0015261083001526125d36000f3fe60806040526004361061016c5760003560e01c806399e68eea116100cc578063bfdf08661161007a578063bfdf086614610456578063d6cc6e4b1461047d578063e29581aa1461049d578063e670c15d146104bf578063e7f2c309146104d4578063ecf274da146104f4578063f2fde38b1461051457600080fd5b806399e68eea1461032d5780639b19251a1461034d5780639d2090481461038a578063a5ee5b41146103b7578063ac6c5251146103e8578063ae5b496114610416578063b2b99ec91461043657600080fd5b80634f1ef286116101295780634f1ef286146102585780635668c8fb1461026b5780635888799c1461028b5780635d8f7f2a146102ab5780636da49b83146102cb578063715018a6146103035780638da5cb5b1461031857600080fd5b8063059b2a1014610171578063189a5a17146101a757806320a59a03146101d65780632af57580146101f85780633659cfe61461021857806346c198f614610238575b600080fd5b34801561017d57600080fd5b5060cd54610191906001600160a01b031681565b60405161019e9190611c76565b60405180910390f35b3480156101b357600080fd5b506101c76101c2366004611ca6565b610534565b60405161019e93929190611d58565b3480156101e257600080fd5b506101f66101f1366004611d9b565b610620565b005b34801561020457600080fd5b506101f6610213366004611ca6565b6106a1565b34801561022457600080fd5b506101f6610233366004611ca6565b61071c565b34801561024457600080fd5b5060ca54610191906001600160a01b031681565b6101f6610266366004611e53565b6107e5565b34801561027757600080fd5b506101f6610286366004611ca6565b61089f565b34801561029757600080fd5b506101f66102a6366004611ca6565b6108e0565b3480156102b757600080fd5b506101f66102c6366004611ed4565b61095b565b3480156102d757600080fd5b5060c9546102eb906001600160401b031681565b6040516001600160401b03909116815260200161019e565b34801561030f57600080fd5b506101f6610994565b34801561032457600080fd5b506101916109cf565b34801561033957600080fd5b506101f6610348366004611f17565b6109de565b34801561035957600080fd5b5061037d610368366004611ca6565b60cc6020526000908152604090205460ff1681565b60405161019e9190611f69565b34801561039657600080fd5b506103aa6103a5366004611ca6565b610a64565b60405161019e9190611f91565b3480156103c357600080fd5b5060ca546103d890600160a01b900460ff1681565b604051901515815260200161019e565b3480156103f457600080fd5b50610408610403366004611ca6565b610b42565b60405190815260200161019e565b34801561042257600080fd5b506103aa610431366004611fa4565b610bc9565b34801561044257600080fd5b506101f6610451366004611ca6565b610d3f565b34801561046257600080fd5b5060c95461019190600160401b90046001600160a01b031681565b34801561048957600080fd5b506101f6610498366004611ca6565b610d77565b3480156104a957600080fd5b506104b2610dc8565b60405161019e9190611fbd565b3480156104cb57600080fd5b506101f6610f5f565b3480156104e057600080fd5b506101f66104ef366004612133565b610f68565b34801561050057600080fd5b506101f661050f3660046121c8565b611006565b34801561052057600080fd5b506101f661052f366004611ca6565b61114f565b60cb6020908152600091825260409182902082516060810190935280546001600160a01b03168352600181018054919392849290840191906105759061224c565b80601f01602080910402602001604051908101604052809291908181526020018280546105a19061224c565b80156105ee5780601f106105c3576101008083540402835291602001916105ee565b820191906000526020600020905b8154815290600101906020018083116105d157829003601f168201915b505050918352505060029190910154602090910152600382015460049092015490916001600160a01b03908116911683565b336106296109cf565b6001600160a01b0316146106585760405162461bcd60e51b815260040161064f90612287565b60405180910390fd5b60ca805460ff60a01b1916600160a01b831515908102919091179091556040517f7623db9c426686f05cec977c4cadb8ff9657502540ca665ae347731114dac69d90600090a250565b336106aa6109cf565b6001600160a01b0316146106d05760405162461bcd60e51b815260040161064f90612287565b6001600160a01b038116600081815260cc6020526040808220805460ff19166002179055517fbbe2a784aa6240d8175fa65a8459058efd8f44c5ab66caa2525fe9d6342108789190a250565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156107655760405162461bcd60e51b815260040161064f906122bc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166107976111ec565b6001600160a01b0316146107bd5760405162461bcd60e51b815260040161064f90612308565b6107c68161121a565b604080516000808252602082019092526107e291839190611249565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561082e5760405162461bcd60e51b815260040161064f906122bc565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166108606111ec565b6001600160a01b0316146108865760405162461bcd60e51b815260040161064f90612308565b61088f8261121a565b61089b82826001611249565b5050565b336108a86109cf565b6001600160a01b0316146108ce5760405162461bcd60e51b815260040161064f90612287565b6108d7816106a1565b6107e281610d3f565b336108e96109cf565b6001600160a01b03161461090f5760405162461bcd60e51b815260040161064f90612287565b6001600160a01b038116600081815260cc6020526040808220805460ff19166001179055517fdfe83f699699403a4b116b6f9504680228c3f319bbf5ab26b48a81d3005d98b29190a250565b336109646109cf565b6001600160a01b03161461098a5760405162461bcd60e51b815260040161064f90612287565b61089b8282611389565b3361099d6109cf565b6001600160a01b0316146109c35760405162461bcd60e51b815260040161064f90612287565b6109cd60006115d4565b565b6097546001600160a01b031690565b60ca54600160a01b900460ff161580610a1a5750600133600090815260cc602052604090205460ff166002811115610a1857610a18611f53565b145b610a5a5760405162461bcd60e51b8152602060048201526011602482015270195c9c9bdc97db9bdd105c1c1c9bdd9959607a1b604482015260640161064f565b6107e23382611389565b610a6c611b7d565b6001600160a01b03808316600090815260cb602090815260409182902082516060810190935280549093168252600183018054849284019190610aae9061224c565b80601f0160208091040260200160405190810160405280929190818152602001828054610ada9061224c565b8015610b275780601f10610afc57610100808354040283529160200191610b27565b820191906000526020600020905b815481529060010190602001808311610b0a57829003601f168201915b50505050508152602001600282015481525050915050919050565b60cd5460405163ac6c525160e01b81526000916001600160a01b03169063ac6c525190610b73908590600401611c76565b60206040518083038186803b158015610b8b57600080fd5b505afa158015610b9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc39190612354565b92915050565b610bd1611b7d565b60c9546001600160401b03168210610c245760405162461bcd60e51b81526020600482015260166024820152756572726f725f696e6465784f75744f66426f756e647360501b604482015260640161064f565b60ca546001600160a01b0316600081815260cb6020526040902060015b848111610c7b576003909101546001600160a01b0316600081815260cb602052604090209092509080610c7381612383565b915050610c41565b50604080516060810190915281546001600160a01b0316815260018201805483916020840191610caa9061224c565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd69061224c565b8015610d235780601f10610cf857610100808354040283529160200191610d23565b820191906000526020600020905b815481529060010190602001808311610d0657829003601f168201915b5050505050815260200160028201548152505092505050919050565b33610d486109cf565b6001600160a01b031614610d6e5760405162461bcd60e51b815260040161064f90612287565b6107e281611626565b33610d806109cf565b6001600160a01b031614610da65760405162461bcd60e51b815260040161064f90612287565b60cd80546001600160a01b0319166001600160a01b0392909216919091179055565b60c9546060906000906001600160401b0390811690811115610dec57610dec611db6565b604051908082528060200260200182016040528015610e2557816020015b610e12611b7d565b815260200190600190039081610e0a5790505b5060ca549091506001600160a01b031660005b60c9546001600160401b0316811015610f57576001600160a01b03808316600090815260cb602090815260409182902082516060810190935280549093168252600183018054849284019190610e8d9061224c565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb99061224c565b8015610f065780601f10610edb57610100808354040283529160200191610f06565b820191906000526020600020905b815481529060010190602001808311610ee957829003601f168201915b50505050508152602001600282015481525050848381518110610f2b57610f2b61239e565b6020908102919091010152600301546001600160a01b0316915080610f4f81612383565b915050610e38565b509092915050565b6109cd33611626565b600054610100900460ff16610f835760005460ff1615610f87565b303b155b610fa35760405162461bcd60e51b815260040161064f906123b4565b600054610100900460ff16158015610fc5576000805461ffff19166101011790555b610fd186868585611006565b60cd80546001600160a01b0319166001600160a01b0386161790558015610ffe576000805461ff00191690555b505050505050565b600054610100900460ff166110215760005460ff1615611025565b303b155b6110415760405162461bcd60e51b815260040161064f906123b4565b600054610100900460ff16158015611063576000805461ffff19166101011790555b61106b6118a8565b6110736118df565b60ca805460ff60a01b1916600160a01b8615150217905581518351146110d25760405162461bcd60e51b81526020600482015260146024820152736572726f725f626164547261636b65724461746160601b604482015260640161064f565b60005b835181101561112c5761111a8482815181106110f3576110f361239e565b602002602001015184838151811061110d5761110d61239e565b602002602001015161095b565b8061112481612383565b9150506110d5565b506111368561114f565b8015611148576000805461ff00191690555b5050505050565b336111586109cf565b6001600160a01b03161461117e5760405162461bcd60e51b815260040161064f90612287565b6001600160a01b0381166111e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161064f565b6107e2816115d4565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b336112236109cf565b6001600160a01b0316146107e25760405162461bcd60e51b815260040161064f90612287565b60006112536111ec565b905061125e84611916565b60008351118061126b5750815b1561127c5761127a84846119bb565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661114857805460ff191660011781556040516112f79086906112c8908590602401611c76565b60408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b1790526119bb565b50805460ff191681556113086111ec565b6001600160a01b0316826001600160a01b0316146113805760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b606482015260840161064f565b61114885611aa6565b6001600160a01b038216600090815260cb60205260408120600281015490919061156357506040805160c0810182526001600160a01b0385811660608301818152608084018790524260a085015283526000602080850182905260c954600160401b900484168587015291815260cb8252939093208251805182546001600160a01b0319169316929092178155818401518051600195929392849261143692888501929190910190611ba7565b506040918201516002919091015560208301516003830180546001600160a01b03199081166001600160a01b0393841617909155939091015160049092018054909316911617905560c980546001600160401b031690600061149783612402565b82546001600160401b039182166101009390930a92830291909202199091161790555060c954600160401b90046001600160a01b03161561150e5760c954600160401b90046001600160a01b03908116600090815260cb6020526040902060030180546001600160a01b0319169186169190911790555b60ca546001600160a01b031661153a5760ca80546001600160a01b0319166001600160a01b0386161790555b60c98054600160401b600160e01b031916600160401b6001600160a01b03871602179055611580565b82516115789060018401906020860190611ba7565b504260028301555b600282015460405182916001600160a01b038716917f7b8ea65757bf0d882563917834f76c4df069ea7e489c9fc65bf764289792e334916115c691600188019190612429565b60405180910390a350505050565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260cb6020526040902060028101546116805760405162461bcd60e51b815260206004820152600e60248201526d195c9c9bdc97db9bdd119bdd5b9960921b604482015260640161064f565b60048101546001600160a01b0316156116cd5760048101546001600160a01b03908116600090815260cb60205260409020600380840154910180546001600160a01b031916919092161790555b60038101546001600160a01b03161561171a5760038101546001600160a01b03908116600090815260cb60205260409020600480840154910180546001600160a01b031916919092161790555b60c980546001600160401b0316906000611733836124d9565b91906101000a8154816001600160401b0302191690836001600160401b031602179055505060c960089054906101000a90046001600160a01b03166001600160a01b0316826001600160a01b031614156117c65760c980546001600160a01b03600160401b8083048216600090815260cb602052604090206004015490911602600160401b600160e01b03199091161790555b60ca546001600160a01b038381169116141561180e5760ca80546001600160a01b03808216600090815260cb6020526040902060030154166001600160a01b03199091161790555b6001600160a01b038216600090815260cb6020526040812080546001600160a01b03191681559081816118446001830182611c2b565b5060006002919091018190556003830180546001600160a01b031990811690915560049093018054909316909255506040516001600160a01b038416917fcfc24166db4bb677e857cacabd1541fb2b30645021b27c5130419589b84db52b91a25050565b600054610100900460ff166118cf5760405162461bcd60e51b815260040161064f906124fc565b6118d7611ae6565b6109cd611b0d565b600054610100900460ff166119065760405162461bcd60e51b815260040161064f906124fc565b61190e611ae6565b6109cd611ae6565b803b61197a5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161064f565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060823b611a1a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161064f565b600080846001600160a01b031684604051611a359190612547565b600060405180830381855af49150503d8060008114611a70576040519150601f19603f3d011682016040523d82523d6000602084013e611a75565b606091505b5091509150611a9d828260405180606001604052806027815260200161257760279139611b3d565b95945050505050565b611aaf81611916565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b600054610100900460ff166109cd5760405162461bcd60e51b815260040161064f906124fc565b600054610100900460ff16611b345760405162461bcd60e51b815260040161064f906124fc565b6109cd336115d4565b60608315611b4c575081611b76565b825115611b5c5782518084602001fd5b8160405162461bcd60e51b815260040161064f9190612563565b9392505050565b604051806060016040528060006001600160a01b0316815260200160608152602001600081525090565b828054611bb39061224c565b90600052602060002090601f016020900481019282611bd55760008555611c1b565b82601f10611bee57805160ff1916838001178555611c1b565b82800160010185558215611c1b579182015b82811115611c1b578251825591602001919060010190611c00565b50611c27929150611c61565b5090565b508054611c379061224c565b6000825580601f10611c47575050565b601f0160209004906000526020600020908101906107e291905b5b80821115611c275760008155600101611c62565b6001600160a01b0391909116815260200190565b80356001600160a01b0381168114611ca157600080fd5b919050565b600060208284031215611cb857600080fd5b611b7682611c8a565b60005b83811015611cdc578181015183820152602001611cc4565b83811115611ceb576000848401525b50505050565b60008151808452611d09816020860160208601611cc1565b601f01601f19169290920160200192915050565b60018060a01b0381511682526000602082015160606020850152611d446060850182611cf1565b604093840151949093019390935250919050565b606081526000611d6b6060830186611d1d565b6001600160a01b0394851660208401529290931660409091015292915050565b80358015158114611ca157600080fd5b600060208284031215611dad57600080fd5b611b7682611d8b565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611df457611df4611db6565b604052919050565b60006001600160401b03831115611e1557611e15611db6565b611e28601f8401601f1916602001611dcc565b9050828152838383011115611e3c57600080fd5b828260208301376000602084830101529392505050565b60008060408385031215611e6657600080fd5b611e6f83611c8a565b915060208301356001600160401b03811115611e8a57600080fd5b8301601f81018513611e9b57600080fd5b611eaa85823560208401611dfc565b9150509250929050565b600082601f830112611ec557600080fd5b611b7683833560208501611dfc565b60008060408385031215611ee757600080fd5b611ef083611c8a565b915060208301356001600160401b03811115611f0b57600080fd5b611eaa85828601611eb4565b600060208284031215611f2957600080fd5b81356001600160401b03811115611f3f57600080fd5b611f4b84828501611eb4565b949350505050565b634e487b7160e01b600052602160045260246000fd5b6020810160038310611f8b57634e487b7160e01b600052602160045260246000fd5b91905290565b602081526000611b766020830184611d1d565b600060208284031215611fb657600080fd5b5035919050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561201257603f19888603018452612000858351611d1d565b94509285019290850190600101611fe4565b5092979650505050505050565b60006001600160401b0382111561203857612038611db6565b5060051b60200190565b600082601f83011261205357600080fd5b813560206120686120638361201f565b611dcc565b82815260059290921b8401810191818101908684111561208757600080fd5b8286015b848110156120a95761209c81611c8a565b835291830191830161208b565b509695505050505050565b600082601f8301126120c557600080fd5b813560206120d56120638361201f565b82815260059290921b840181019181810190868411156120f457600080fd5b8286015b848110156120a95780356001600160401b038111156121175760008081fd5b6121258986838b0101611eb4565b8452509183019183016120f8565b600080600080600060a0868803121561214b57600080fd5b61215486611c8a565b945061216260208701611d8b565b935061217060408701611c8a565b925060608601356001600160401b038082111561218c57600080fd5b61219889838a01612042565b935060808801359150808211156121ae57600080fd5b506121bb888289016120b4565b9150509295509295909350565b600080600080608085870312156121de57600080fd5b6121e785611c8a565b93506121f560208601611d8b565b925060408501356001600160401b038082111561221157600080fd5b61221d88838901612042565b9350606087013591508082111561223357600080fd5b50612240878288016120b4565b91505092959194509250565b600181811c9082168061226057607f821691505b6020821081141561228157634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561236657600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156123975761239761236d565b5060010190565b634e487b7160e01b600052603260045260246000fd5b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60006001600160401b038083168181141561241f5761241f61236d565b6001019392505050565b60408152600080845481600182811c91508083168061244957607f831692505b602080841082141561246957634e487b7160e01b86526022600452602486fd5b60408801849052606088018280156124885760018114612499576124c4565b60ff198716825282820197506124c4565b60008c81526020902060005b878110156124be578154848201529086019084016124a5565b83019850505b50509690960196909652509095945050505050565b60006001600160401b038216806124f2576124f261236d565b6000190192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008251612559818460208701611cc1565b9190910192915050565b602081526000611b766020830184611cf156fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c53cf88582faf921cd27d273b4ad2457f4339c24ca342afac379243fe0283b6964736f6c63430008090033";

type WeightedNodeRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WeightedNodeRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WeightedNodeRegistry__factory extends ContractFactory {
  constructor(...args: WeightedNodeRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "WeightedNodeRegistry";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WeightedNodeRegistry> {
    return super.deploy(overrides || {}) as Promise<WeightedNodeRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WeightedNodeRegistry {
    return super.attach(address) as WeightedNodeRegistry;
  }
  connect(signer: Signer): WeightedNodeRegistry__factory {
    return super.connect(signer) as WeightedNodeRegistry__factory;
  }
  static readonly contractName: "WeightedNodeRegistry";
  public readonly contractName: "WeightedNodeRegistry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WeightedNodeRegistryInterface {
    return new utils.Interface(_abi) as WeightedNodeRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WeightedNodeRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as WeightedNodeRegistry;
  }
}
