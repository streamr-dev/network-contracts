/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StreamRegistryTimeBased,
  StreamRegistryTimeBasedInterface,
} from "../StreamRegistryTimeBased";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metadata",
        type: "string",
      },
    ],
    name: "StreamCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "streamid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "TransferedPublishRights",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "streamid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferedViewRights",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "desc",
        type: "string",
      },
    ],
    name: "createStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "deleteStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "desc",
        type: "string",
      },
    ],
    name: "editStream",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getDescription",
    outputs: [
      {
        internalType: "string",
        name: "des",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollingId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "streamIdToMetadata",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "streamIdToPermissions",
    outputs: [
      {
        internalType: "bool",
        name: "isAdmin",
        type: "bool",
      },
      {
        internalType: "uint8",
        name: "publishRights",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "subscriptionExpirationTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
    ],
    name: "transferPublishRights",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferViewTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805534801561001457600080fd5b50610dea806100246000396000f3fe608060405234801561001057600080fd5b50600436106100835760003560e01c80630b6cfd6c146100885780634577e57a146100a45780634925ec55146100c45780634ebd6c1d146100d75780636192e48e146100ec578063850d07b2146100ff578063875aa2e21461015d578063a1d6606914610170578063e8f041de14610183575b600080fd5b61009160005481565b6040519081526020015b60405180910390f35b6100b76100b23660046109c7565b610196565b60405161009b9190610a2d565b6100b76100d23660046109c7565b610230565b6100ea6100e53660046109c7565b610317565b005b6100ea6100fa366004610aea565b6103aa565b61013e61010d366004610b43565b60026020908152600092835260408084209091529082529020805460019091015460ff808316926101009004169083565b60408051931515845260ff90921660208401529082015260600161009b565b6100ea61016b366004610b6f565b61047d565b6100ea61017e366004610ba4565b610655565b6100ea610191366004610bea565b610854565b600160205260009081526040902080546101af90610c31565b80601f01602080910402602001604051908101604052809291908181526020018280546101db90610c31565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b505050505081565b60008181526001602052604090208054606091839161024e90610c31565b151590506102775760405162461bcd60e51b815260040161026e90610c66565b60405180910390fd5b6000838152600160205260409020805461029090610c31565b80601f01602080910402602001604051908101604052809291908181526020018280546102bc90610c31565b80156103095780601f106102de57610100808354040283529160200191610309565b820191906000526020600020905b8154815290600101906020018083116102ec57829003601f168201915b505050505091505b50919050565b6000818152600160205260409020805482919061033390610c31565b151590506103535760405162461bcd60e51b815260040161026e90610c66565b6000828152600260209081526040808320338452909152902054829060ff1661038e5760405162461bcd60e51b815260040161026e90610c91565b60008381526001602052604081206103a5916108f1565b505050565b6000546103b8906001610cda565b600081815590815260016020908152604090912082516103da9284019061092e565b5060408051606081018252600180825260208083018281526000848601818152815482526002845286822033808452945286822095518654935161ffff1990941690151561ff0019161761010060ff90941693909302929092178555905193909201929092555491517f38a5e92f55c4f52a55332d4b0550f094fdc9c8ea1a521e730bdad86f246456ef926104729290918590610cf2565b60405180910390a150565b6000838152600160205260409020805484919061049990610c31565b151590506104b95760405162461bcd60e51b815260040161026e90610c66565b6001600160a01b0383166104df5760405162461bcd60e51b815260040161026e90610d25565b600084815260026020908152604080832033845290915290205460ff1661059e57600084815260026020908152604080832033845290915290206001015482111561056c5760405162461bcd60e51b815260206004820152601c60248201527f6e6f207669657774696d65206c65667420746f207472616e7366657200000000604482015260640161026e565b600084815260026020908152604080832033845290915281206001018054849290610598908490610d55565b90915550505b60008481526002602090815260408083206001600160a01b0387168452909152902060010154428110156105cf5750425b6105d98382610cda565b60008681526002602090815260408083206001600160a01b0389168085529083529281902060010184905580518981523392810192909252810191909152606081018590529091507f529a057b902dd4bfea23808bf021d7f0cbbfd1f736a28adc58c23a973dfc59739060800160405180910390a15050505050565b6000838152600160205260409020805484919061067190610c31565b151590506106915760405162461bcd60e51b815260040161026e90610c66565b6001600160a01b0383166106b75760405162461bcd60e51b815260040161026e90610d25565b600084815260026020908152604080832033845290915290205460ff1661079957600084815260026020908152604080832033845290915290205460ff80841661010090920416101561074c5760405162461bcd60e51b815260206004820152601a60248201527f6e6f20726967687473206c65667420746f207472616e73666572000000000000604482015260640161026e565b600084815260026020908152604080832033845290915290208054839190600190610780908490610100900460ff16610d6c565b92506101000a81548160ff021916908360ff1602179055505b60008481526002602090815260408083206001600160a01b0387168452909152902080548391906001906107d6908490610100900460ff16610d8f565b92506101000a81548160ff021916908360ff1602179055507fa68d2dbdf3bea89977f9f16cdc4f686d6121935d5e58a6216f3fc78631206fad8433858560405161084694939291909384526001600160a01b0392831660208501529116604083015260ff16606082015260800190565b60405180910390a150505050565b6000828152600160205260409020805483919061087090610c31565b151590506108905760405162461bcd60e51b815260040161026e90610c66565b6000838152600260209081526040808320338452909152902054839060ff166108cb5760405162461bcd60e51b815260040161026e90610c91565b600084815260016020908152604090912084516108ea9286019061092e565b5050505050565b5080546108fd90610c31565b6000825580601f1061090d575050565b601f01602090049060005260206000209081019061092b91906109b2565b50565b82805461093a90610c31565b90600052602060002090601f01602090048101928261095c57600085556109a2565b82601f1061097557805160ff19168380011785556109a2565b828001600101855582156109a2579182015b828111156109a2578251825591602001919060010190610987565b506109ae9291506109b2565b5090565b5b808211156109ae57600081556001016109b3565b6000602082840312156109d957600080fd5b5035919050565b6000815180845260005b81811015610a06576020818501810151868301820152016109ea565b81811115610a18576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610a4060208301846109e0565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610a6e57600080fd5b813567ffffffffffffffff80821115610a8957610a89610a47565b604051601f8301601f19908116603f01168101908282118183101715610ab157610ab1610a47565b81604052838152866020858801011115610aca57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215610afc57600080fd5b813567ffffffffffffffff811115610b1357600080fd5b610b1f84828501610a5d565b949350505050565b80356001600160a01b0381168114610b3e57600080fd5b919050565b60008060408385031215610b5657600080fd5b82359150610b6660208401610b27565b90509250929050565b600080600060608486031215610b8457600080fd5b83359250610b9460208501610b27565b9150604084013590509250925092565b600080600060608486031215610bb957600080fd5b83359250610bc960208501610b27565b9150604084013560ff81168114610bdf57600080fd5b809150509250925092565b60008060408385031215610bfd57600080fd5b82359150602083013567ffffffffffffffff811115610c1b57600080fd5b610c2785828601610a5d565b9150509250929050565b600181811c90821680610c4557607f821691505b6020821081141561031157634e487b7160e01b600052602260045260246000fd5b6020808252601190820152701a5d195b48191bd95cdb89c8195e1a5cdd607a1b604082015260600190565b60208082526019908201527837379032b234ba17b232b632ba32903832b936b4b9b9b4b7b760391b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ced57610ced610cc4565b500190565b8381526001600160a01b0383166020820152606060408201819052600090610d1c908301846109e0565b95945050505050565b6020808252601690820152750726563697069656e74206164647265737320697320360541b604082015260600190565b600082821015610d6757610d67610cc4565b500390565b600060ff821660ff841680821015610d8657610d86610cc4565b90039392505050565b600060ff821660ff84168060ff03821115610dac57610dac610cc4565b01939250505056fea2646970667358221220bba5109d61badca39c872cc52ad2cf41fc524ff044697089095e753677ddcd4964736f6c63430008090033";

type StreamRegistryTimeBasedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StreamRegistryTimeBasedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StreamRegistryTimeBased__factory extends ContractFactory {
  constructor(...args: StreamRegistryTimeBasedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StreamRegistryTimeBased";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StreamRegistryTimeBased> {
    return super.deploy(overrides || {}) as Promise<StreamRegistryTimeBased>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StreamRegistryTimeBased {
    return super.attach(address) as StreamRegistryTimeBased;
  }
  connect(signer: Signer): StreamRegistryTimeBased__factory {
    return super.connect(signer) as StreamRegistryTimeBased__factory;
  }
  static readonly contractName: "StreamRegistryTimeBased";
  public readonly contractName: "StreamRegistryTimeBased";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StreamRegistryTimeBasedInterface {
    return new utils.Interface(_abi) as StreamRegistryTimeBasedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StreamRegistryTimeBased {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as StreamRegistryTimeBased;
  }
}
