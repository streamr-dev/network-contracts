/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NetworkParameters,
  NetworkParametersInterface,
} from "../NetworkParameters";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minControlLayerVersion_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minMessageLayerVersion_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "minNetworkReferenceCodeVersion_",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "minControlLayerVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minMessageLayerVersion",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minNetworkReferenceCodeVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "setMinControlLayerVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
    ],
    name: "setMinMessageLayerVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
    ],
    name: "setMinNetworkReferenceCodeVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress_",
        type: "address",
      },
    ],
    name: "setTokenAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516200092f3803806200092f8339810160408190526100319161015f565b600080546001600160a01b0319166001600160a01b038716179055600284905560038390558151610069906004906020850190610094565b50600580546001600160a01b0319166001600160a01b0392909216919091179055506102a392505050565b8280546100a090610268565b90600052602060002090601f0160209004810192826100c25760008555610108565b82601f106100db57805160ff1916838001178555610108565b82800160010185558215610108579182015b828111156101085782518255916020019190600101906100ed565b50610114929150610118565b5090565b5b808211156101145760008155600101610119565b80516001600160a01b038116811461014457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a0868803121561017757600080fd5b6101808661012d565b602087810151604089015160608a01519398509096509450906001600160401b03808211156101ae57600080fd5b818901915089601f8301126101c257600080fd5b8151818111156101d4576101d4610149565b604051601f8201601f19908116603f011681019083821181831017156101fc576101fc610149565b816040528281528c8684870101111561021457600080fd5b600093505b828410156102365784840186015181850187015292850192610219565b828411156102475760008684830101525b80975050505050505061025c6080870161012d565b90509295509295909350565b600181811c9082168061027c57607f821691505b6020821081141561029d57634e487b7160e01b600052602260045260246000fd5b50919050565b61067c80620002b36000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639d76ea58116100715780639d76ea581461012c578063a1f5776d1461013f578063aada845f14610154578063bf5da91a1461016b578063e30c397814610174578063f2fde38b1461018757600080fd5b806315f5b91a146100b957806326a4e8d2146100ce5780634e71e0c8146100e157806365add65e146100b957806378ba078a146100e95780638da5cb5b146100fc575b600080fd5b6100cc6100c7366004610483565b61019a565b005b6100cc6100dc36600461049c565b6101d2565b6100cc61021e565b6100cc6100f73660046104e2565b6102cf565b60005461010f906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b60055461010f906001600160a01b031681565b610147610310565b6040516101239190610593565b61015d60025481565b604051908152602001610123565b61015d60035481565b60015461010f906001600160a01b031681565b6100cc61019536600461049c565b61039e565b6000546001600160a01b031633146101cd5760405162461bcd60e51b81526004016101c4906105e8565b60405180910390fd5b600255565b6000546001600160a01b031633146101fc5760405162461bcd60e51b81526004016101c4906105e8565b600580546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b0316331461026b5760405162461bcd60e51b815260206004820152601060248201526f37b7363ca832b73234b733a7bbb732b960811b60448201526064016101c4565b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031633146102f95760405162461bcd60e51b81526004016101c4906105e8565b805161030c9060049060208401906103ea565b5050565b6004805461031d9061060b565b80601f01602080910402602001604051908101604052809291908181526020018280546103499061060b565b80156103965780601f1061036b57610100808354040283529160200191610396565b820191906000526020600020905b81548152906001019060200180831161037957829003601f168201915b505050505081565b6000546001600160a01b031633146103c85760405162461bcd60e51b81526004016101c4906105e8565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b8280546103f69061060b565b90600052602060002090601f016020900481019282610418576000855561045e565b82601f1061043157805160ff191683800117855561045e565b8280016001018555821561045e579182015b8281111561045e578251825591602001919060010190610443565b5061046a92915061046e565b5090565b5b8082111561046a576000815560010161046f565b60006020828403121561049557600080fd5b5035919050565b6000602082840312156104ae57600080fd5b81356001600160a01b03811681146104c557600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104f457600080fd5b813567ffffffffffffffff8082111561050c57600080fd5b818401915084601f83011261052057600080fd5b813581811115610532576105326104cc565b604051601f8201601f19908116603f0116810190838211818310171561055a5761055a6104cc565b8160405282815287602084870101111561057357600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156105c0578581018301518582016040015282016105a4565b818111156105d2576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526009908201526837b7363ca7bbb732b960b91b604082015260600190565b600181811c9082168061061f57607f821691505b6020821081141561064057634e487b7160e01b600052602260045260246000fd5b5091905056fea26469706673582212203f10f2489281e1eb30593da0c82ad0b3111ad371eff2bdc33887a9491701a0a864736f6c63430008090033";

type NetworkParametersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NetworkParametersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NetworkParameters__factory extends ContractFactory {
  constructor(...args: NetworkParametersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NetworkParameters";
  }

  deploy(
    owner: string,
    minControlLayerVersion_: BigNumberish,
    minMessageLayerVersion_: BigNumberish,
    minNetworkReferenceCodeVersion_: string,
    tokenAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NetworkParameters> {
    return super.deploy(
      owner,
      minControlLayerVersion_,
      minMessageLayerVersion_,
      minNetworkReferenceCodeVersion_,
      tokenAddress_,
      overrides || {}
    ) as Promise<NetworkParameters>;
  }
  getDeployTransaction(
    owner: string,
    minControlLayerVersion_: BigNumberish,
    minMessageLayerVersion_: BigNumberish,
    minNetworkReferenceCodeVersion_: string,
    tokenAddress_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      minControlLayerVersion_,
      minMessageLayerVersion_,
      minNetworkReferenceCodeVersion_,
      tokenAddress_,
      overrides || {}
    );
  }
  attach(address: string): NetworkParameters {
    return super.attach(address) as NetworkParameters;
  }
  connect(signer: Signer): NetworkParameters__factory {
    return super.connect(signer) as NetworkParameters__factory;
  }
  static readonly contractName: "NetworkParameters";
  public readonly contractName: "NetworkParameters";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NetworkParametersInterface {
    return new utils.Interface(_abi) as NetworkParametersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NetworkParameters {
    return new Contract(address, _abi, signerOrProvider) as NetworkParameters;
  }
}
