{"id":"afd04e43461471ac342422dee318a2e5","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts/token/ERC777/ERC777.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/ERC777.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n\n        address from = _msgSender();\n\n        _callTokensToSend(from, from, recipient, amount, \"\", \"\");\n\n        _move(from, from, recipient, amount, \"\", \"\");\n\n        _callTokensReceived(from, from, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return\n            operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators cannot\n     * call `transferFrom` (unless they have allowance), and accounts with\n     * allowance cannot call `operatorSend` (unless they are operators).\n     *\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n     */\n    function transferFrom(\n        address holder,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        require(recipient != address(0), \"ERC777: transfer to the zero address\");\n        require(holder != address(0), \"ERC777: transfer from the zero address\");\n\n        address spender = _msgSender();\n\n        _callTokensToSend(spender, holder, recipient, amount, \"\", \"\");\n\n        _move(spender, holder, recipient, amount, \"\", \"\");\n\n        uint256 currentAllowance = _allowances[holder][spender];\n        require(currentAllowance >= amount, \"ERC777: transfer amount exceeds allowance\");\n        _approve(holder, spender, currentAllowance - amount);\n\n        _callTokensReceived(spender, holder, recipient, amount, \"\", \"\", false);\n\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) internal virtual {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(from != address(0), \"ERC777: send from the zero address\");\n        require(to != address(0), \"ERC777: send to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) internal virtual {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(\n        address holder,\n        address spender,\n        uint256 value\n    ) internal {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC777/IERC777.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n}\n"},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Sender.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n *\n * {IERC777} Token holders can be notified of operations performed on their\n * tokens by having a contract implement this interface (contract holders can be\n * their own implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Sender {\n    /**\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\n     * is conveyed by `to` being the zero address or not.\n     *\n     * This call occurs _before_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC1820Registry.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the global ERC1820 Registry, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n * implementers for interfaces in this registry, as well as query support.\n *\n * Implementers may be shared by multiple accounts, and can also implement more\n * than a single interface for each account. Contracts can implement interfaces\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\n * contract.\n *\n * {IERC165} interfaces can also be queried via the registry.\n *\n * For an in-depth explanation and source code analysis, see the EIP text.\n */\ninterface IERC1820Registry {\n    /**\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\n     * account is able to set interface implementers for it.\n     *\n     * By default, each account is its own manager. Passing a value of `0x0` in\n     * `newManager` will reset the manager to this initial state.\n     *\n     * Emits a {ManagerChanged} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     */\n    function setManager(address account, address newManager) external;\n\n    /**\n     * @dev Returns the manager for `account`.\n     *\n     * See {setManager}.\n     */\n    function getManager(address account) external view returns (address);\n\n    /**\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\n     * `interfaceHash`.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     * The zero address can also be used in `implementer` to remove an old one.\n     *\n     * See {interfaceHash} to learn how these are created.\n     *\n     * Emits an {InterfaceImplementerSet} event.\n     *\n     * Requirements:\n     *\n     * - the caller must be the current manager for `account`.\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n     * end in 28 zeroes).\n     * - `implementer` must implement {IERC1820Implementer} and return true when\n     * queried for support, unless `implementer` is the caller. See\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\n     */\n    function setInterfaceImplementer(\n        address account,\n        bytes32 _interfaceHash,\n        address implementer\n    ) external;\n\n    /**\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\n     * implementer is registered, returns the zero address.\n     *\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n     * zeroes), `account` will be queried for support of it.\n     *\n     * `account` being the zero address is an alias for the caller's address.\n     */\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\n\n    /**\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\n     * corresponding\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\n     */\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\n\n    /**\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n     * @param account Address of the contract for which to update the cache.\n     * @param interfaceId ERC165 interface for which to update the cache.\n     */\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not.\n     * If the result is not cached a direct lookup on the contract address is performed.\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n     * {updateERC165Cache} with the contract address.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\n\n    /**\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n     * @param account Address of the contract to check.\n     * @param interfaceId ERC165 interface to check.\n     * @return True if `account` implements `interfaceId`, false otherwise.\n     */\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\n\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\n\n    event ManagerChanged(address indexed account, address indexed newManager);\n}\n"},"contracts/TestTokens/ERC777TestToken.sol":{"content":"// SPDX-License-Identifier: Unlicense\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC777/ERC777.sol\";\n\ncontract TestERC777 is ERC777 {\n    address[] public _defaultOperators = [address(this)];\n    constructor () ERC777(\"TestToken\", \"TST\", _defaultOperators) {}\n\n    function mint(address account, uint256 amount) public {\n        _mint(account, amount, \"\", \"\");\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":100},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[77]},"id":78,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:0"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"116:70:0","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":77,"linearizedBaseContracts":[77],"name":"IERC20","nameLocation":"197:6:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"210:66:0","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":8,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"290:11:0","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"301:2:0"},"returnParameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8,"src":"327:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"326:9:0"},"scope":77,"src":"281:55:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"342:72:0","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":16,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"428:9:0","nodeType":"FunctionDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"446:7:0","nodeType":"VariableDeclaration","scope":16,"src":"438:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"437:17:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16,"src":"478:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"477:9:0"},"scope":77,"src":"419:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"493:209:0","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"716:8:0","nodeType":"FunctionDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"mutability":"mutable","name":"recipient","nameLocation":"733:9:0","nodeType":"VariableDeclaration","scope":26,"src":"725:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"amount","nameLocation":"752:6:0","nodeType":"VariableDeclaration","scope":26,"src":"744:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"724:35:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":26,"src":"778:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":23,"name":"bool","nodeType":"ElementaryTypeName","src":"778:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"777:6:0"},"scope":77,"src":"707:77:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"790:264:0","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":36,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1068:9:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"owner","nameLocation":"1086:5:0","nodeType":"VariableDeclaration","scope":36,"src":"1078:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1078:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":31,"mutability":"mutable","name":"spender","nameLocation":"1101:7:0","nodeType":"VariableDeclaration","scope":36,"src":"1093:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":30,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1077:32:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[{"constant":false,"id":34,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":36,"src":"1133:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"1133:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1132:9:0"},"scope":77,"src":"1059:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":37,"nodeType":"StructuredDocumentation","src":"1148:642:0","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1804:7:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"spender","nameLocation":"1820:7:0","nodeType":"VariableDeclaration","scope":46,"src":"1812:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1812:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"amount","nameLocation":"1837:6:0","nodeType":"VariableDeclaration","scope":46,"src":"1829:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":40,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1811:33:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":46,"src":"1863:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":43,"name":"bool","nodeType":"ElementaryTypeName","src":"1863:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1862:6:0"},"scope":77,"src":"1795:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1875:296:0","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":58,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2185:12:0","nodeType":"FunctionDefinition","parameters":{"id":54,"nodeType":"ParameterList","parameters":[{"constant":false,"id":49,"mutability":"mutable","name":"sender","nameLocation":"2215:6:0","nodeType":"VariableDeclaration","scope":58,"src":"2207:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":48,"name":"address","nodeType":"ElementaryTypeName","src":"2207:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":51,"mutability":"mutable","name":"recipient","nameLocation":"2239:9:0","nodeType":"VariableDeclaration","scope":58,"src":"2231:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2231:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"amount","nameLocation":"2266:6:0","nodeType":"VariableDeclaration","scope":58,"src":"2258:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"2258:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2197:81:0"},"returnParameters":{"id":57,"nodeType":"ParameterList","parameters":[{"constant":false,"id":56,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":58,"src":"2297:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":55,"name":"bool","nodeType":"ElementaryTypeName","src":"2297:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2296:6:0"},"scope":77,"src":"2176:127:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"2309:158:0","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":67,"name":"Transfer","nameLocation":"2478:8:0","nodeType":"EventDefinition","parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2503:4:0","nodeType":"VariableDeclaration","scope":67,"src":"2487:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2525:2:0","nodeType":"VariableDeclaration","scope":67,"src":"2509:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2537:5:0","nodeType":"VariableDeclaration","scope":67,"src":"2529:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":64,"name":"uint256","nodeType":"ElementaryTypeName","src":"2529:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2486:57:0"},"src":"2472:72:0"},{"anonymous":false,"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"2550:148:0","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":76,"name":"Approval","nameLocation":"2709:8:0","nodeType":"EventDefinition","parameters":{"id":75,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2734:5:0","nodeType":"VariableDeclaration","scope":76,"src":"2718:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":69,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":72,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2757:7:0","nodeType":"VariableDeclaration","scope":76,"src":"2741:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":71,"name":"address","nodeType":"ElementaryTypeName","src":"2741:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":74,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2774:5:0","nodeType":"VariableDeclaration","scope":76,"src":"2766:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":73,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2717:63:0"},"src":"2703:78:0"}],"scope":78,"src":"187:2596:0","usedErrors":[]}],"src":"91:2693:0"},"id":0},"@openzeppelin/contracts/token/ERC777/ERC777.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC777/ERC777.sol","exportedSymbols":{"Address":[1710],"Context":[1732],"ERC777":[1214],"IERC1820Registry":[1822],"IERC20":[77],"IERC777":[1373],"IERC777Recipient":[1393],"IERC777Sender":[1413]},"id":1215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":79,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:1"},{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777.sol","file":"./IERC777.sol","id":80,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1374,"src":"117:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol","file":"./IERC777Recipient.sol","id":81,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1394,"src":"141:32:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol","file":"./IERC777Sender.sol","id":82,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1414,"src":"174:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../ERC20/IERC20.sol","id":83,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":78,"src":"204:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":84,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1711,"src":"234:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":85,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1733,"src":"268:33:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol","file":"../../utils/introspection/IERC1820Registry.sol","id":86,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1215,"sourceUnit":1823,"src":"302:56:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":88,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1732,"src":"1092:7:1"},"id":89,"nodeType":"InheritanceSpecifier","src":"1092:7:1"},{"baseName":{"id":90,"name":"IERC777","nodeType":"IdentifierPath","referencedDeclaration":1373,"src":"1101:7:1"},"id":91,"nodeType":"InheritanceSpecifier","src":"1101:7:1"},{"baseName":{"id":92,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"1110:6:1"},"id":93,"nodeType":"InheritanceSpecifier","src":"1110:6:1"}],"canonicalName":"ERC777","contractDependencies":[],"contractKind":"contract","documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"360:712:1","text":" @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."},"fullyImplemented":true,"id":1214,"linearizedBaseContracts":[1214,77,1373,1732],"name":"ERC777","nameLocation":"1082:6:1","nodeType":"ContractDefinition","nodes":[{"id":96,"libraryName":{"id":94,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":1710,"src":"1129:7:1"},"nodeType":"UsingForDirective","src":"1123:26:1","typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"1141:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"constant":true,"id":102,"mutability":"constant","name":"_ERC1820_REGISTRY","nameLocation":"1190:17:1","nodeType":"VariableDeclaration","scope":1214,"src":"1155:115:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1820Registry_$1822","typeString":"contract IERC1820Registry"},"typeName":{"id":98,"nodeType":"UserDefinedTypeName","pathNode":{"id":97,"name":"IERC1820Registry","nodeType":"IdentifierPath","referencedDeclaration":1822,"src":"1155:16:1"},"referencedDeclaration":1822,"src":"1155:16:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1820Registry_$1822","typeString":"contract IERC1820Registry"}},"value":{"arguments":[{"hexValue":"307831383230613442373631384264453731446365386364633733614142364339353930356661443234","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1227:42:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":99,"name":"IERC1820Registry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1822,"src":"1210:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1820Registry_$1822_$","typeString":"type(contract IERC1820Registry)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1210:60:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1820Registry_$1822","typeString":"contract IERC1820Registry"}},"visibility":"internal"},{"constant":false,"id":106,"mutability":"mutable","name":"_balances","nameLocation":"1313:9:1","nodeType":"VariableDeclaration","scope":1214,"src":"1277:45:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":105,"keyType":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1277:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1296:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":108,"mutability":"mutable","name":"_totalSupply","nameLocation":"1345:12:1","nodeType":"VariableDeclaration","scope":1214,"src":"1329:28:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":107,"name":"uint256","nodeType":"ElementaryTypeName","src":"1329:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":110,"mutability":"mutable","name":"_name","nameLocation":"1379:5:1","nodeType":"VariableDeclaration","scope":1214,"src":"1364:20:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":109,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":112,"mutability":"mutable","name":"_symbol","nameLocation":"1405:7:1","nodeType":"VariableDeclaration","scope":1214,"src":"1390:22:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":111,"name":"string","nodeType":"ElementaryTypeName","src":"1390:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":true,"id":117,"mutability":"constant","name":"_TOKENS_SENDER_INTERFACE_HASH","nameLocation":"1444:29:1","nodeType":"VariableDeclaration","scope":1214,"src":"1419:88:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":113,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1419:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"455243373737546f6b656e7353656e646572","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1486:20:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895","typeString":"literal_string \"ERC777TokensSender\""},"value":"ERC777TokensSender"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895","typeString":"literal_string \"ERC777TokensSender\""}],"id":114,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1476:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1476:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":true,"id":122,"mutability":"constant","name":"_TOKENS_RECIPIENT_INTERFACE_HASH","nameLocation":"1538:32:1","nodeType":"VariableDeclaration","scope":1214,"src":"1513:94:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":118,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1513:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"455243373737546f6b656e73526563697069656e74","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1583:23:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b","typeString":"literal_string \"ERC777TokensRecipient\""},"value":"ERC777TokensRecipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b","typeString":"literal_string \"ERC777TokensRecipient\""}],"id":119,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1573:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1573:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":125,"mutability":"mutable","name":"_defaultOperatorsArray","nameLocation":"1724:22:1","nodeType":"VariableDeclaration","scope":1214,"src":"1706:40:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":123,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":124,"nodeType":"ArrayTypeName","src":"1706:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"private"},{"constant":false,"id":129,"mutability":"mutable","name":"_defaultOperators","nameLocation":"1873:17:1","nodeType":"VariableDeclaration","scope":1214,"src":"1840:50:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":128,"keyType":{"id":126,"name":"address","nodeType":"ElementaryTypeName","src":"1848:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1840:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":127,"name":"bool","nodeType":"ElementaryTypeName","src":"1859:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":135,"mutability":"mutable","name":"_operators","nameLocation":"2033:10:1","nodeType":"VariableDeclaration","scope":1214,"src":"1980:63:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":134,"keyType":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"1988:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1980:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":133,"keyType":{"id":131,"name":"address","nodeType":"ElementaryTypeName","src":"2007:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1999:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":132,"name":"bool","nodeType":"ElementaryTypeName","src":"2018:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":141,"mutability":"mutable","name":"_revokedDefaultOperators","nameLocation":"2102:24:1","nodeType":"VariableDeclaration","scope":1214,"src":"2049:77:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":140,"keyType":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"2057:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2049:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":139,"keyType":{"id":137,"name":"address","nodeType":"ElementaryTypeName","src":"2076:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2068:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":138,"name":"bool","nodeType":"ElementaryTypeName","src":"2087:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":147,"mutability":"mutable","name":"_allowances","nameLocation":"2213:11:1","nodeType":"VariableDeclaration","scope":1214,"src":"2157:67:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":146,"keyType":{"id":142,"name":"address","nodeType":"ElementaryTypeName","src":"2165:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2157:47:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":145,"keyType":{"id":143,"name":"address","nodeType":"ElementaryTypeName","src":"2184:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2176:27:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2195:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"body":{"id":223,"nodeType":"Block","src":"2423:490:1","statements":[{"expression":{"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":158,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"2433:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":159,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"2441:5:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2433:13:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":161,"nodeType":"ExpressionStatement","src":"2433:13:1"},{"expression":{"id":164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":162,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"2456:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":163,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"2466:7:1","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2456:17:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":165,"nodeType":"ExpressionStatement","src":"2456:17:1"},{"expression":{"id":168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":166,"name":"_defaultOperatorsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"2484:22:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":167,"name":"defaultOperators_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2509:17:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"src":"2484:42:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":169,"nodeType":"ExpressionStatement","src":"2484:42:1"},{"body":{"id":189,"nodeType":"Block","src":"2591:71:1","statements":[{"expression":{"id":187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":181,"name":"_defaultOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"2605:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":185,"indexExpression":{"baseExpression":{"id":182,"name":"defaultOperators_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2623:17:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":184,"indexExpression":{"id":183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2641:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2623:20:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2605:39:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2647:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2605:46:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"2605:46:1"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":174,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2556:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":175,"name":"defaultOperators_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"2560:17:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2560:24:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2556:28:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":190,"initializationExpression":{"assignments":[171],"declarations":[{"constant":false,"id":171,"mutability":"mutable","name":"i","nameLocation":"2549:1:1","nodeType":"VariableDeclaration","scope":190,"src":"2541:9:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"2541:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":173,"initialValue":{"hexValue":"30","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2553:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2541:13:1"},"loopExpression":{"expression":{"id":179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2586:3:1","subExpression":{"id":178,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"2586:1:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":180,"nodeType":"ExpressionStatement","src":"2586:3:1"},"nodeType":"ForStatement","src":"2536:126:1"},{"expression":{"arguments":[{"arguments":[{"id":196,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2753:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC777_$1214","typeString":"contract ERC777"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC777_$1214","typeString":"contract ERC777"}],"id":195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2745:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"2745:7:1","typeDescriptions":{}}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2745:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"455243373737546f6b656e","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2770:13:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054","typeString":"literal_string \"ERC777Token\""},"value":"ERC777Token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054","typeString":"literal_string \"ERC777Token\""}],"id":198,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2760:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2760:24:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":203,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2794:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC777_$1214","typeString":"contract ERC777"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC777_$1214","typeString":"contract ERC777"}],"id":202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2786:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"2786:7:1","typeDescriptions":{}}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2786:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":191,"name":"_ERC1820_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2703:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1820Registry_$1822","typeString":"contract IERC1820Registry"}},"id":193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setInterfaceImplementer","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"2703:41:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) external"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2703:97:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"2703:97:1"},{"expression":{"arguments":[{"arguments":[{"id":212,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2860:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC777_$1214","typeString":"contract ERC777"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC777_$1214","typeString":"contract ERC777"}],"id":211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2852:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":210,"name":"address","nodeType":"ElementaryTypeName","src":"2852:7:1","typeDescriptions":{}}},"id":213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2852:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"4552433230546f6b656e","id":215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2877:12:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a","typeString":"literal_string \"ERC20Token\""},"value":"ERC20Token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a","typeString":"literal_string \"ERC20Token\""}],"id":214,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2867:9:1","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2867:23:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":219,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2900:4:1","typeDescriptions":{"typeIdentifier":"t_contract$_ERC777_$1214","typeString":"contract ERC777"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC777_$1214","typeString":"contract ERC777"}],"id":218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2892:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"2892:7:1","typeDescriptions":{}}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2892:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":207,"name":"_ERC1820_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"2810:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1820Registry_$1822","typeString":"contract IERC1820Registry"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"setInterfaceImplementer","nodeType":"MemberAccess","referencedDeclaration":1761,"src":"2810:41:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$","typeString":"function (address,bytes32,address) external"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2810:96:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"ExpressionStatement","src":"2810:96:1"}]},"documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"2231:65:1","text":" @dev `defaultOperators` may be an empty array."},"id":224,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"name_","nameLocation":"2336:5:1","nodeType":"VariableDeclaration","scope":224,"src":"2322:19:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":149,"name":"string","nodeType":"ElementaryTypeName","src":"2322:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"symbol_","nameLocation":"2365:7:1","nodeType":"VariableDeclaration","scope":224,"src":"2351:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":151,"name":"string","nodeType":"ElementaryTypeName","src":"2351:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"defaultOperators_","nameLocation":"2399:17:1","nodeType":"VariableDeclaration","scope":224,"src":"2382:34:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"2382:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":154,"nodeType":"ArrayTypeName","src":"2382:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"2312:110:1"},"returnParameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"2423:0:1"},"scope":1214,"src":"2301:612:1","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1223],"body":{"id":233,"nodeType":"Block","src":"3036:29:1","statements":[{"expression":{"id":231,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":110,"src":"3053:5:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":230,"id":232,"nodeType":"Return","src":"3046:12:1"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"2919:43:1","text":" @dev See {IERC777-name}."},"functionSelector":"06fdde03","id":234,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2976:4:1","nodeType":"FunctionDefinition","overrides":{"id":227,"nodeType":"OverrideSpecifier","overrides":[],"src":"3003:8:1"},"parameters":{"id":226,"nodeType":"ParameterList","parameters":[],"src":"2980:2:1"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":234,"src":"3021:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":228,"name":"string","nodeType":"ElementaryTypeName","src":"3021:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3020:15:1"},"scope":1214,"src":"2967:98:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1229],"body":{"id":243,"nodeType":"Block","src":"3192:31:1","statements":[{"expression":{"id":241,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"3209:7:1","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":240,"id":242,"nodeType":"Return","src":"3202:14:1"}]},"documentation":{"id":235,"nodeType":"StructuredDocumentation","src":"3071:45:1","text":" @dev See {IERC777-symbol}."},"functionSelector":"95d89b41","id":244,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"3130:6:1","nodeType":"FunctionDefinition","overrides":{"id":237,"nodeType":"OverrideSpecifier","overrides":[],"src":"3159:8:1"},"parameters":{"id":236,"nodeType":"ParameterList","parameters":[],"src":"3136:2:1"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":244,"src":"3177:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":238,"name":"string","nodeType":"ElementaryTypeName","src":"3177:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3176:15:1"},"scope":1214,"src":"3121:102:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":252,"nodeType":"Block","src":"3463:26:1","statements":[{"expression":{"hexValue":"3138","id":250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3480:2:1","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":249,"id":251,"nodeType":"Return","src":"3473:9:1"}]},"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"3229:173:1","text":" @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."},"functionSelector":"313ce567","id":253,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3416:8:1","nodeType":"FunctionDefinition","parameters":{"id":246,"nodeType":"ParameterList","parameters":[],"src":"3424:2:1"},"returnParameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":253,"src":"3456:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":247,"name":"uint8","nodeType":"ElementaryTypeName","src":"3456:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3455:7:1"},"scope":1214,"src":"3407:82:1","stateMutability":"pure","virtual":true,"visibility":"public"},{"baseFunctions":[1235],"body":{"id":262,"nodeType":"Block","src":"3674:25:1","statements":[{"expression":{"hexValue":"31","id":260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3691:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":259,"id":261,"nodeType":"Return","src":"3684:8:1"}]},"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"3495:104:1","text":" @dev See {IERC777-granularity}.\n This implementation always returns `1`."},"functionSelector":"556f0dc7","id":263,"implemented":true,"kind":"function","modifiers":[],"name":"granularity","nameLocation":"3613:11:1","nodeType":"FunctionDefinition","overrides":{"id":256,"nodeType":"OverrideSpecifier","overrides":[],"src":"3647:8:1"},"parameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"3624:2:1"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":263,"src":"3665:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"3665:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3664:9:1"},"scope":1214,"src":"3604:95:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[8,1241],"body":{"id":274,"nodeType":"Block","src":"3847:36:1","statements":[{"expression":{"id":272,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"3864:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":271,"id":273,"nodeType":"Return","src":"3857:19:1"}]},"documentation":{"id":264,"nodeType":"StructuredDocumentation","src":"3705:50:1","text":" @dev See {IERC777-totalSupply}."},"functionSelector":"18160ddd","id":275,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3769:11:1","nodeType":"FunctionDefinition","overrides":{"id":268,"nodeType":"OverrideSpecifier","overrides":[{"id":266,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"3812:6:1"},{"id":267,"name":"IERC777","nodeType":"IdentifierPath","referencedDeclaration":1373,"src":"3820:7:1"}],"src":"3803:25:1"},"parameters":{"id":265,"nodeType":"ParameterList","parameters":[],"src":"3780:2:1"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":275,"src":"3838:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"3838:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3837:9:1"},"scope":1214,"src":"3760:123:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[16,1249],"body":{"id":290,"nodeType":"Block","src":"4087:46:1","statements":[{"expression":{"baseExpression":{"id":286,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"4104:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":288,"indexExpression":{"id":287,"name":"tokenHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":278,"src":"4114:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4104:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":285,"id":289,"nodeType":"Return","src":"4097:29:1"}]},"documentation":{"id":276,"nodeType":"StructuredDocumentation","src":"3889:89:1","text":" @dev Returns the amount of tokens owned by an account (`tokenHolder`)."},"functionSelector":"70a08231","id":291,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3992:9:1","nodeType":"FunctionDefinition","overrides":{"id":282,"nodeType":"OverrideSpecifier","overrides":[{"id":280,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":77,"src":"4052:6:1"},{"id":281,"name":"IERC777","nodeType":"IdentifierPath","referencedDeclaration":1373,"src":"4060:7:1"}],"src":"4043:25:1"},"parameters":{"id":279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":278,"mutability":"mutable","name":"tokenHolder","nameLocation":"4010:11:1","nodeType":"VariableDeclaration","scope":291,"src":"4002:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":277,"name":"address","nodeType":"ElementaryTypeName","src":"4002:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4001:21:1"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":291,"src":"4078:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":283,"name":"uint256","nodeType":"ElementaryTypeName","src":"4078:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4077:9:1"},"scope":1214,"src":"3983:150:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1259],"body":{"id":312,"nodeType":"Block","src":"4385:71:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":303,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4401:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4401:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":305,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"4415:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":306,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"4426:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":307,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"4434:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4440:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"74727565","id":309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4444:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":302,"name":"_send","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"4395:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bytes memory,bytes memory,bool)"}},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4395:54:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":311,"nodeType":"ExpressionStatement","src":"4395:54:1"}]},"documentation":{"id":292,"nodeType":"StructuredDocumentation","src":"4139:119:1","text":" @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."},"functionSelector":"9bd9bbc6","id":313,"implemented":true,"kind":"function","modifiers":[],"name":"send","nameLocation":"4272:4:1","nodeType":"FunctionDefinition","overrides":{"id":300,"nodeType":"OverrideSpecifier","overrides":[],"src":"4376:8:1"},"parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":294,"mutability":"mutable","name":"recipient","nameLocation":"4294:9:1","nodeType":"VariableDeclaration","scope":313,"src":"4286:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":293,"name":"address","nodeType":"ElementaryTypeName","src":"4286:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"amount","nameLocation":"4321:6:1","nodeType":"VariableDeclaration","scope":313,"src":"4313:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4313:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"data","nameLocation":"4350:4:1","nodeType":"VariableDeclaration","scope":313,"src":"4337:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":297,"name":"bytes","nodeType":"ElementaryTypeName","src":"4337:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4276:84:1"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[],"src":"4385:0:1"},"scope":1214,"src":"4263:193:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[26],"body":{"id":369,"nodeType":"Block","src":"4779:347:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":325,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"4797:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4818:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":326,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:1","typeDescriptions":{}}},"id":329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4810:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4797:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373","id":331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4822:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a","typeString":"literal_string \"ERC777: transfer to the zero address\""},"value":"ERC777: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a","typeString":"literal_string \"ERC777: transfer to the zero address\""}],"id":324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4789:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4789:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":333,"nodeType":"ExpressionStatement","src":"4789:72:1"},{"assignments":[335],"declarations":[{"constant":false,"id":335,"mutability":"mutable","name":"from","nameLocation":"4880:4:1","nodeType":"VariableDeclaration","scope":369,"src":"4872:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"4872:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":338,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":336,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"4887:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4887:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4872:27:1"},{"expression":{"arguments":[{"id":340,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4928:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":341,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4934:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":342,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"4940:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":343,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"4951:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4959:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4963:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":339,"name":"_callTokensToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"4910:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4910:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"4910:56:1"},{"expression":{"arguments":[{"id":349,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4983:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":350,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"4989:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":351,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"4995:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":352,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5006:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5014:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5018:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":348,"name":"_move","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"4977:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory)"}},"id":355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4977:44:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":356,"nodeType":"ExpressionStatement","src":"4977:44:1"},{"expression":{"arguments":[{"id":358,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"5052:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":359,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":335,"src":"5058:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":360,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"5064:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":361,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5075:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5083:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5087:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"66616c7365","id":364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5091:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":357,"name":"_callTokensReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"5032:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory,bool)"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5032:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":366,"nodeType":"ExpressionStatement","src":"5032:65:1"},{"expression":{"hexValue":"74727565","id":367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5115:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":323,"id":368,"nodeType":"Return","src":"5108:11:1"}]},"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"4462:220:1","text":" @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."},"functionSelector":"a9059cbb","id":370,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"4696:8:1","nodeType":"FunctionDefinition","overrides":{"id":320,"nodeType":"OverrideSpecifier","overrides":[],"src":"4755:8:1"},"parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"recipient","nameLocation":"4713:9:1","nodeType":"VariableDeclaration","scope":370,"src":"4705:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"4705:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":318,"mutability":"mutable","name":"amount","nameLocation":"4732:6:1","nodeType":"VariableDeclaration","scope":370,"src":"4724:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4724:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4704:35:1"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"4773:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":321,"name":"bool","nodeType":"ElementaryTypeName","src":"4773:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4772:6:1"},"scope":1214,"src":"4687:439:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1267],"body":{"id":387,"nodeType":"Block","src":"5329:54:1","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":380,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5345:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5345:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":382,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"5359:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":383,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":375,"src":"5367:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"","id":384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5373:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":379,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"5339:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory,bytes memory)"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5339:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":386,"nodeType":"ExpressionStatement","src":"5339:37:1"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"5132:119:1","text":" @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."},"functionSelector":"fe9d9303","id":388,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"5265:4:1","nodeType":"FunctionDefinition","overrides":{"id":377,"nodeType":"OverrideSpecifier","overrides":[],"src":"5320:8:1"},"parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"amount","nameLocation":"5278:6:1","nodeType":"VariableDeclaration","scope":388,"src":"5270:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"5270:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"data","nameLocation":"5299:4:1","nodeType":"VariableDeclaration","scope":388,"src":"5286:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":374,"name":"bytes","nodeType":"ElementaryTypeName","src":"5286:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5269:35:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"5329:0:1"},"scope":1214,"src":"5256:127:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1277],"body":{"id":421,"nodeType":"Block","src":"5552:205:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":399,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5581:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":400,"name":"tokenHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5593:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5581:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":402,"name":"_defaultOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5621:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":404,"indexExpression":{"id":403,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5639:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5621:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5652:48:1","subExpression":{"baseExpression":{"baseExpression":{"id":405,"name":"_revokedDefaultOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"5653:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":407,"indexExpression":{"id":406,"name":"tokenHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5678:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5653:37:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":409,"indexExpression":{"id":408,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5691:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5653:47:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5621:79:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":412,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5620:81:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5581:120:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"baseExpression":{"id":414,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"5717:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":416,"indexExpression":{"id":415,"name":"tokenHolder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":393,"src":"5728:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5717:23:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":418,"indexExpression":{"id":417,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"5741:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5717:33:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5581:169:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":398,"id":420,"nodeType":"Return","src":"5562:188:1"}]},"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"5389:52:1","text":" @dev See {IERC777-isOperatorFor}."},"functionSelector":"d95b6371","id":422,"implemented":true,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"5455:13:1","nodeType":"FunctionDefinition","overrides":{"id":395,"nodeType":"OverrideSpecifier","overrides":[],"src":"5528:8:1"},"parameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"operator","nameLocation":"5477:8:1","nodeType":"VariableDeclaration","scope":422,"src":"5469:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"5469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":393,"mutability":"mutable","name":"tokenHolder","nameLocation":"5495:11:1","nodeType":"VariableDeclaration","scope":422,"src":"5487:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":392,"name":"address","nodeType":"ElementaryTypeName","src":"5487:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5468:39:1"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":397,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":422,"src":"5546:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":396,"name":"bool","nodeType":"ElementaryTypeName","src":"5546:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5545:6:1"},"scope":1214,"src":"5446:311:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":466,"nodeType":"Block","src":"5893:343:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":430,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"5911:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5911:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":432,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"5927:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5911:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5937:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c","typeString":"literal_string \"ERC777: authorizing self as operator\""},"value":"ERC777: authorizing self as operator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c","typeString":"literal_string \"ERC777: authorizing self as operator\""}],"id":429,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5903:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5903:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"5903:73:1"},{"condition":{"baseExpression":{"id":437,"name":"_defaultOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5991:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":439,"indexExpression":{"id":438,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6009:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5991:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":458,"nodeType":"Block","src":"6106:66:1","statements":[{"expression":{"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":449,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6120:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":453,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":450,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6131:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6131:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6120:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":454,"indexExpression":{"id":452,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6145:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6120:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6157:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6120:41:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":457,"nodeType":"ExpressionStatement","src":"6120:41:1"}]},"id":459,"nodeType":"IfStatement","src":"5987:185:1","trueBody":{"id":448,"nodeType":"Block","src":"6020:80:1","statements":[{"expression":{"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6034:55:1","subExpression":{"baseExpression":{"baseExpression":{"id":440,"name":"_revokedDefaultOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6041:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":443,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":441,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6066:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6066:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6041:38:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":445,"indexExpression":{"id":444,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6080:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6041:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":447,"nodeType":"ExpressionStatement","src":"6034:55:1"}]}},{"eventCall":{"arguments":[{"id":461,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":425,"src":"6206:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":462,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6216:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6216:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":460,"name":"AuthorizedOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"6187:18:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6187:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"EmitStatement","src":"6182:47:1"}]},"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"5763:56:1","text":" @dev See {IERC777-authorizeOperator}."},"functionSelector":"959b8c3f","id":467,"implemented":true,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"5833:17:1","nodeType":"FunctionDefinition","overrides":{"id":427,"nodeType":"OverrideSpecifier","overrides":[],"src":"5884:8:1"},"parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"operator","nameLocation":"5859:8:1","nodeType":"VariableDeclaration","scope":467,"src":"5851:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"5851:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5850:18:1"},"returnParameters":{"id":428,"nodeType":"ParameterList","parameters":[],"src":"5893:0:1"},"scope":1214,"src":"5824:412:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1289],"body":{"id":511,"nodeType":"Block","src":"6366:337:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":475,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6384:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":476,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6396:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6396:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6384:24:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a207265766f6b696e672073656c66206173206f70657261746f72","id":479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6410:35:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5","typeString":"literal_string \"ERC777: revoking self as operator\""},"value":"ERC777: revoking self as operator"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5","typeString":"literal_string \"ERC777: revoking self as operator\""}],"id":474,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6376:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6376:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":481,"nodeType":"ExpressionStatement","src":"6376:70:1"},{"condition":{"baseExpression":{"id":482,"name":"_defaultOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"6461:17:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":484,"indexExpression":{"id":483,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6479:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6461:27:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":503,"nodeType":"Block","src":"6576:66:1","statements":[{"expression":{"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6590:41:1","subExpression":{"baseExpression":{"baseExpression":{"id":495,"name":"_operators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":135,"src":"6597:10:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":498,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":496,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6608:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6608:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6597:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":500,"indexExpression":{"id":499,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6622:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6597:34:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":502,"nodeType":"ExpressionStatement","src":"6590:41:1"}]},"id":504,"nodeType":"IfStatement","src":"6457:185:1","trueBody":{"id":494,"nodeType":"Block","src":"6490:80:1","statements":[{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":485,"name":"_revokedDefaultOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"6504:24:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":489,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":486,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6529:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6529:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6504:38:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":490,"indexExpression":{"id":488,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6543:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6504:48:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6555:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6504:55:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":493,"nodeType":"ExpressionStatement","src":"6504:55:1"}]}},{"eventCall":{"arguments":[{"id":506,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":470,"src":"6673:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":507,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"6683:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6683:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":505,"name":"RevokedOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"6657:15:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6657:39:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":510,"nodeType":"EmitStatement","src":"6652:44:1"}]},"documentation":{"id":468,"nodeType":"StructuredDocumentation","src":"6242:53:1","text":" @dev See {IERC777-revokeOperator}."},"functionSelector":"fad8b32a","id":512,"implemented":true,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"6309:14:1","nodeType":"FunctionDefinition","overrides":{"id":472,"nodeType":"OverrideSpecifier","overrides":[],"src":"6357:8:1"},"parameters":{"id":471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":470,"mutability":"mutable","name":"operator","nameLocation":"6332:8:1","nodeType":"VariableDeclaration","scope":512,"src":"6324:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"6324:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6323:18:1"},"returnParameters":{"id":473,"nodeType":"ParameterList","parameters":[],"src":"6366:0:1"},"scope":1214,"src":"6300:403:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1296],"body":{"id":522,"nodeType":"Block","src":"6853:46:1","statements":[{"expression":{"id":520,"name":"_defaultOperatorsArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":125,"src":"6870:22:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":519,"id":521,"nodeType":"Return","src":"6863:29:1"}]},"documentation":{"id":513,"nodeType":"StructuredDocumentation","src":"6709:55:1","text":" @dev See {IERC777-defaultOperators}."},"functionSelector":"06e48538","id":523,"implemented":true,"kind":"function","modifiers":[],"name":"defaultOperators","nameLocation":"6778:16:1","nodeType":"FunctionDefinition","overrides":{"id":515,"nodeType":"OverrideSpecifier","overrides":[],"src":"6817:8:1"},"parameters":{"id":514,"nodeType":"ParameterList","parameters":[],"src":"6794:2:1"},"returnParameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":523,"src":"6835:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":516,"name":"address","nodeType":"ElementaryTypeName","src":"6835:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":517,"nodeType":"ArrayTypeName","src":"6835:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6834:18:1"},"scope":1214,"src":"6769:130:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1310],"body":{"id":556,"nodeType":"Block","src":"7207:177:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":540,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"7239:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7239:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":542,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"7253:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":539,"name":"isOperatorFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7225:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7225:35:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572","id":544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7262:46:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235","typeString":"literal_string \"ERC777: caller is not an operator for holder\""},"value":"ERC777: caller is not an operator for holder"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235","typeString":"literal_string \"ERC777: caller is not an operator for holder\""}],"id":538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7217:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7217:92:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":546,"nodeType":"ExpressionStatement","src":"7217:92:1"},{"expression":{"arguments":[{"id":548,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":526,"src":"7325:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":549,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"7333:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":550,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":530,"src":"7344:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":551,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"7352:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":552,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"7358:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7372:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":547,"name":"_send","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"7319:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bytes memory,bytes memory,bool)"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7319:58:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":555,"nodeType":"ExpressionStatement","src":"7319:58:1"}]},"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"6905:108:1","text":" @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."},"functionSelector":"62ad1b83","id":557,"implemented":true,"kind":"function","modifiers":[],"name":"operatorSend","nameLocation":"7027:12:1","nodeType":"FunctionDefinition","overrides":{"id":536,"nodeType":"OverrideSpecifier","overrides":[],"src":"7198:8:1"},"parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"sender","nameLocation":"7057:6:1","nodeType":"VariableDeclaration","scope":557,"src":"7049:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"7049:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"recipient","nameLocation":"7081:9:1","nodeType":"VariableDeclaration","scope":557,"src":"7073:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"7073:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"amount","nameLocation":"7108:6:1","nodeType":"VariableDeclaration","scope":557,"src":"7100:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"7100:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":532,"mutability":"mutable","name":"data","nameLocation":"7137:4:1","nodeType":"VariableDeclaration","scope":557,"src":"7124:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":531,"name":"bytes","nodeType":"ElementaryTypeName","src":"7124:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"operatorData","nameLocation":"7164:12:1","nodeType":"VariableDeclaration","scope":557,"src":"7151:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":533,"name":"bytes","nodeType":"ElementaryTypeName","src":"7151:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7039:143:1"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[],"src":"7207:0:1"},"scope":1214,"src":"7018:366:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1322],"body":{"id":586,"nodeType":"Block","src":"7668:162:1","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":572,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"7700:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7700:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":574,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7714:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":571,"name":"isOperatorFor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"7686:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7686:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7724:46:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235","typeString":"literal_string \"ERC777: caller is not an operator for holder\""},"value":"ERC777: caller is not an operator for holder"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235","typeString":"literal_string \"ERC777: caller is not an operator for holder\""}],"id":570,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7678:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7678:93:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"7678:93:1"},{"expression":{"arguments":[{"id":580,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7787:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":581,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"7796:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":582,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"7804:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":583,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"7810:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":579,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":986,"src":"7781:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory,bytes memory)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7781:42:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"7781:42:1"}]},"documentation":{"id":558,"nodeType":"StructuredDocumentation","src":"7390:110:1","text":" @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."},"functionSelector":"fc673c4f","id":587,"implemented":true,"kind":"function","modifiers":[],"name":"operatorBurn","nameLocation":"7514:12:1","nodeType":"FunctionDefinition","overrides":{"id":568,"nodeType":"OverrideSpecifier","overrides":[],"src":"7659:8:1"},"parameters":{"id":567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"account","nameLocation":"7544:7:1","nodeType":"VariableDeclaration","scope":587,"src":"7536:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":559,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"amount","nameLocation":"7569:6:1","nodeType":"VariableDeclaration","scope":587,"src":"7561:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":561,"name":"uint256","nodeType":"ElementaryTypeName","src":"7561:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"7598:4:1","nodeType":"VariableDeclaration","scope":587,"src":"7585:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"7585:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":566,"mutability":"mutable","name":"operatorData","nameLocation":"7625:12:1","nodeType":"VariableDeclaration","scope":587,"src":"7612:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":565,"name":"bytes","nodeType":"ElementaryTypeName","src":"7612:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7526:117:1"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"7668:0:1"},"scope":1214,"src":"7505:325:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[36],"body":{"id":604,"nodeType":"Block","src":"8168:52:1","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":598,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"8185:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":600,"indexExpression":{"id":599,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"8197:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8185:19:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":602,"indexExpression":{"id":601,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"8205:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8185:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":597,"id":603,"nodeType":"Return","src":"8178:35:1"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"7836:228:1","text":" @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."},"functionSelector":"dd62ed3e","id":605,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"8078:9:1","nodeType":"FunctionDefinition","overrides":{"id":594,"nodeType":"OverrideSpecifier","overrides":[],"src":"8141:8:1"},"parameters":{"id":593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"holder","nameLocation":"8096:6:1","nodeType":"VariableDeclaration","scope":605,"src":"8088:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"8088:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"spender","nameLocation":"8112:7:1","nodeType":"VariableDeclaration","scope":605,"src":"8104:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"8104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8087:33:1"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":605,"src":"8159:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"8159:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8158:9:1"},"scope":1214,"src":"8069:151:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[46],"body":{"id":629,"nodeType":"Block","src":"8446:109:1","statements":[{"assignments":[617],"declarations":[{"constant":false,"id":617,"mutability":"mutable","name":"holder","nameLocation":"8464:6:1","nodeType":"VariableDeclaration","scope":629,"src":"8456:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":616,"name":"address","nodeType":"ElementaryTypeName","src":"8456:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":620,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":618,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"8473:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8473:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8456:29:1"},{"expression":{"arguments":[{"id":622,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"8504:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":623,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"8512:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":610,"src":"8521:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":621,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"8495:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8495:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":626,"nodeType":"ExpressionStatement","src":"8495:32:1"},{"expression":{"hexValue":"74727565","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8544:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":615,"id":628,"nodeType":"Return","src":"8537:11:1"}]},"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"8226:127:1","text":" @dev See {IERC20-approve}.\n Note that accounts cannot have allowance issued by their operators."},"functionSelector":"095ea7b3","id":630,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"8367:7:1","nodeType":"FunctionDefinition","overrides":{"id":612,"nodeType":"OverrideSpecifier","overrides":[],"src":"8422:8:1"},"parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"spender","nameLocation":"8383:7:1","nodeType":"VariableDeclaration","scope":630,"src":"8375:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"8375:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"value","nameLocation":"8400:5:1","nodeType":"VariableDeclaration","scope":630,"src":"8392:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":609,"name":"uint256","nodeType":"ElementaryTypeName","src":"8392:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8374:32:1"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":630,"src":"8440:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":613,"name":"bool","nodeType":"ElementaryTypeName","src":"8440:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8439:6:1"},"scope":1214,"src":"8358:197:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[58],"body":{"id":721,"nodeType":"Block","src":"9071:664:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":644,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"9089:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:1","typeDescriptions":{}}},"id":648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9102:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9089:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373","id":650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9114:38:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a","typeString":"literal_string \"ERC777: transfer to the zero address\""},"value":"ERC777: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a","typeString":"literal_string \"ERC777: transfer to the zero address\""}],"id":643,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9081:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9081:72:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"ExpressionStatement","src":"9081:72:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9171:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9189:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":656,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9181:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":655,"name":"address","nodeType":"ElementaryTypeName","src":"9181:7:1","typeDescriptions":{}}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9181:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9171:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9193:40:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a","typeString":"literal_string \"ERC777: transfer from the zero address\""},"value":"ERC777: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a","typeString":"literal_string \"ERC777: transfer from the zero address\""}],"id":653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9163:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9163:71:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"9163:71:1"},{"assignments":[664],"declarations":[{"constant":false,"id":664,"mutability":"mutable","name":"spender","nameLocation":"9253:7:1","nodeType":"VariableDeclaration","scope":721,"src":"9245:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"9245:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":667,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":665,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"9263:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9263:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9245:30:1"},{"expression":{"arguments":[{"id":669,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9304:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":670,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9313:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":671,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"9321:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":672,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9332:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9340:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9344:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":668,"name":"_callTokensToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"9286:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9286:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"ExpressionStatement","src":"9286:61:1"},{"expression":{"arguments":[{"id":678,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9364:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":679,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9373:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":680,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"9381:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":681,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9392:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9400:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9404:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":677,"name":"_move","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"9358:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9358:49:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":685,"nodeType":"ExpressionStatement","src":"9358:49:1"},{"assignments":[687],"declarations":[{"constant":false,"id":687,"mutability":"mutable","name":"currentAllowance","nameLocation":"9426:16:1","nodeType":"VariableDeclaration","scope":721,"src":"9418:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":686,"name":"uint256","nodeType":"ElementaryTypeName","src":"9418:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":693,"initialValue":{"baseExpression":{"baseExpression":{"id":688,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"9445:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":690,"indexExpression":{"id":689,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9457:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9445:19:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":692,"indexExpression":{"id":691,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9465:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9445:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9418:55:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":695,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9491:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":696,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9511:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9491:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9519:43:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c","typeString":"literal_string \"ERC777: transfer amount exceeds allowance\""},"value":"ERC777: transfer amount exceeds allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c","typeString":"literal_string \"ERC777: transfer amount exceeds allowance\""}],"id":694,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9483:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9483:80:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":700,"nodeType":"ExpressionStatement","src":"9483:80:1"},{"expression":{"arguments":[{"id":702,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9582:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":703,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9590:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":687,"src":"9599:16:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":705,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9618:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9599:25:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":701,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1097,"src":"9573:8:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9573:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":708,"nodeType":"ExpressionStatement","src":"9573:52:1"},{"expression":{"arguments":[{"id":710,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"9656:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":711,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"9665:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":635,"src":"9673:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"9684:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9692:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9696:2:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"66616c7365","id":716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9700:5:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":709,"name":"_callTokensReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"9636:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory,bool)"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9636:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"ExpressionStatement","src":"9636:70:1"},{"expression":{"hexValue":"74727565","id":719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9724:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":642,"id":720,"nodeType":"Return","src":"9717:11:1"}]},"documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"8561:363:1","text":" @dev See {IERC20-transferFrom}.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."},"functionSelector":"23b872dd","id":722,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"8938:12:1","nodeType":"FunctionDefinition","overrides":{"id":639,"nodeType":"OverrideSpecifier","overrides":[],"src":"9047:8:1"},"parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":633,"mutability":"mutable","name":"holder","nameLocation":"8968:6:1","nodeType":"VariableDeclaration","scope":722,"src":"8960:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"8960:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":635,"mutability":"mutable","name":"recipient","nameLocation":"8992:9:1","nodeType":"VariableDeclaration","scope":722,"src":"8984:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":634,"name":"address","nodeType":"ElementaryTypeName","src":"8984:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":637,"mutability":"mutable","name":"amount","nameLocation":"9019:6:1","nodeType":"VariableDeclaration","scope":722,"src":"9011:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":636,"name":"uint256","nodeType":"ElementaryTypeName","src":"9011:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8950:81:1"},"returnParameters":{"id":642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":722,"src":"9065:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":640,"name":"bool","nodeType":"ElementaryTypeName","src":"9065:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9064:6:1"},"scope":1214,"src":"8929:806:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":742,"nodeType":"Block","src":"10458:69:1","statements":[{"expression":{"arguments":[{"id":735,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"10474:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":736,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"10483:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":737,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"10491:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":738,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"10501:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10515:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":734,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[743,823],"referencedDeclaration":823,"src":"10468:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,uint256,bytes memory,bytes memory,bool)"}},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10468:52:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":741,"nodeType":"ExpressionStatement","src":"10468:52:1"}]},"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"9741:559:1","text":" @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."},"id":743,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10314:5:1","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"account","nameLocation":"10337:7:1","nodeType":"VariableDeclaration","scope":743,"src":"10329:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":724,"name":"address","nodeType":"ElementaryTypeName","src":"10329:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"amount","nameLocation":"10362:6:1","nodeType":"VariableDeclaration","scope":743,"src":"10354:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint256","nodeType":"ElementaryTypeName","src":"10354:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"userData","nameLocation":"10391:8:1","nodeType":"VariableDeclaration","scope":743,"src":"10378:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":728,"name":"bytes","nodeType":"ElementaryTypeName","src":"10378:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"operatorData","nameLocation":"10422:12:1","nodeType":"VariableDeclaration","scope":743,"src":"10409:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":730,"name":"bytes","nodeType":"ElementaryTypeName","src":"10409:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10319:121:1"},"returnParameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"10458:0:1"},"scope":1214,"src":"10305:222:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":822,"nodeType":"Block","src":"11336:539:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":758,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11354:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11373:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11365:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":759,"name":"address","nodeType":"ElementaryTypeName","src":"11365:7:1","typeDescriptions":{}}},"id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11365:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a206d696e7420746f20746865207a65726f2061646472657373","id":764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11377:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080","typeString":"literal_string \"ERC777: mint to the zero address\""},"value":"ERC777: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080","typeString":"literal_string \"ERC777: mint to the zero address\""}],"id":757,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:66:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"11346:66:1"},{"assignments":[768],"declarations":[{"constant":false,"id":768,"mutability":"mutable","name":"operator","nameLocation":"11431:8:1","nodeType":"VariableDeclaration","scope":822,"src":"11423:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"11423:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":771,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":769,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"11442:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11442:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11423:31:1"},{"expression":{"arguments":[{"id":773,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"11486:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11504:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11496:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"11496:7:1","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11496:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":778,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11508:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":779,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"11517:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":772,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"11465:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11465:59:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":781,"nodeType":"ExpressionStatement","src":"11465:59:1"},{"expression":{"id":784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":782,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"11569:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":783,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"11585:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11569:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":785,"nodeType":"ExpressionStatement","src":"11569:22:1"},{"expression":{"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":786,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"11601:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":788,"indexExpression":{"id":787,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11611:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11601:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":789,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"11623:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11601:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":791,"nodeType":"ExpressionStatement","src":"11601:28:1"},{"expression":{"arguments":[{"id":793,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"11660:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11678:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11670:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":794,"name":"address","nodeType":"ElementaryTypeName","src":"11670:7:1","typeDescriptions":{}}},"id":797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11670:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":798,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11682:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":799,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"11691:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":800,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"11699:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":801,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11709:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":802,"name":"requireReceptionAck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"11723:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":792,"name":"_callTokensReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"11640:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory,bool)"}},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11640:103:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":804,"nodeType":"ExpressionStatement","src":"11640:103:1"},{"eventCall":{"arguments":[{"id":806,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":768,"src":"11766:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11776:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"11785:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"11793:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":810,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":752,"src":"11803:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":805,"name":"Minted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"11759:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11759:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"EmitStatement","src":"11754:62:1"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11848:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11840:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":814,"name":"address","nodeType":"ElementaryTypeName","src":"11840:7:1","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11840:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"11852:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"11861:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":813,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"11831:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11831:37:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":821,"nodeType":"EmitStatement","src":"11826:42:1"}]},"documentation":{"id":744,"nodeType":"StructuredDocumentation","src":"10533:611:1","text":" @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."},"id":823,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"11158:5:1","nodeType":"FunctionDefinition","parameters":{"id":755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":746,"mutability":"mutable","name":"account","nameLocation":"11181:7:1","nodeType":"VariableDeclaration","scope":823,"src":"11173:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":745,"name":"address","nodeType":"ElementaryTypeName","src":"11173:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":748,"mutability":"mutable","name":"amount","nameLocation":"11206:6:1","nodeType":"VariableDeclaration","scope":823,"src":"11198:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"11198:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":750,"mutability":"mutable","name":"userData","nameLocation":"11235:8:1","nodeType":"VariableDeclaration","scope":823,"src":"11222:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":749,"name":"bytes","nodeType":"ElementaryTypeName","src":"11222:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":752,"mutability":"mutable","name":"operatorData","nameLocation":"11266:12:1","nodeType":"VariableDeclaration","scope":823,"src":"11253:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":751,"name":"bytes","nodeType":"ElementaryTypeName","src":"11253:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":754,"mutability":"mutable","name":"requireReceptionAck","nameLocation":"11293:19:1","nodeType":"VariableDeclaration","scope":823,"src":"11288:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":753,"name":"bool","nodeType":"ElementaryTypeName","src":"11288:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11163:155:1"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[],"src":"11336:0:1"},"scope":1214,"src":"11149:726:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":892,"nodeType":"Block","src":"12555:446:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"12573:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12589:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12581:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":841,"name":"address","nodeType":"ElementaryTypeName","src":"12581:7:1","typeDescriptions":{}}},"id":844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12581:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12573:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a2073656e642066726f6d20746865207a65726f2061646472657373","id":846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12593:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401","typeString":"literal_string \"ERC777: send from the zero address\""},"value":"ERC777: send from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401","typeString":"literal_string \"ERC777: send from the zero address\""}],"id":839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12565:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12565:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":848,"nodeType":"ExpressionStatement","src":"12565:65:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":850,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"12648:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12662:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12654:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"12654:7:1","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12654:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12648:16:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a2073656e6420746f20746865207a65726f2061646472657373","id":856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12666:34:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3","typeString":"literal_string \"ERC777: send to the zero address\""},"value":"ERC777: send to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3","typeString":"literal_string \"ERC777: send to the zero address\""}],"id":849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12640:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12640:61:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":858,"nodeType":"ExpressionStatement","src":"12640:61:1"},{"assignments":[860],"declarations":[{"constant":false,"id":860,"mutability":"mutable","name":"operator","nameLocation":"12720:8:1","nodeType":"VariableDeclaration","scope":892,"src":"12712:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"12712:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":863,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":861,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"12731:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12731:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12712:31:1"},{"expression":{"arguments":[{"id":865,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"12772:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"12782:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"12788:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":868,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12792:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":869,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12800:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":870,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12810:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":864,"name":"_callTokensToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"12754:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12754:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":872,"nodeType":"ExpressionStatement","src":"12754:69:1"},{"expression":{"arguments":[{"id":874,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"12840:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"12850:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"12856:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":877,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12860:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":878,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12868:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":879,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12878:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":873,"name":"_move","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"12834:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory)"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12834:57:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":881,"nodeType":"ExpressionStatement","src":"12834:57:1"},{"expression":{"arguments":[{"id":883,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"12922:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":826,"src":"12932:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":828,"src":"12938:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12942:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":887,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":832,"src":"12950:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":888,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":834,"src":"12960:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":889,"name":"requireReceptionAck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"12974:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":882,"name":"_callTokensReceived","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12902:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory,bool)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12902:92:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"ExpressionStatement","src":"12902:92:1"}]},"documentation":{"id":824,"nodeType":"StructuredDocumentation","src":"11881:465:1","text":" @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"},"id":893,"implemented":true,"kind":"function","modifiers":[],"name":"_send","nameLocation":"12360:5:1","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"from","nameLocation":"12383:4:1","nodeType":"VariableDeclaration","scope":893,"src":"12375:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":825,"name":"address","nodeType":"ElementaryTypeName","src":"12375:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":828,"mutability":"mutable","name":"to","nameLocation":"12405:2:1","nodeType":"VariableDeclaration","scope":893,"src":"12397:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"12397:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":830,"mutability":"mutable","name":"amount","nameLocation":"12425:6:1","nodeType":"VariableDeclaration","scope":893,"src":"12417:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":829,"name":"uint256","nodeType":"ElementaryTypeName","src":"12417:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":832,"mutability":"mutable","name":"userData","nameLocation":"12454:8:1","nodeType":"VariableDeclaration","scope":893,"src":"12441:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":831,"name":"bytes","nodeType":"ElementaryTypeName","src":"12441:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"operatorData","nameLocation":"12485:12:1","nodeType":"VariableDeclaration","scope":893,"src":"12472:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":833,"name":"bytes","nodeType":"ElementaryTypeName","src":"12472:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":836,"mutability":"mutable","name":"requireReceptionAck","nameLocation":"12512:19:1","nodeType":"VariableDeclaration","scope":893,"src":"12507:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":835,"name":"bool","nodeType":"ElementaryTypeName","src":"12507:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12365:172:1"},"returnParameters":{"id":838,"nodeType":"ParameterList","parameters":[],"src":"12555:0:1"},"scope":1214,"src":"12351:650:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":985,"nodeType":"Block","src":"13452:665:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":906,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"13470:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13486:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13478:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:1","typeDescriptions":{}}},"id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13478:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13470:18:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373","id":912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13490:36:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c","typeString":"literal_string \"ERC777: burn from the zero address\""},"value":"ERC777: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c","typeString":"literal_string \"ERC777: burn from the zero address\""}],"id":905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13462:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13462:65:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":914,"nodeType":"ExpressionStatement","src":"13462:65:1"},{"assignments":[916],"declarations":[{"constant":false,"id":916,"mutability":"mutable","name":"operator","nameLocation":"13546:8:1","nodeType":"VariableDeclaration","scope":985,"src":"13538:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"13538:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":919,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":917,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1722,"src":"13557:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13557:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13538:31:1"},{"expression":{"arguments":[{"id":921,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"13598:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"13608:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13622:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13614:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"13614:7:1","typeDescriptions":{}}},"id":926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13614:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":927,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"13626:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":928,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"13634:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":929,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"13640:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":920,"name":"_callTokensToSend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"13580:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13580:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"13580:73:1"},{"expression":{"arguments":[{"id":933,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"13685:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":934,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"13695:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13709:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13701:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"13701:7:1","typeDescriptions":{}}},"id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13701:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"13713:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":932,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"13664:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13664:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":941,"nodeType":"ExpressionStatement","src":"13664:56:1"},{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"fromBalance","nameLocation":"13773:11:1","nodeType":"VariableDeclaration","scope":985,"src":"13765:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"13765:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":947,"initialValue":{"baseExpression":{"id":944,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"13787:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":946,"indexExpression":{"id":945,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"13797:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13787:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13765:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":949,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"13820:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":950,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"13835:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13820:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13843:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe","typeString":"literal_string \"ERC777: burn amount exceeds balance\""},"value":"ERC777: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe","typeString":"literal_string \"ERC777: burn amount exceeds balance\""}],"id":948,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13812:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13812:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":954,"nodeType":"ExpressionStatement","src":"13812:69:1"},{"id":963,"nodeType":"UncheckedBlock","src":"13891:73:1","statements":[{"expression":{"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":955,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"13915:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":957,"indexExpression":{"id":956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"13925:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13915:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":958,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"13933:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":959,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"13947:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13933:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13915:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":962,"nodeType":"ExpressionStatement","src":"13915:38:1"}]},{"expression":{"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":964,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"13973:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":965,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"13989:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13973:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":967,"nodeType":"ExpressionStatement","src":"13973:22:1"},{"eventCall":{"arguments":[{"id":969,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":916,"src":"14018:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":970,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"14028:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":971,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"14034:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":972,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"14042:4:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":973,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":902,"src":"14048:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":968,"name":"Burned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1360,"src":"14011:6:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory,bytes memory)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14011:50:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":975,"nodeType":"EmitStatement","src":"14006:55:1"},{"eventCall":{"arguments":[{"id":977,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"14085:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14099:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14091:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":978,"name":"address","nodeType":"ElementaryTypeName","src":"14091:7:1","typeDescriptions":{}}},"id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14091:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":982,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"14103:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":976,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"14076:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14076:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":984,"nodeType":"EmitStatement","src":"14071:39:1"}]},"documentation":{"id":894,"nodeType":"StructuredDocumentation","src":"13007:294:1","text":" @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"},"id":986,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"13315:5:1","nodeType":"FunctionDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":896,"mutability":"mutable","name":"from","nameLocation":"13338:4:1","nodeType":"VariableDeclaration","scope":986,"src":"13330:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":895,"name":"address","nodeType":"ElementaryTypeName","src":"13330:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":898,"mutability":"mutable","name":"amount","nameLocation":"13360:6:1","nodeType":"VariableDeclaration","scope":986,"src":"13352:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"13352:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"data","nameLocation":"13389:4:1","nodeType":"VariableDeclaration","scope":986,"src":"13376:17:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":899,"name":"bytes","nodeType":"ElementaryTypeName","src":"13376:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":902,"mutability":"mutable","name":"operatorData","nameLocation":"13416:12:1","nodeType":"VariableDeclaration","scope":986,"src":"13403:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"13403:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13320:114:1"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[],"src":"13452:0:1"},"scope":1214,"src":"13306:811:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"14310:424:1","statements":[{"expression":{"arguments":[{"id":1002,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"14341:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1003,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"14351:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1004,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"14357:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1005,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14361:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1001,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"14320:20:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":1006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14320:48:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1007,"nodeType":"ExpressionStatement","src":"14320:48:1"},{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"fromBalance","nameLocation":"14387:11:1","nodeType":"VariableDeclaration","scope":1051,"src":"14379:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"14379:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1013,"initialValue":{"baseExpression":{"id":1010,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"14401:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1012,"indexExpression":{"id":1011,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"14411:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14401:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14379:37:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1015,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"14434:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1016,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14449:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14434:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14457:41:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b","typeString":"literal_string \"ERC777: transfer amount exceeds balance\""},"value":"ERC777: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b","typeString":"literal_string \"ERC777: transfer amount exceeds balance\""}],"id":1014,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14426:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14426:73:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"ExpressionStatement","src":"14426:73:1"},{"id":1029,"nodeType":"UncheckedBlock","src":"14509:73:1","statements":[{"expression":{"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1021,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"14533:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1023,"indexExpression":{"id":1022,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"14543:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14533:15:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1024,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"14551:11:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1025,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14565:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14551:20:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14533:38:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1028,"nodeType":"ExpressionStatement","src":"14533:38:1"}]},{"expression":{"id":1034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1030,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":106,"src":"14591:9:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1032,"indexExpression":{"id":1031,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"14601:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14591:13:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1033,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14608:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14591:23:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1035,"nodeType":"ExpressionStatement","src":"14591:23:1"},{"eventCall":{"arguments":[{"id":1037,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":988,"src":"14635:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1038,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"14645:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"14651:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1040,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14655:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1041,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"14663:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1042,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"14673:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1036,"name":"Sent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"14630:4:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory)"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14630:56:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1044,"nodeType":"EmitStatement","src":"14625:61:1"},{"eventCall":{"arguments":[{"id":1046,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"14710:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1047,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"14716:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"14720:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1045,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"14701:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14701:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1050,"nodeType":"EmitStatement","src":"14696:31:1"}]},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"_move","nameLocation":"14132:5:1","nodeType":"FunctionDefinition","parameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":988,"mutability":"mutable","name":"operator","nameLocation":"14155:8:1","nodeType":"VariableDeclaration","scope":1052,"src":"14147:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"14147:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":990,"mutability":"mutable","name":"from","nameLocation":"14181:4:1","nodeType":"VariableDeclaration","scope":1052,"src":"14173:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"14173:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":992,"mutability":"mutable","name":"to","nameLocation":"14203:2:1","nodeType":"VariableDeclaration","scope":1052,"src":"14195:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":991,"name":"address","nodeType":"ElementaryTypeName","src":"14195:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"amount","nameLocation":"14223:6:1","nodeType":"VariableDeclaration","scope":1052,"src":"14215:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":993,"name":"uint256","nodeType":"ElementaryTypeName","src":"14215:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"userData","nameLocation":"14252:8:1","nodeType":"VariableDeclaration","scope":1052,"src":"14239:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":995,"name":"bytes","nodeType":"ElementaryTypeName","src":"14239:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"operatorData","nameLocation":"14283:12:1","nodeType":"VariableDeclaration","scope":1052,"src":"14270:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":997,"name":"bytes","nodeType":"ElementaryTypeName","src":"14270:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14137:164:1"},"returnParameters":{"id":1000,"nodeType":"ParameterList","parameters":[],"src":"14310:0:1"},"scope":1214,"src":"14123:611:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1096,"nodeType":"Block","src":"14977:260:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1063,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"14995:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15013:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15005:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1064,"name":"address","nodeType":"ElementaryTypeName","src":"15005:7:1","typeDescriptions":{}}},"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15005:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14995:20:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15017:39:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7","typeString":"literal_string \"ERC777: approve from the zero address\""},"value":"ERC777: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7","typeString":"literal_string \"ERC777: approve from the zero address\""}],"id":1062,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14987:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14987:70:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"ExpressionStatement","src":"14987:70:1"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1073,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"15075:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15094:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15086:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1074,"name":"address","nodeType":"ElementaryTypeName","src":"15086:7:1","typeDescriptions":{}}},"id":1077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15086:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15075:21:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a20617070726f766520746f20746865207a65726f2061646472657373","id":1079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15098:37:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d","typeString":"literal_string \"ERC777: approve to the zero address\""},"value":"ERC777: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d","typeString":"literal_string \"ERC777: approve to the zero address\""}],"id":1072,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15067:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15067:69:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1081,"nodeType":"ExpressionStatement","src":"15067:69:1"},{"expression":{"id":1088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1082,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":147,"src":"15147:11:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1085,"indexExpression":{"id":1083,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"15159:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15147:19:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1086,"indexExpression":{"id":1084,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"15167:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15147:28:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"15178:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15147:36:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1089,"nodeType":"ExpressionStatement","src":"15147:36:1"},{"eventCall":{"arguments":[{"id":1091,"name":"holder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"15207:6:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1092,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"15215:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"15224:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1090,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":76,"src":"15198:8:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15198:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1095,"nodeType":"EmitStatement","src":"15193:37:1"}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"14740:127:1","text":" @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."},"id":1097,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14881:8:1","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"holder","nameLocation":"14907:6:1","nodeType":"VariableDeclaration","scope":1097,"src":"14899:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"14899:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"spender","nameLocation":"14931:7:1","nodeType":"VariableDeclaration","scope":1097,"src":"14923:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1056,"name":"address","nodeType":"ElementaryTypeName","src":"14923:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"value","nameLocation":"14956:5:1","nodeType":"VariableDeclaration","scope":1097,"src":"14948:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"14948:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14889:78:1"},"returnParameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"14977:0:1"},"scope":1214,"src":"14872:365:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1141,"nodeType":"Block","src":"15909:273:1","statements":[{"assignments":[1114],"declarations":[{"constant":false,"id":1114,"mutability":"mutable","name":"implementer","nameLocation":"15927:11:1","nodeType":"VariableDeclaration","scope":1141,"src":"15919:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1113,"name":"address","nodeType":"ElementaryTypeName","src":"15919:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1120,"initialValue":{"arguments":[{"id":1117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"15983:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1118,"name":"_TOKENS_SENDER_INTERFACE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":117,"src":"15989:29:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1115,"name":"_ERC1820_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"15941:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1820Registry_$1822","typeString":"contract IERC1820Registry"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getInterfaceImplementer","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"15941:41:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) view external returns (address)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15941:78:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15919:100:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1121,"name":"implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"16033:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16056:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16048:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"16048:7:1","typeDescriptions":{}}},"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16048:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16033:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1140,"nodeType":"IfStatement","src":"16029:147:1","trueBody":{"id":1139,"nodeType":"Block","src":"16060:116:1","statements":[{"expression":{"arguments":[{"id":1131,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"16114:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1132,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"16124:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1133,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"16130:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1134,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1106,"src":"16134:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1135,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"16142:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1136,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"16152:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1128,"name":"implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"16088:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1127,"name":"IERC777Sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"16074:13:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC777Sender_$1413_$","typeString":"type(contract IERC777Sender)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16074:26:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC777Sender_$1413","typeString":"contract IERC777Sender"}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokensToSend","nodeType":"MemberAccess","referencedDeclaration":1412,"src":"16074:39:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory) external"}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16074:91:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1138,"nodeType":"ExpressionStatement","src":"16074:91:1"}]}}]},"documentation":{"id":1098,"nodeType":"StructuredDocumentation","src":"15243:462:1","text":" @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"},"id":1142,"implemented":true,"kind":"function","modifiers":[],"name":"_callTokensToSend","nameLocation":"15719:17:1","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1100,"mutability":"mutable","name":"operator","nameLocation":"15754:8:1","nodeType":"VariableDeclaration","scope":1142,"src":"15746:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1099,"name":"address","nodeType":"ElementaryTypeName","src":"15746:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"from","nameLocation":"15780:4:1","nodeType":"VariableDeclaration","scope":1142,"src":"15772:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"15772:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1104,"mutability":"mutable","name":"to","nameLocation":"15802:2:1","nodeType":"VariableDeclaration","scope":1142,"src":"15794:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1103,"name":"address","nodeType":"ElementaryTypeName","src":"15794:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1106,"mutability":"mutable","name":"amount","nameLocation":"15822:6:1","nodeType":"VariableDeclaration","scope":1142,"src":"15814:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1105,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1108,"mutability":"mutable","name":"userData","nameLocation":"15851:8:1","nodeType":"VariableDeclaration","scope":1142,"src":"15838:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1107,"name":"bytes","nodeType":"ElementaryTypeName","src":"15838:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1110,"mutability":"mutable","name":"operatorData","nameLocation":"15882:12:1","nodeType":"VariableDeclaration","scope":1142,"src":"15869:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"15869:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15736:164:1"},"returnParameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"15909:0:1"},"scope":1214,"src":"15710:472:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1199,"nodeType":"Block","src":"17106:441:1","statements":[{"assignments":[1161],"declarations":[{"constant":false,"id":1161,"mutability":"mutable","name":"implementer","nameLocation":"17124:11:1","nodeType":"VariableDeclaration","scope":1199,"src":"17116:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"17116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1167,"initialValue":{"arguments":[{"id":1164,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"17180:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1165,"name":"_TOKENS_RECIPIENT_INTERFACE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"17184:32:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1162,"name":"_ERC1820_REGISTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":102,"src":"17138:17:1","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1820Registry_$1822","typeString":"contract IERC1820Registry"}},"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getInterfaceImplementer","nodeType":"MemberAccess","referencedDeclaration":1771,"src":"17138:41:1","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$","typeString":"function (address,bytes32) view external returns (address)"}},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17138:79:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17116:101:1"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1168,"name":"implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"17231:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17254:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17246:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"17246:7:1","typeDescriptions":{}}},"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17246:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"17231:25:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"id":1187,"name":"requireReceptionAck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"17389:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1197,"nodeType":"IfStatement","src":"17385:156:1","trueBody":{"id":1196,"nodeType":"Block","src":"17410:131:1","statements":[{"expression":{"arguments":[{"id":1192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"17432:16:1","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1189,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"17433:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1433,"src":"17433:13:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17433:15:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74","id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17450:79:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80","typeString":"literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""},"value":"ERC777: token recipient contract has no implementer for ERC777TokensRecipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80","typeString":"literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""}],"id":1188,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17424:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17424:106:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1195,"nodeType":"ExpressionStatement","src":"17424:106:1"}]}},"id":1198,"nodeType":"IfStatement","src":"17227:314:1","trueBody":{"id":1186,"nodeType":"Block","src":"17258:121:1","statements":[{"expression":{"arguments":[{"id":1178,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1145,"src":"17317:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"17327:4:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"17333:2:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1181,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"17337:6:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1182,"name":"userData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"17345:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1183,"name":"operatorData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1155,"src":"17355:12:1","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1175,"name":"implementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1161,"src":"17289:11:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1174,"name":"IERC777Recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"17272:16:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC777Recipient_$1393_$","typeString":"type(contract IERC777Recipient)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17272:29:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC777Recipient_$1393","typeString":"contract IERC777Recipient"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokensReceived","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"17272:44:1","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory,bytes memory) external"}},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17272:96:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1185,"nodeType":"ExpressionStatement","src":"17272:96:1"}]}}]},"documentation":{"id":1143,"nodeType":"StructuredDocumentation","src":"16188:678:1","text":" @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_callTokensReceived","nameLocation":"16880:19:1","nodeType":"FunctionDefinition","parameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"operator","nameLocation":"16917:8:1","nodeType":"VariableDeclaration","scope":1200,"src":"16909:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1144,"name":"address","nodeType":"ElementaryTypeName","src":"16909:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"from","nameLocation":"16943:4:1","nodeType":"VariableDeclaration","scope":1200,"src":"16935:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"16935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"to","nameLocation":"16965:2:1","nodeType":"VariableDeclaration","scope":1200,"src":"16957:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"16957:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"amount","nameLocation":"16985:6:1","nodeType":"VariableDeclaration","scope":1200,"src":"16977:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"16977:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"userData","nameLocation":"17014:8:1","nodeType":"VariableDeclaration","scope":1200,"src":"17001:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1152,"name":"bytes","nodeType":"ElementaryTypeName","src":"17001:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1155,"mutability":"mutable","name":"operatorData","nameLocation":"17045:12:1","nodeType":"VariableDeclaration","scope":1200,"src":"17032:25:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1154,"name":"bytes","nodeType":"ElementaryTypeName","src":"17032:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1157,"mutability":"mutable","name":"requireReceptionAck","nameLocation":"17072:19:1","nodeType":"VariableDeclaration","scope":1200,"src":"17067:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1156,"name":"bool","nodeType":"ElementaryTypeName","src":"17067:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16899:198:1"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[],"src":"17106:0:1"},"scope":1214,"src":"16871:676:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1212,"nodeType":"Block","src":"18320:2:1","statements":[]},"documentation":{"id":1201,"nodeType":"StructuredDocumentation","src":"17553:617:1","text":" @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1213,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"18184:20:1","nodeType":"FunctionDefinition","parameters":{"id":1210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1203,"mutability":"mutable","name":"operator","nameLocation":"18222:8:1","nodeType":"VariableDeclaration","scope":1213,"src":"18214:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"18214:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1205,"mutability":"mutable","name":"from","nameLocation":"18248:4:1","nodeType":"VariableDeclaration","scope":1213,"src":"18240:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1204,"name":"address","nodeType":"ElementaryTypeName","src":"18240:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1207,"mutability":"mutable","name":"to","nameLocation":"18270:2:1","nodeType":"VariableDeclaration","scope":1213,"src":"18262:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"18262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"mutability":"mutable","name":"amount","nameLocation":"18290:6:1","nodeType":"VariableDeclaration","scope":1213,"src":"18282:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1208,"name":"uint256","nodeType":"ElementaryTypeName","src":"18282:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18204:98:1"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[],"src":"18320:0:1"},"scope":1214,"src":"18175:147:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1215,"src":"1073:17251:1","usedErrors":[]}],"src":"92:18233:1"},"id":1},"@openzeppelin/contracts/token/ERC777/IERC777.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777.sol","exportedSymbols":{"IERC777":[1373]},"id":1374,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1216,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"93:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC777","contractDependencies":[],"contractKind":"interface","documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"118:372:2","text":" @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."},"fullyImplemented":false,"id":1373,"linearizedBaseContracts":[1373],"name":"IERC777","nameLocation":"501:7:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"515:54:2","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1223,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"583:4:2","nodeType":"FunctionDefinition","parameters":{"id":1219,"nodeType":"ParameterList","parameters":[],"src":"587:2:2"},"returnParameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1221,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1223,"src":"613:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1220,"name":"string","nodeType":"ElementaryTypeName","src":"613:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"612:15:2"},"scope":1373,"src":"574:54:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"634:102:2","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1229,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"750:6:2","nodeType":"FunctionDefinition","parameters":{"id":1225,"nodeType":"ParameterList","parameters":[],"src":"756:2:2"},"returnParameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1227,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1229,"src":"782:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1226,"name":"string","nodeType":"ElementaryTypeName","src":"782:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"781:15:2"},"scope":1373,"src":"741:56:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1230,"nodeType":"StructuredDocumentation","src":"803:287:2","text":" @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."},"functionSelector":"556f0dc7","id":1235,"implemented":false,"kind":"function","modifiers":[],"name":"granularity","nameLocation":"1104:11:2","nodeType":"FunctionDefinition","parameters":{"id":1231,"nodeType":"ParameterList","parameters":[],"src":"1115:2:2"},"returnParameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1235,"src":"1141:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1141:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1140:9:2"},"scope":1373,"src":"1095:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1236,"nodeType":"StructuredDocumentation","src":"1156:66:2","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1241,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"1236:11:2","nodeType":"FunctionDefinition","parameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"1247:2:2"},"returnParameters":{"id":1240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1241,"src":"1273:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1238,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1272:9:2"},"scope":1373,"src":"1227:55:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1242,"nodeType":"StructuredDocumentation","src":"1288:83:2","text":" @dev Returns the amount of tokens owned by an account (`owner`)."},"functionSelector":"70a08231","id":1249,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1385:9:2","nodeType":"FunctionDefinition","parameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"owner","nameLocation":"1403:5:2","nodeType":"VariableDeclaration","scope":1249,"src":"1395:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1243,"name":"address","nodeType":"ElementaryTypeName","src":"1395:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1394:15:2"},"returnParameters":{"id":1248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1247,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1249,"src":"1433:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1246,"name":"uint256","nodeType":"ElementaryTypeName","src":"1433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1432:9:2"},"scope":1373,"src":"1376:66:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"1448:585:2","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."},"functionSelector":"9bd9bbc6","id":1259,"implemented":false,"kind":"function","modifiers":[],"name":"send","nameLocation":"2047:4:2","nodeType":"FunctionDefinition","parameters":{"id":1257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"recipient","nameLocation":"2069:9:2","nodeType":"VariableDeclaration","scope":1259,"src":"2061:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"2061:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1254,"mutability":"mutable","name":"amount","nameLocation":"2096:6:2","nodeType":"VariableDeclaration","scope":1259,"src":"2088:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1253,"name":"uint256","nodeType":"ElementaryTypeName","src":"2088:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1256,"mutability":"mutable","name":"data","nameLocation":"2127:4:2","nodeType":"VariableDeclaration","scope":1259,"src":"2112:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1255,"name":"bytes","nodeType":"ElementaryTypeName","src":"2112:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2051:86:2"},"returnParameters":{"id":1258,"nodeType":"ParameterList","parameters":[],"src":"2146:0:2"},"scope":1373,"src":"2038:109:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"2153:404:2","text":" @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."},"functionSelector":"fe9d9303","id":1267,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"2571:4:2","nodeType":"FunctionDefinition","parameters":{"id":1265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"amount","nameLocation":"2584:6:2","nodeType":"VariableDeclaration","scope":1267,"src":"2576:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1261,"name":"uint256","nodeType":"ElementaryTypeName","src":"2576:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1264,"mutability":"mutable","name":"data","nameLocation":"2607:4:2","nodeType":"VariableDeclaration","scope":1267,"src":"2592:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1263,"name":"bytes","nodeType":"ElementaryTypeName","src":"2592:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2575:37:2"},"returnParameters":{"id":1266,"nodeType":"ParameterList","parameters":[],"src":"2621:0:2"},"scope":1373,"src":"2562:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1268,"nodeType":"StructuredDocumentation","src":"2628:249:2","text":" @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."},"functionSelector":"d95b6371","id":1277,"implemented":false,"kind":"function","modifiers":[],"name":"isOperatorFor","nameLocation":"2891:13:2","nodeType":"FunctionDefinition","parameters":{"id":1273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"operator","nameLocation":"2913:8:2","nodeType":"VariableDeclaration","scope":1277,"src":"2905:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1269,"name":"address","nodeType":"ElementaryTypeName","src":"2905:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1272,"mutability":"mutable","name":"tokenHolder","nameLocation":"2931:11:2","nodeType":"VariableDeclaration","scope":1277,"src":"2923:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1271,"name":"address","nodeType":"ElementaryTypeName","src":"2923:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2904:39:2"},"returnParameters":{"id":1276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1277,"src":"2967:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1274,"name":"bool","nodeType":"ElementaryTypeName","src":"2967:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2966:6:2"},"scope":1373,"src":"2882:91:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"2979:233:2","text":" @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."},"functionSelector":"959b8c3f","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"authorizeOperator","nameLocation":"3226:17:2","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1280,"mutability":"mutable","name":"operator","nameLocation":"3252:8:2","nodeType":"VariableDeclaration","scope":1283,"src":"3244:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1279,"name":"address","nodeType":"ElementaryTypeName","src":"3244:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3243:18:2"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"3270:0:2"},"scope":1373,"src":"3217:54:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"3277:261:2","text":" @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."},"functionSelector":"fad8b32a","id":1289,"implemented":false,"kind":"function","modifiers":[],"name":"revokeOperator","nameLocation":"3552:14:2","nodeType":"FunctionDefinition","parameters":{"id":1287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"operator","nameLocation":"3575:8:2","nodeType":"VariableDeclaration","scope":1289,"src":"3567:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"3567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3566:18:2"},"returnParameters":{"id":1288,"nodeType":"ParameterList","parameters":[],"src":"3593:0:2"},"scope":1373,"src":"3543:51:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"3600:338:2","text":" @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."},"functionSelector":"06e48538","id":1296,"implemented":false,"kind":"function","modifiers":[],"name":"defaultOperators","nameLocation":"3952:16:2","nodeType":"FunctionDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[],"src":"3968:2:2"},"returnParameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1296,"src":"3994:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1292,"name":"address","nodeType":"ElementaryTypeName","src":"3994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1293,"nodeType":"ArrayTypeName","src":"3994:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3993:18:2"},"scope":1373,"src":"3943:69:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1297,"nodeType":"StructuredDocumentation","src":"4018:714:2","text":" @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."},"functionSelector":"62ad1b83","id":1310,"implemented":false,"kind":"function","modifiers":[],"name":"operatorSend","nameLocation":"4746:12:2","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"sender","nameLocation":"4776:6:2","nodeType":"VariableDeclaration","scope":1310,"src":"4768:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1298,"name":"address","nodeType":"ElementaryTypeName","src":"4768:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"recipient","nameLocation":"4800:9:2","nodeType":"VariableDeclaration","scope":1310,"src":"4792:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"4792:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"amount","nameLocation":"4827:6:2","nodeType":"VariableDeclaration","scope":1310,"src":"4819:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1302,"name":"uint256","nodeType":"ElementaryTypeName","src":"4819:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"data","nameLocation":"4858:4:2","nodeType":"VariableDeclaration","scope":1310,"src":"4843:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1304,"name":"bytes","nodeType":"ElementaryTypeName","src":"4843:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"operatorData","nameLocation":"4887:12:2","nodeType":"VariableDeclaration","scope":1310,"src":"4872:27:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1306,"name":"bytes","nodeType":"ElementaryTypeName","src":"4872:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4758:147:2"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"4914:0:2"},"scope":1373,"src":"4737:178:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"4921:532:2","text":" @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."},"functionSelector":"fc673c4f","id":1322,"implemented":false,"kind":"function","modifiers":[],"name":"operatorBurn","nameLocation":"5467:12:2","nodeType":"FunctionDefinition","parameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"account","nameLocation":"5497:7:2","nodeType":"VariableDeclaration","scope":1322,"src":"5489:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"5489:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"amount","nameLocation":"5522:6:2","nodeType":"VariableDeclaration","scope":1322,"src":"5514:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"5514:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1317,"mutability":"mutable","name":"data","nameLocation":"5553:4:2","nodeType":"VariableDeclaration","scope":1322,"src":"5538:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1316,"name":"bytes","nodeType":"ElementaryTypeName","src":"5538:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1319,"mutability":"mutable","name":"operatorData","nameLocation":"5582:12:2","nodeType":"VariableDeclaration","scope":1322,"src":"5567:27:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1318,"name":"bytes","nodeType":"ElementaryTypeName","src":"5567:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5479:121:2"},"returnParameters":{"id":1321,"nodeType":"ParameterList","parameters":[],"src":"5609:0:2"},"scope":1373,"src":"5458:152:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"id":1336,"name":"Sent","nameLocation":"5622:4:2","nodeType":"EventDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1324,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"5652:8:2","nodeType":"VariableDeclaration","scope":1336,"src":"5636:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1323,"name":"address","nodeType":"ElementaryTypeName","src":"5636:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1326,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"5686:4:2","nodeType":"VariableDeclaration","scope":1336,"src":"5670:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1325,"name":"address","nodeType":"ElementaryTypeName","src":"5670:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1328,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"5716:2:2","nodeType":"VariableDeclaration","scope":1336,"src":"5700:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1327,"name":"address","nodeType":"ElementaryTypeName","src":"5700:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1330,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5736:6:2","nodeType":"VariableDeclaration","scope":1336,"src":"5728:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"5728:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1332,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"5758:4:2","nodeType":"VariableDeclaration","scope":1336,"src":"5752:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1331,"name":"bytes","nodeType":"ElementaryTypeName","src":"5752:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1334,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"5778:12:2","nodeType":"VariableDeclaration","scope":1336,"src":"5772:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1333,"name":"bytes","nodeType":"ElementaryTypeName","src":"5772:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5626:170:2"},"src":"5616:181:2"},{"anonymous":false,"id":1348,"name":"Minted","nameLocation":"5809:6:2","nodeType":"EventDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"5832:8:2","nodeType":"VariableDeclaration","scope":1348,"src":"5816:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1337,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1340,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"5858:2:2","nodeType":"VariableDeclaration","scope":1348,"src":"5842:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"5842:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1342,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5870:6:2","nodeType":"VariableDeclaration","scope":1348,"src":"5862:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"5862:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1344,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"5884:4:2","nodeType":"VariableDeclaration","scope":1348,"src":"5878:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1343,"name":"bytes","nodeType":"ElementaryTypeName","src":"5878:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1346,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"5896:12:2","nodeType":"VariableDeclaration","scope":1348,"src":"5890:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1345,"name":"bytes","nodeType":"ElementaryTypeName","src":"5890:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:94:2"},"src":"5803:107:2"},{"anonymous":false,"id":1360,"name":"Burned","nameLocation":"5922:6:2","nodeType":"EventDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"5945:8:2","nodeType":"VariableDeclaration","scope":1360,"src":"5929:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"5971:4:2","nodeType":"VariableDeclaration","scope":1360,"src":"5955:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"5955:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1354,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5985:6:2","nodeType":"VariableDeclaration","scope":1360,"src":"5977:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"5977:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1356,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"5999:4:2","nodeType":"VariableDeclaration","scope":1360,"src":"5993:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1355,"name":"bytes","nodeType":"ElementaryTypeName","src":"5993:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1358,"indexed":false,"mutability":"mutable","name":"operatorData","nameLocation":"6011:12:2","nodeType":"VariableDeclaration","scope":1360,"src":"6005:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1357,"name":"bytes","nodeType":"ElementaryTypeName","src":"6005:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5928:96:2"},"src":"5916:109:2"},{"anonymous":false,"id":1366,"name":"AuthorizedOperator","nameLocation":"6037:18:2","nodeType":"EventDefinition","parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1362,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6072:8:2","nodeType":"VariableDeclaration","scope":1366,"src":"6056:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"6056:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1364,"indexed":true,"mutability":"mutable","name":"tokenHolder","nameLocation":"6098:11:2","nodeType":"VariableDeclaration","scope":1366,"src":"6082:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"6082:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6055:55:2"},"src":"6031:80:2"},{"anonymous":false,"id":1372,"name":"RevokedOperator","nameLocation":"6123:15:2","nodeType":"EventDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"6155:8:2","nodeType":"VariableDeclaration","scope":1372,"src":"6139:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"6139:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1370,"indexed":true,"mutability":"mutable","name":"tokenHolder","nameLocation":"6181:11:2","nodeType":"VariableDeclaration","scope":1372,"src":"6165:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"6165:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6138:55:2"},"src":"6117:77:2"}],"scope":1374,"src":"491:5705:2","usedErrors":[]}],"src":"93:6104:2"},"id":2},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol","exportedSymbols":{"IERC777Recipient":[1393]},"id":1394,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1375,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC777Recipient","contractDependencies":[],"contractKind":"interface","documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"127:406:3","text":" @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."},"fullyImplemented":false,"id":1393,"linearizedBaseContracts":[1393],"name":"IERC777Recipient","nameLocation":"544:16:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1377,"nodeType":"StructuredDocumentation","src":"567:474:3","text":" @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."},"functionSelector":"0023de29","id":1392,"implemented":false,"kind":"function","modifiers":[],"name":"tokensReceived","nameLocation":"1055:14:3","nodeType":"FunctionDefinition","parameters":{"id":1390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"operator","nameLocation":"1087:8:3","nodeType":"VariableDeclaration","scope":1392,"src":"1079:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1378,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1381,"mutability":"mutable","name":"from","nameLocation":"1113:4:3","nodeType":"VariableDeclaration","scope":1392,"src":"1105:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1380,"name":"address","nodeType":"ElementaryTypeName","src":"1105:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1383,"mutability":"mutable","name":"to","nameLocation":"1135:2:3","nodeType":"VariableDeclaration","scope":1392,"src":"1127:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1382,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"mutability":"mutable","name":"amount","nameLocation":"1155:6:3","nodeType":"VariableDeclaration","scope":1392,"src":"1147:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1147:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1387,"mutability":"mutable","name":"userData","nameLocation":"1186:8:3","nodeType":"VariableDeclaration","scope":1392,"src":"1171:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1386,"name":"bytes","nodeType":"ElementaryTypeName","src":"1171:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1389,"mutability":"mutable","name":"operatorData","nameLocation":"1219:12:3","nodeType":"VariableDeclaration","scope":1392,"src":"1204:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1388,"name":"bytes","nodeType":"ElementaryTypeName","src":"1204:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1069:168:3"},"returnParameters":{"id":1391,"nodeType":"ParameterList","parameters":[],"src":"1246:0:3"},"scope":1393,"src":"1046:201:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1394,"src":"534:715:3","usedErrors":[]}],"src":"102:1148:3"},"id":3},"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol","exportedSymbols":{"IERC777Sender":[1413]},"id":1414,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1395,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC777Sender","contractDependencies":[],"contractKind":"interface","documentation":{"id":1396,"nodeType":"StructuredDocumentation","src":"124:419:4","text":" @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n {IERC777} Token holders can be notified of operations performed on their\n tokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."},"fullyImplemented":false,"id":1413,"linearizedBaseContracts":[1413],"name":"IERC777Sender","nameLocation":"554:13:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1397,"nodeType":"StructuredDocumentation","src":"574:478:4","text":" @dev Called by an {IERC777} token contract whenever a registered holder's\n (`from`) tokens are about to be moved or destroyed. The type of operation\n is conveyed by `to` being the zero address or not.\n This call occurs _before_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n This function may revert to prevent the operation from being executed."},"functionSelector":"75ab9782","id":1412,"implemented":false,"kind":"function","modifiers":[],"name":"tokensToSend","nameLocation":"1066:12:4","nodeType":"FunctionDefinition","parameters":{"id":1410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"operator","nameLocation":"1096:8:4","nodeType":"VariableDeclaration","scope":1412,"src":"1088:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1398,"name":"address","nodeType":"ElementaryTypeName","src":"1088:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"from","nameLocation":"1122:4:4","nodeType":"VariableDeclaration","scope":1412,"src":"1114:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1400,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1403,"mutability":"mutable","name":"to","nameLocation":"1144:2:4","nodeType":"VariableDeclaration","scope":1412,"src":"1136:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1402,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1405,"mutability":"mutable","name":"amount","nameLocation":"1164:6:4","nodeType":"VariableDeclaration","scope":1412,"src":"1156:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1404,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1407,"mutability":"mutable","name":"userData","nameLocation":"1195:8:4","nodeType":"VariableDeclaration","scope":1412,"src":"1180:23:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1406,"name":"bytes","nodeType":"ElementaryTypeName","src":"1180:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1409,"mutability":"mutable","name":"operatorData","nameLocation":"1228:12:4","nodeType":"VariableDeclaration","scope":1412,"src":"1213:27:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1408,"name":"bytes","nodeType":"ElementaryTypeName","src":"1213:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1078:168:4"},"returnParameters":{"id":1411,"nodeType":"ParameterList","parameters":[],"src":"1255:0:4"},"scope":1413,"src":"1057:199:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1414,"src":"544:714:4","usedErrors":[]}],"src":"99:1160:4"},"id":4},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1710]},"id":1711,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1415,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"111:67:5","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1710,"linearizedBaseContracts":[1710],"name":"Address","nameLocation":"187:7:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1432,"nodeType":"Block","src":"837:311:5","statements":[{"assignments":[1425],"declarations":[{"constant":false,"id":1425,"mutability":"mutable","name":"size","nameLocation":"1042:4:5","nodeType":"VariableDeclaration","scope":1432,"src":"1034:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1426,"nodeType":"VariableDeclarationStatement","src":"1034:12:5"},{"AST":{"nodeType":"YulBlock","src":"1065:52:5","statements":[{"nodeType":"YulAssignment","src":"1079:28:5","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1099:7:5"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1087:11:5"},"nodeType":"YulFunctionCall","src":"1087:20:5"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1079:4:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1419,"isOffset":false,"isSlot":false,"src":"1099:7:5","valueSize":1},{"declaration":1425,"isOffset":false,"isSlot":false,"src":"1079:4:5","valueSize":1}],"id":1427,"nodeType":"InlineAssembly","src":"1056:61:5"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1428,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1425,"src":"1133:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1140:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1133:8:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1423,"id":1431,"nodeType":"Return","src":"1126:15:5"}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"201:565:5","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"780:10:5","nodeType":"FunctionDefinition","parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"account","nameLocation":"799:7:5","nodeType":"VariableDeclaration","scope":1433,"src":"791:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"791:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"790:17:5"},"returnParameters":{"id":1423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1422,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1433,"src":"831:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1421,"name":"bool","nodeType":"ElementaryTypeName","src":"831:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"830:6:5"},"scope":1710,"src":"771:377:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1466,"nodeType":"Block","src":"2136:241:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1444,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2162:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1710","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1710","typeString":"library Address"}],"id":1443,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2154:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1442,"name":"address","nodeType":"ElementaryTypeName","src":"2154:7:5","typeDescriptions":{}}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2154:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1447,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2179:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2154:31:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2187:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2146:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2146:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1451,"nodeType":"ExpressionStatement","src":"2146:73:5"},{"assignments":[1453,null],"declarations":[{"constant":false,"id":1453,"mutability":"mutable","name":"success","nameLocation":"2236:7:5","nodeType":"VariableDeclaration","scope":1466,"src":"2231:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1452,"name":"bool","nodeType":"ElementaryTypeName","src":"2231:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1460,"initialValue":{"arguments":[{"hexValue":"","id":1458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2279:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1454,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"2249:9:5","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2249:14:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1456,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1438,"src":"2271:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2249:29:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2249:33:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2230:52:5"},{"expression":{"arguments":[{"id":1462,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"2300:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2309:60:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2292:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2292:78:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1465,"nodeType":"ExpressionStatement","src":"2292:78:5"}]},"documentation":{"id":1434,"nodeType":"StructuredDocumentation","src":"1154:906:5","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2074:9:5","nodeType":"FunctionDefinition","parameters":{"id":1439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"recipient","nameLocation":"2100:9:5","nodeType":"VariableDeclaration","scope":1467,"src":"2084:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1435,"name":"address","nodeType":"ElementaryTypeName","src":"2084:15:5","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1438,"mutability":"mutable","name":"amount","nameLocation":"2119:6:5","nodeType":"VariableDeclaration","scope":1467,"src":"2111:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1437,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2083:43:5"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[],"src":"2136:0:5"},"scope":1710,"src":"2065:312:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1483,"nodeType":"Block","src":"3208:84:5","statements":[{"expression":{"arguments":[{"id":1478,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"3238:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"3246:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3252:32:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1477,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1484,1504],"referencedDeclaration":1504,"src":"3225:12:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3225:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1476,"id":1482,"nodeType":"Return","src":"3218:67:5"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"2383:731:5","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1484,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3128:12:5","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"target","nameLocation":"3149:6:5","nodeType":"VariableDeclaration","scope":1484,"src":"3141:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1469,"name":"address","nodeType":"ElementaryTypeName","src":"3141:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"data","nameLocation":"3170:4:5","nodeType":"VariableDeclaration","scope":1484,"src":"3157:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1471,"name":"bytes","nodeType":"ElementaryTypeName","src":"3157:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3140:35:5"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1484,"src":"3194:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1474,"name":"bytes","nodeType":"ElementaryTypeName","src":"3194:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3193:14:5"},"scope":1710,"src":"3119:173:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1503,"nodeType":"Block","src":"3661:76:5","statements":[{"expression":{"arguments":[{"id":1497,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1487,"src":"3700:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1498,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"3708:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3714:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1500,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1491,"src":"3717:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1496,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1524,1574],"referencedDeclaration":1574,"src":"3678:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3678:52:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1495,"id":1502,"nodeType":"Return","src":"3671:59:5"}]},"documentation":{"id":1485,"nodeType":"StructuredDocumentation","src":"3298:211:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3523:12:5","nodeType":"FunctionDefinition","parameters":{"id":1492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1487,"mutability":"mutable","name":"target","nameLocation":"3553:6:5","nodeType":"VariableDeclaration","scope":1504,"src":"3545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1486,"name":"address","nodeType":"ElementaryTypeName","src":"3545:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1489,"mutability":"mutable","name":"data","nameLocation":"3582:4:5","nodeType":"VariableDeclaration","scope":1504,"src":"3569:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1488,"name":"bytes","nodeType":"ElementaryTypeName","src":"3569:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1491,"mutability":"mutable","name":"errorMessage","nameLocation":"3610:12:5","nodeType":"VariableDeclaration","scope":1504,"src":"3596:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1490,"name":"string","nodeType":"ElementaryTypeName","src":"3596:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3535:93:5"},"returnParameters":{"id":1495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1494,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1504,"src":"3647:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1493,"name":"bytes","nodeType":"ElementaryTypeName","src":"3647:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3646:14:5"},"scope":1710,"src":"3514:223:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"4242:111:5","statements":[{"expression":{"arguments":[{"id":1517,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4281:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1518,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1509,"src":"4289:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1511,"src":"4295:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4302:43:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1516,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1524,1574],"referencedDeclaration":1574,"src":"4259:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4259:87:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1515,"id":1522,"nodeType":"Return","src":"4252:94:5"}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"3743:351:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4108:21:5","nodeType":"FunctionDefinition","parameters":{"id":1512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"target","nameLocation":"4147:6:5","nodeType":"VariableDeclaration","scope":1524,"src":"4139:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1506,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"data","nameLocation":"4176:4:5","nodeType":"VariableDeclaration","scope":1524,"src":"4163:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1508,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1511,"mutability":"mutable","name":"value","nameLocation":"4198:5:5","nodeType":"VariableDeclaration","scope":1524,"src":"4190:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4129:80:5"},"returnParameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"4228:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1513,"name":"bytes","nodeType":"ElementaryTypeName","src":"4228:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4227:14:5"},"scope":1710,"src":"4099:254:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1573,"nodeType":"Block","src":"4780:320:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1541,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4806:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1710","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1710","typeString":"library Address"}],"id":1540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4798:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"4798:7:5","typeDescriptions":{}}},"id":1542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4798:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4798:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"4823:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4798:30:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4830:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1538,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4790:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4790:81:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"ExpressionStatement","src":"4790:81:5"},{"expression":{"arguments":[{"arguments":[{"id":1551,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"4900:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1550,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"4889:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4889:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4909:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4881:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4881:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1555,"nodeType":"ExpressionStatement","src":"4881:60:5"},{"assignments":[1557,1559],"declarations":[{"constant":false,"id":1557,"mutability":"mutable","name":"success","nameLocation":"4958:7:5","nodeType":"VariableDeclaration","scope":1573,"src":"4953:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1556,"name":"bool","nodeType":"ElementaryTypeName","src":"4953:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"returndata","nameLocation":"4980:10:5","nodeType":"VariableDeclaration","scope":1573,"src":"4967:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1558,"name":"bytes","nodeType":"ElementaryTypeName","src":"4967:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1566,"initialValue":{"arguments":[{"id":1564,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"5020:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1560,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"4994:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4994:11:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1562,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"5013:5:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4994:25:5","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4994:31:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4952:73:5"},{"expression":{"arguments":[{"id":1568,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1557,"src":"5059:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1569,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1559,"src":"5068:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1570,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1533,"src":"5080:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1567,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5042:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5042:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1537,"id":1572,"nodeType":"Return","src":"5035:58:5"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"4359:237:5","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1574,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4610:21:5","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"target","nameLocation":"4649:6:5","nodeType":"VariableDeclaration","scope":1574,"src":"4641:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1526,"name":"address","nodeType":"ElementaryTypeName","src":"4641:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"data","nameLocation":"4678:4:5","nodeType":"VariableDeclaration","scope":1574,"src":"4665:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1528,"name":"bytes","nodeType":"ElementaryTypeName","src":"4665:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1531,"mutability":"mutable","name":"value","nameLocation":"4700:5:5","nodeType":"VariableDeclaration","scope":1574,"src":"4692:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"4692:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"errorMessage","nameLocation":"4729:12:5","nodeType":"VariableDeclaration","scope":1574,"src":"4715:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1532,"name":"string","nodeType":"ElementaryTypeName","src":"4715:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4631:116:5"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1574,"src":"4766:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1535,"name":"bytes","nodeType":"ElementaryTypeName","src":"4766:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4765:14:5"},"scope":1710,"src":"4601:499:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1590,"nodeType":"Block","src":"5377:97:5","statements":[{"expression":{"arguments":[{"id":1585,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"5413:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"5421:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5427:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1584,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1591,1626],"referencedDeclaration":1626,"src":"5394:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5394:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1583,"id":1589,"nodeType":"Return","src":"5387:80:5"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"5106:166:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1591,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5286:18:5","nodeType":"FunctionDefinition","parameters":{"id":1580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"target","nameLocation":"5313:6:5","nodeType":"VariableDeclaration","scope":1591,"src":"5305:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"5305:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"data","nameLocation":"5334:4:5","nodeType":"VariableDeclaration","scope":1591,"src":"5321:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1578,"name":"bytes","nodeType":"ElementaryTypeName","src":"5321:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5304:35:5"},"returnParameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1591,"src":"5363:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"5363:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5362:14:5"},"scope":1710,"src":"5277:197:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1625,"nodeType":"Block","src":"5816:228:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1605,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"5845:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1604,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"5834:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5834:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5854:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5826:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5826:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1609,"nodeType":"ExpressionStatement","src":"5826:67:5"},{"assignments":[1611,1613],"declarations":[{"constant":false,"id":1611,"mutability":"mutable","name":"success","nameLocation":"5910:7:5","nodeType":"VariableDeclaration","scope":1625,"src":"5905:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1610,"name":"bool","nodeType":"ElementaryTypeName","src":"5905:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"returndata","nameLocation":"5932:10:5","nodeType":"VariableDeclaration","scope":1625,"src":"5919:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1612,"name":"bytes","nodeType":"ElementaryTypeName","src":"5919:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1618,"initialValue":{"arguments":[{"id":1616,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"5964:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1614,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"5946:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"5946:17:5","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5946:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5904:65:5"},{"expression":{"arguments":[{"id":1620,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"6003:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1621,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"6012:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1622,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1598,"src":"6024:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1619,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"5986:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5986:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1602,"id":1624,"nodeType":"Return","src":"5979:58:5"}]},"documentation":{"id":1592,"nodeType":"StructuredDocumentation","src":"5480:173:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1626,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5667:18:5","nodeType":"FunctionDefinition","parameters":{"id":1599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"target","nameLocation":"5703:6:5","nodeType":"VariableDeclaration","scope":1626,"src":"5695:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1593,"name":"address","nodeType":"ElementaryTypeName","src":"5695:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1596,"mutability":"mutable","name":"data","nameLocation":"5732:4:5","nodeType":"VariableDeclaration","scope":1626,"src":"5719:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1595,"name":"bytes","nodeType":"ElementaryTypeName","src":"5719:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"errorMessage","nameLocation":"5760:12:5","nodeType":"VariableDeclaration","scope":1626,"src":"5746:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1597,"name":"string","nodeType":"ElementaryTypeName","src":"5746:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5685:93:5"},"returnParameters":{"id":1602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1626,"src":"5802:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1600,"name":"bytes","nodeType":"ElementaryTypeName","src":"5802:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5801:14:5"},"scope":1710,"src":"5658:386:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1642,"nodeType":"Block","src":"6320:101:5","statements":[{"expression":{"arguments":[{"id":1637,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"6358:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1638,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"6366:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6372:41:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1636,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1643,1678],"referencedDeclaration":1678,"src":"6337:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6337:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1635,"id":1641,"nodeType":"Return","src":"6330:84:5"}]},"documentation":{"id":1627,"nodeType":"StructuredDocumentation","src":"6050:168:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1643,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6232:20:5","nodeType":"FunctionDefinition","parameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1629,"mutability":"mutable","name":"target","nameLocation":"6261:6:5","nodeType":"VariableDeclaration","scope":1643,"src":"6253:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"6253:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"data","nameLocation":"6282:4:5","nodeType":"VariableDeclaration","scope":1643,"src":"6269:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1630,"name":"bytes","nodeType":"ElementaryTypeName","src":"6269:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6252:35:5"},"returnParameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1643,"src":"6306:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1633,"name":"bytes","nodeType":"ElementaryTypeName","src":"6306:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6305:14:5"},"scope":1710,"src":"6223:198:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1677,"nodeType":"Block","src":"6762:232:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1657,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"6791:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1656,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"6780:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6780:18:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6800:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6772:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6772:69:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"6772:69:5"},{"assignments":[1663,1665],"declarations":[{"constant":false,"id":1663,"mutability":"mutable","name":"success","nameLocation":"6858:7:5","nodeType":"VariableDeclaration","scope":1677,"src":"6853:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1662,"name":"bool","nodeType":"ElementaryTypeName","src":"6853:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1665,"mutability":"mutable","name":"returndata","nameLocation":"6880:10:5","nodeType":"VariableDeclaration","scope":1677,"src":"6867:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1664,"name":"bytes","nodeType":"ElementaryTypeName","src":"6867:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1670,"initialValue":{"arguments":[{"id":1668,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"6914:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1666,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"6894:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"6894:19:5","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6894:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6852:67:5"},{"expression":{"arguments":[{"id":1672,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"6953:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1673,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"6962:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1674,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"6974:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1671,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"6936:16:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6936:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1654,"id":1676,"nodeType":"Return","src":"6929:58:5"}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"6427:175:5","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6616:20:5","nodeType":"FunctionDefinition","parameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"target","nameLocation":"6654:6:5","nodeType":"VariableDeclaration","scope":1678,"src":"6646:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"6646:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"data","nameLocation":"6683:4:5","nodeType":"VariableDeclaration","scope":1678,"src":"6670:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1647,"name":"bytes","nodeType":"ElementaryTypeName","src":"6670:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1650,"mutability":"mutable","name":"errorMessage","nameLocation":"6711:12:5","nodeType":"VariableDeclaration","scope":1678,"src":"6697:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1649,"name":"string","nodeType":"ElementaryTypeName","src":"6697:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6636:93:5"},"returnParameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"6748:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1652,"name":"bytes","nodeType":"ElementaryTypeName","src":"6748:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6747:14:5"},"scope":1710,"src":"6607:387:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"7374:532:5","statements":[{"condition":{"id":1690,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"7388:7:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1706,"nodeType":"Block","src":"7445:455:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1694,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"7529:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7529:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7529:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1704,"nodeType":"Block","src":"7837:53:5","statements":[{"expression":{"arguments":[{"id":1701,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"7862:12:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1700,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7855:6:5","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7855:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1703,"nodeType":"ExpressionStatement","src":"7855:20:5"}]},"id":1705,"nodeType":"IfStatement","src":"7525:365:5","trueBody":{"id":1699,"nodeType":"Block","src":"7552:279:5","statements":[{"AST":{"nodeType":"YulBlock","src":"7672:145:5","statements":[{"nodeType":"YulVariableDeclaration","src":"7694:40:5","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7723:10:5"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7717:5:5"},"nodeType":"YulFunctionCall","src":"7717:17:5"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7698:15:5","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7766:2:5","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7770:10:5"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7762:3:5"},"nodeType":"YulFunctionCall","src":"7762:19:5"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7783:15:5"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7755:6:5"},"nodeType":"YulFunctionCall","src":"7755:44:5"},"nodeType":"YulExpressionStatement","src":"7755:44:5"}]},"evmVersion":"london","externalReferences":[{"declaration":1683,"isOffset":false,"isSlot":false,"src":"7723:10:5","valueSize":1},{"declaration":1683,"isOffset":false,"isSlot":false,"src":"7770:10:5","valueSize":1}],"id":1698,"nodeType":"InlineAssembly","src":"7663:154:5"}]}}]},"id":1707,"nodeType":"IfStatement","src":"7384:516:5","trueBody":{"id":1693,"nodeType":"Block","src":"7397:42:5","statements":[{"expression":{"id":1691,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1683,"src":"7418:10:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1689,"id":1692,"nodeType":"Return","src":"7411:17:5"}]}}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"7000:209:5","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":1709,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7223:16:5","nodeType":"FunctionDefinition","parameters":{"id":1686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"success","nameLocation":"7254:7:5","nodeType":"VariableDeclaration","scope":1709,"src":"7249:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1680,"name":"bool","nodeType":"ElementaryTypeName","src":"7249:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1683,"mutability":"mutable","name":"returndata","nameLocation":"7284:10:5","nodeType":"VariableDeclaration","scope":1709,"src":"7271:23:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1682,"name":"bytes","nodeType":"ElementaryTypeName","src":"7271:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1685,"mutability":"mutable","name":"errorMessage","nameLocation":"7318:12:5","nodeType":"VariableDeclaration","scope":1709,"src":"7304:26:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1684,"name":"string","nodeType":"ElementaryTypeName","src":"7304:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7239:97:5"},"returnParameters":{"id":1689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1709,"src":"7360:12:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1687,"name":"bytes","nodeType":"ElementaryTypeName","src":"7360:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7359:14:5"},"scope":1710,"src":"7214:692:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1711,"src":"179:7729:5","usedErrors":[]}],"src":"86:7823:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1732]},"id":1733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1712,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1732,"linearizedBaseContracts":[1732],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1721,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1718,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1717,"id":1720,"nodeType":"Return","src":"712:17:6"}]},"id":1722,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1722,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1715,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1732,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1730,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1726,"id":1729,"nodeType":"Return","src":"819:15:6"}]},"id":1731,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1723,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1724,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1732,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1733,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol","exportedSymbols":{"IERC1820Registry":[1822]},"id":1823,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1734,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1820Registry","contractDependencies":[],"contractKind":"interface","documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"134:619:7","text":" @dev Interface of the global ERC1820 Registry, as defined in the\n https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\n implementers for interfaces in this registry, as well as query support.\n Implementers may be shared by multiple accounts, and can also implement more\n than a single interface for each account. Contracts can implement interfaces\n for themselves, but externally-owned accounts (EOA) must delegate this to a\n contract.\n {IERC165} interfaces can also be queried via the registry.\n For an in-depth explanation and source code analysis, see the EIP text."},"fullyImplemented":false,"id":1822,"linearizedBaseContracts":[1822],"name":"IERC1820Registry","nameLocation":"764:16:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1736,"nodeType":"StructuredDocumentation","src":"787:445:7","text":" @dev Sets `newManager` as the manager for `account`. A manager of an\n account is able to set interface implementers for it.\n By default, each account is its own manager. Passing a value of `0x0` in\n `newManager` will reset the manager to this initial state.\n Emits a {ManagerChanged} event.\n Requirements:\n - the caller must be the current manager for `account`."},"functionSelector":"5df8122f","id":1743,"implemented":false,"kind":"function","modifiers":[],"name":"setManager","nameLocation":"1246:10:7","nodeType":"FunctionDefinition","parameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"account","nameLocation":"1265:7:7","nodeType":"VariableDeclaration","scope":1743,"src":"1257:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"1257:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1740,"mutability":"mutable","name":"newManager","nameLocation":"1282:10:7","nodeType":"VariableDeclaration","scope":1743,"src":"1274:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"1274:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1256:37:7"},"returnParameters":{"id":1742,"nodeType":"ParameterList","parameters":[],"src":"1302:0:7"},"scope":1822,"src":"1237:66:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1744,"nodeType":"StructuredDocumentation","src":"1309:90:7","text":" @dev Returns the manager for `account`.\n See {setManager}."},"functionSelector":"3d584063","id":1751,"implemented":false,"kind":"function","modifiers":[],"name":"getManager","nameLocation":"1413:10:7","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1746,"mutability":"mutable","name":"account","nameLocation":"1432:7:7","nodeType":"VariableDeclaration","scope":1751,"src":"1424:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"1424:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1423:17:7"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1751,"src":"1464:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1748,"name":"address","nodeType":"ElementaryTypeName","src":"1464:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1463:9:7"},"scope":1822,"src":"1404:69:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1752,"nodeType":"StructuredDocumentation","src":"1479:815:7","text":" @dev Sets the `implementer` contract as ``account``'s implementer for\n `interfaceHash`.\n `account` being the zero address is an alias for the caller's address.\n The zero address can also be used in `implementer` to remove an old one.\n See {interfaceHash} to learn how these are created.\n Emits an {InterfaceImplementerSet} event.\n Requirements:\n - the caller must be the current manager for `account`.\n - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\n end in 28 zeroes).\n - `implementer` must implement {IERC1820Implementer} and return true when\n queried for support, unless `implementer` is the caller. See\n {IERC1820Implementer-canImplementInterfaceForAddress}."},"functionSelector":"29965a1d","id":1761,"implemented":false,"kind":"function","modifiers":[],"name":"setInterfaceImplementer","nameLocation":"2308:23:7","nodeType":"FunctionDefinition","parameters":{"id":1759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1754,"mutability":"mutable","name":"account","nameLocation":"2349:7:7","nodeType":"VariableDeclaration","scope":1761,"src":"2341:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1753,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"_interfaceHash","nameLocation":"2374:14:7","nodeType":"VariableDeclaration","scope":1761,"src":"2366:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1755,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2366:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"implementer","nameLocation":"2406:11:7","nodeType":"VariableDeclaration","scope":1761,"src":"2398:19:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"2398:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2331:92:7"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[],"src":"2432:0:7"},"scope":1822,"src":"2299:134:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1762,"nodeType":"StructuredDocumentation","src":"2439:382:7","text":" @dev Returns the implementer of `interfaceHash` for `account`. If no such\n implementer is registered, returns the zero address.\n If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\n zeroes), `account` will be queried for support of it.\n `account` being the zero address is an alias for the caller's address."},"functionSelector":"aabbb8ca","id":1771,"implemented":false,"kind":"function","modifiers":[],"name":"getInterfaceImplementer","nameLocation":"2835:23:7","nodeType":"FunctionDefinition","parameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1764,"mutability":"mutable","name":"account","nameLocation":"2867:7:7","nodeType":"VariableDeclaration","scope":1771,"src":"2859:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1763,"name":"address","nodeType":"ElementaryTypeName","src":"2859:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1766,"mutability":"mutable","name":"_interfaceHash","nameLocation":"2884:14:7","nodeType":"VariableDeclaration","scope":1771,"src":"2876:22:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2876:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2858:41:7"},"returnParameters":{"id":1770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1771,"src":"2923:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1768,"name":"address","nodeType":"ElementaryTypeName","src":"2923:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2922:9:7"},"scope":1822,"src":"2826:106:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1772,"nodeType":"StructuredDocumentation","src":"2938:196:7","text":" @dev Returns the interface hash for an `interfaceName`, as defined in the\n corresponding\n https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."},"functionSelector":"65ba36c1","id":1779,"implemented":false,"kind":"function","modifiers":[],"name":"interfaceHash","nameLocation":"3148:13:7","nodeType":"FunctionDefinition","parameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1774,"mutability":"mutable","name":"interfaceName","nameLocation":"3178:13:7","nodeType":"VariableDeclaration","scope":1779,"src":"3162:29:7","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":1773,"name":"string","nodeType":"ElementaryTypeName","src":"3162:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3161:31:7"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1779,"src":"3216:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1776,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3216:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3215:9:7"},"scope":1822,"src":"3139:86:7","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":1780,"nodeType":"StructuredDocumentation","src":"3231:260:7","text":" @notice Updates the cache with whether the contract implements an ERC165 interface or not.\n @param account Address of the contract for which to update the cache.\n @param interfaceId ERC165 interface for which to update the cache."},"functionSelector":"a41e7d51","id":1787,"implemented":false,"kind":"function","modifiers":[],"name":"updateERC165Cache","nameLocation":"3505:17:7","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"account","nameLocation":"3531:7:7","nodeType":"VariableDeclaration","scope":1787,"src":"3523:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"3523:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"interfaceId","nameLocation":"3547:11:7","nodeType":"VariableDeclaration","scope":1787,"src":"3540:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1783,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3540:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3522:37:7"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"3568:0:7"},"scope":1822,"src":"3496:73:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1788,"nodeType":"StructuredDocumentation","src":"3575:536:7","text":" @notice Checks whether a contract implements an ERC165 interface or not.\n If the result is not cached a direct lookup on the contract address is performed.\n If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\n {updateERC165Cache} with the contract address.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."},"functionSelector":"f712f3e8","id":1797,"implemented":false,"kind":"function","modifiers":[],"name":"implementsERC165Interface","nameLocation":"4125:25:7","nodeType":"FunctionDefinition","parameters":{"id":1793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"account","nameLocation":"4159:7:7","nodeType":"VariableDeclaration","scope":1797,"src":"4151:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1789,"name":"address","nodeType":"ElementaryTypeName","src":"4151:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1792,"mutability":"mutable","name":"interfaceId","nameLocation":"4175:11:7","nodeType":"VariableDeclaration","scope":1797,"src":"4168:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1791,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4168:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4150:37:7"},"returnParameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1797,"src":"4211:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1794,"name":"bool","nodeType":"ElementaryTypeName","src":"4211:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4210:6:7"},"scope":1822,"src":"4116:101:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1798,"nodeType":"StructuredDocumentation","src":"4223:313:7","text":" @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\n @param account Address of the contract to check.\n @param interfaceId ERC165 interface to check.\n @return True if `account` implements `interfaceId`, false otherwise."},"functionSelector":"b7056765","id":1807,"implemented":false,"kind":"function","modifiers":[],"name":"implementsERC165InterfaceNoCache","nameLocation":"4550:32:7","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"account","nameLocation":"4591:7:7","nodeType":"VariableDeclaration","scope":1807,"src":"4583:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1799,"name":"address","nodeType":"ElementaryTypeName","src":"4583:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"interfaceId","nameLocation":"4607:11:7","nodeType":"VariableDeclaration","scope":1807,"src":"4600:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1801,"name":"bytes4","nodeType":"ElementaryTypeName","src":"4600:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"4582:37:7"},"returnParameters":{"id":1806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1807,"src":"4643:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1804,"name":"bool","nodeType":"ElementaryTypeName","src":"4643:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4642:6:7"},"scope":1822,"src":"4541:108:7","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"id":1815,"name":"InterfaceImplementerSet","nameLocation":"4661:23:7","nodeType":"EventDefinition","parameters":{"id":1814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"4701:7:7","nodeType":"VariableDeclaration","scope":1815,"src":"4685:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"4685:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1811,"indexed":true,"mutability":"mutable","name":"interfaceHash","nameLocation":"4726:13:7","nodeType":"VariableDeclaration","scope":1815,"src":"4710:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1810,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4710:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1813,"indexed":true,"mutability":"mutable","name":"implementer","nameLocation":"4757:11:7","nodeType":"VariableDeclaration","scope":1815,"src":"4741:27:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1812,"name":"address","nodeType":"ElementaryTypeName","src":"4741:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4684:85:7"},"src":"4655:115:7"},{"anonymous":false,"id":1821,"name":"ManagerChanged","nameLocation":"4782:14:7","nodeType":"EventDefinition","parameters":{"id":1820,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"4813:7:7","nodeType":"VariableDeclaration","scope":1821,"src":"4797:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1816,"name":"address","nodeType":"ElementaryTypeName","src":"4797:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1819,"indexed":true,"mutability":"mutable","name":"newManager","nameLocation":"4838:10:7","nodeType":"VariableDeclaration","scope":1821,"src":"4822:26:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"4822:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4796:53:7"},"src":"4776:74:7"}],"scope":1823,"src":"754:4098:7","usedErrors":[]}],"src":"109:4744:7"},"id":7},"contracts/TestTokens/ERC777TestToken.sol":{"ast":{"absolutePath":"contracts/TestTokens/ERC777TestToken.sol","exportedSymbols":{"Address":[1710],"Context":[1732],"ERC777":[1214],"IERC1820Registry":[1822],"IERC20":[77],"IERC777":[1373],"IERC777Recipient":[1393],"IERC777Sender":[1413],"TestERC777":[1860]},"id":1861,"license":"Unlicense","nodeType":"SourceUnit","nodes":[{"id":1824,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"38:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC777/ERC777.sol","file":"@openzeppelin/contracts/token/ERC777/ERC777.sol","id":1825,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1861,"sourceUnit":1215,"src":"63:57:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1826,"name":"ERC777","nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"145:6:8"},"id":1827,"nodeType":"InheritanceSpecifier","src":"145:6:8"}],"canonicalName":"TestERC777","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1860,"linearizedBaseContracts":[1860,1214,77,1373,1732],"name":"TestERC777","nameLocation":"131:10:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"78e7c99a","id":1835,"mutability":"mutable","name":"_defaultOperators","nameLocation":"175:17:8","nodeType":"VariableDeclaration","scope":1860,"src":"158:52:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":1828,"name":"address","nodeType":"ElementaryTypeName","src":"158:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1829,"nodeType":"ArrayTypeName","src":"158:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"value":{"components":[{"arguments":[{"id":1832,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"204:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_TestERC777_$1860","typeString":"contract TestERC777"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_TestERC777_$1860","typeString":"contract TestERC777"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"196:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"196:7:8","typeDescriptions":{}}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"196:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1834,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"195:15:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$1_memory_ptr","typeString":"address[1] memory"}},"visibility":"public"},{"body":{"id":1843,"nodeType":"Block","src":"277:2:8","statements":[]},"id":1844,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"54657374546f6b656e","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"238:11:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_98773c0a77836a29a7c5f4ab1a66bf2cd547cb12bf15ba74f84f027b91334da5","typeString":"literal_string \"TestToken\""},"value":"TestToken"},{"hexValue":"545354","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"251:5:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4","typeString":"literal_string \"TST\""},"value":"TST"},{"id":1840,"name":"_defaultOperators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1835,"src":"258:17:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":1841,"kind":"baseConstructorSpecifier","modifierName":{"id":1837,"name":"ERC777","nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"231:6:8"},"nodeType":"ModifierInvocation","src":"231:45:8"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1836,"nodeType":"ParameterList","parameters":[],"src":"228:2:8"},"returnParameters":{"id":1842,"nodeType":"ParameterList","parameters":[],"src":"277:0:8"},"scope":1860,"src":"216:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1858,"nodeType":"Block","src":"339:47:8","statements":[{"expression":{"arguments":[{"id":1852,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"355:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1853,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"364:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"372:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"376:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1851,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[743,823],"referencedDeclaration":743,"src":"349:5:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory,bytes memory)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"349:30:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1857,"nodeType":"ExpressionStatement","src":"349:30:8"}]},"functionSelector":"40c10f19","id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"294:4:8","nodeType":"FunctionDefinition","parameters":{"id":1849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1846,"mutability":"mutable","name":"account","nameLocation":"307:7:8","nodeType":"VariableDeclaration","scope":1859,"src":"299:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1845,"name":"address","nodeType":"ElementaryTypeName","src":"299:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"amount","nameLocation":"324:6:8","nodeType":"VariableDeclaration","scope":1859,"src":"316:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"316:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"298:33:8"},"returnParameters":{"id":1850,"nodeType":"ParameterList","parameters":[],"src":"339:0:8"},"scope":1860,"src":"285:101:8","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":1861,"src":"122:266:8","usedErrors":[]}],"src":"38:350:8"},"id":8}},"contracts":{"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC777/ERC777.sol":{"ERC777":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"address[]","name":"defaultOperators_","type":"address[]"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"AuthorizedOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Burned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"RevokedOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Sent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"defaultOperators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"granularity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"operatorBurn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"operatorSend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.","kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."},"authorizeOperator(address)":{"details":"See {IERC777-authorizeOperator}."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by an account (`tokenHolder`)."},"burn(uint256,bytes)":{"details":"See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."},"constructor":{"details":"`defaultOperators` may be an empty array."},"decimals()":{"details":"See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."},"defaultOperators()":{"details":"See {IERC777-defaultOperators}."},"granularity()":{"details":"See {IERC777-granularity}. This implementation always returns `1`."},"isOperatorFor(address,address)":{"details":"See {IERC777-isOperatorFor}."},"name()":{"details":"See {IERC777-name}."},"operatorBurn(address,uint256,bytes,bytes)":{"details":"See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."},"operatorSend(address,address,uint256,bytes,bytes)":{"details":"See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."},"revokeOperator(address)":{"details":"See {IERC777-revokeOperator}."},"send(address,uint256,bytes)":{"details":"See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."},"symbol()":{"details":"See {IERC777-symbol}."},"totalSupply()":{"details":"See {IERC777-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_224":{"entryPoint":null,"id":224,"parameterSlots":3,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":860,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory":{"entryPoint":1009,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":809,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":1352,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1310,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":1288,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":787,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3790:9","statements":[{"nodeType":"YulBlock","src":"6:3:9","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:9"},"nodeType":"YulFunctionCall","src":"66:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:9"},"nodeType":"YulFunctionCall","src":"56:31:9"},"nodeType":"YulExpressionStatement","src":"56:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:9"},"nodeType":"YulFunctionCall","src":"96:15:9"},"nodeType":"YulExpressionStatement","src":"96:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:9"},"nodeType":"YulFunctionCall","src":"120:15:9"},"nodeType":"YulExpressionStatement","src":"120:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:9"},{"body":{"nodeType":"YulBlock","src":"191:230:9","statements":[{"nodeType":"YulAssignment","src":"201:19:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"217:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"211:5:9"},"nodeType":"YulFunctionCall","src":"211:9:9"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"201:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"229:58:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"251:6:9"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"267:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"273:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"263:3:9"},"nodeType":"YulFunctionCall","src":"263:13:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"282:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"278:3:9"},"nodeType":"YulFunctionCall","src":"278:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"259:3:9"},"nodeType":"YulFunctionCall","src":"259:27:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"247:3:9"},"nodeType":"YulFunctionCall","src":"247:40:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"233:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"362:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"364:16:9"},"nodeType":"YulFunctionCall","src":"364:18:9"},"nodeType":"YulExpressionStatement","src":"364:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"305:10:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"325:2:9","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"329:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"321:3:9"},"nodeType":"YulFunctionCall","src":"321:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"333:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"317:3:9"},"nodeType":"YulFunctionCall","src":"317:18:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"302:2:9"},"nodeType":"YulFunctionCall","src":"302:34:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"341:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"353:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"338:2:9"},"nodeType":"YulFunctionCall","src":"338:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"299:2:9"},"nodeType":"YulFunctionCall","src":"299:62:9"},"nodeType":"YulIf","src":"296:88:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"400:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"404:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"393:6:9"},"nodeType":"YulFunctionCall","src":"393:22:9"},"nodeType":"YulExpressionStatement","src":"393:22:9"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"171:4:9","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"180:6:9","type":""}],"src":"146:275:9"},{"body":{"nodeType":"YulBlock","src":"490:631:9","statements":[{"body":{"nodeType":"YulBlock","src":"539:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"548:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"551:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"541:6:9"},"nodeType":"YulFunctionCall","src":"541:12:9"},"nodeType":"YulExpressionStatement","src":"541:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"518:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"526:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"514:3:9"},"nodeType":"YulFunctionCall","src":"514:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"533:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"510:3:9"},"nodeType":"YulFunctionCall","src":"510:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"503:6:9"},"nodeType":"YulFunctionCall","src":"503:35:9"},"nodeType":"YulIf","src":"500:55:9"},{"nodeType":"YulVariableDeclaration","src":"564:23:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"580:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"574:5:9"},"nodeType":"YulFunctionCall","src":"574:13:9"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"568:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"626:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"628:16:9"},"nodeType":"YulFunctionCall","src":"628:18:9"},"nodeType":"YulExpressionStatement","src":"628:18:9"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"602:2:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"614:2:9","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"618:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"610:3:9"},"nodeType":"YulFunctionCall","src":"610:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"622:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"606:3:9"},"nodeType":"YulFunctionCall","src":"606:18:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"599:2:9"},"nodeType":"YulFunctionCall","src":"599:26:9"},"nodeType":"YulIf","src":"596:52:9"},{"nodeType":"YulVariableDeclaration","src":"657:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"667:4:9","type":"","value":"0x20"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"661:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"680:68:9","value":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"723:2:9"},{"kind":"number","nodeType":"YulLiteral","src":"727:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"719:3:9"},"nodeType":"YulFunctionCall","src":"719:13:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"738:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"734:3:9"},"nodeType":"YulFunctionCall","src":"734:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"715:3:9"},"nodeType":"YulFunctionCall","src":"715:27:9"},{"name":"_2","nodeType":"YulIdentifier","src":"744:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"711:3:9"},"nodeType":"YulFunctionCall","src":"711:36:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"695:15:9"},"nodeType":"YulFunctionCall","src":"695:53:9"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"684:7:9","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"764:7:9"},{"name":"_1","nodeType":"YulIdentifier","src":"773:2:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"757:6:9"},"nodeType":"YulFunctionCall","src":"757:19:9"},"nodeType":"YulExpressionStatement","src":"757:19:9"},{"body":{"nodeType":"YulBlock","src":"822:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"831:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"834:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"824:6:9"},"nodeType":"YulFunctionCall","src":"824:12:9"},"nodeType":"YulExpressionStatement","src":"824:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"799:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"807:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"795:3:9"},"nodeType":"YulFunctionCall","src":"795:15:9"},{"name":"_2","nodeType":"YulIdentifier","src":"812:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"791:3:9"},"nodeType":"YulFunctionCall","src":"791:24:9"},{"name":"end","nodeType":"YulIdentifier","src":"817:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"788:2:9"},"nodeType":"YulFunctionCall","src":"788:33:9"},"nodeType":"YulIf","src":"785:53:9"},{"nodeType":"YulVariableDeclaration","src":"847:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"856:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"851:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"912:88:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"941:7:9"},{"name":"i","nodeType":"YulIdentifier","src":"950:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"937:3:9"},"nodeType":"YulFunctionCall","src":"937:15:9"},{"name":"_2","nodeType":"YulIdentifier","src":"954:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:9"},"nodeType":"YulFunctionCall","src":"933:24:9"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"973:6:9"},{"name":"i","nodeType":"YulIdentifier","src":"981:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"969:3:9"},"nodeType":"YulFunctionCall","src":"969:14:9"},{"name":"_2","nodeType":"YulIdentifier","src":"985:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"965:3:9"},"nodeType":"YulFunctionCall","src":"965:23:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"959:5:9"},"nodeType":"YulFunctionCall","src":"959:30:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"926:6:9"},"nodeType":"YulFunctionCall","src":"926:64:9"},"nodeType":"YulExpressionStatement","src":"926:64:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"877:1:9"},{"name":"_1","nodeType":"YulIdentifier","src":"880:2:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"874:2:9"},"nodeType":"YulFunctionCall","src":"874:9:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"884:19:9","statements":[{"nodeType":"YulAssignment","src":"886:15:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"895:1:9"},{"name":"_2","nodeType":"YulIdentifier","src":"898:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"891:3:9"},"nodeType":"YulFunctionCall","src":"891:10:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"886:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"870:3:9","statements":[]},"src":"866:134:9"},{"body":{"nodeType":"YulBlock","src":"1030:60:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"1059:7:9"},{"name":"_1","nodeType":"YulIdentifier","src":"1068:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1055:3:9"},"nodeType":"YulFunctionCall","src":"1055:16:9"},{"name":"_2","nodeType":"YulIdentifier","src":"1073:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1051:3:9"},"nodeType":"YulFunctionCall","src":"1051:25:9"},{"kind":"number","nodeType":"YulLiteral","src":"1078:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1044:6:9"},"nodeType":"YulFunctionCall","src":"1044:36:9"},"nodeType":"YulExpressionStatement","src":"1044:36:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1015:1:9"},{"name":"_1","nodeType":"YulIdentifier","src":"1018:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1012:2:9"},"nodeType":"YulFunctionCall","src":"1012:9:9"},"nodeType":"YulIf","src":"1009:81:9"},{"nodeType":"YulAssignment","src":"1099:16:9","value":{"name":"array_1","nodeType":"YulIdentifier","src":"1108:7:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1099:5:9"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"464:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"472:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"480:5:9","type":""}],"src":"426:695:9"},{"body":{"nodeType":"YulBlock","src":"1286:1368:9","statements":[{"body":{"nodeType":"YulBlock","src":"1332:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1344:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1334:6:9"},"nodeType":"YulFunctionCall","src":"1334:12:9"},"nodeType":"YulExpressionStatement","src":"1334:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1307:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1316:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1303:3:9"},"nodeType":"YulFunctionCall","src":"1303:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1328:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1299:3:9"},"nodeType":"YulFunctionCall","src":"1299:32:9"},"nodeType":"YulIf","src":"1296:52:9"},{"nodeType":"YulVariableDeclaration","src":"1357:30:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1377:9:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1371:5:9"},"nodeType":"YulFunctionCall","src":"1371:16:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1361:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1396:28:9","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1414:2:9","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1418:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1410:3:9"},"nodeType":"YulFunctionCall","src":"1410:10:9"},{"kind":"number","nodeType":"YulLiteral","src":"1422:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1406:3:9"},"nodeType":"YulFunctionCall","src":"1406:18:9"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1400:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"1451:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1460:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1463:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1453:6:9"},"nodeType":"YulFunctionCall","src":"1453:12:9"},"nodeType":"YulExpressionStatement","src":"1453:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1439:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"1447:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1436:2:9"},"nodeType":"YulFunctionCall","src":"1436:14:9"},"nodeType":"YulIf","src":"1433:34:9"},{"nodeType":"YulAssignment","src":"1476:71:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1519:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"1530:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1515:3:9"},"nodeType":"YulFunctionCall","src":"1515:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1539:7:9"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1486:28:9"},"nodeType":"YulFunctionCall","src":"1486:61:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1476:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"1556:12:9","value":{"kind":"number","nodeType":"YulLiteral","src":"1566:2:9","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1560:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1577:41:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1603:9:9"},{"name":"_2","nodeType":"YulIdentifier","src":"1614:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1599:3:9"},"nodeType":"YulFunctionCall","src":"1599:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1593:5:9"},"nodeType":"YulFunctionCall","src":"1593:25:9"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1581:8:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"1647:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1656:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1659:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1649:6:9"},"nodeType":"YulFunctionCall","src":"1649:12:9"},"nodeType":"YulExpressionStatement","src":"1649:12:9"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1633:8:9"},{"name":"_1","nodeType":"YulIdentifier","src":"1643:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1630:2:9"},"nodeType":"YulFunctionCall","src":"1630:16:9"},"nodeType":"YulIf","src":"1627:36:9"},{"nodeType":"YulAssignment","src":"1672:73:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1715:9:9"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1726:8:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1711:3:9"},"nodeType":"YulFunctionCall","src":"1711:24:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1737:7:9"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1682:28:9"},"nodeType":"YulFunctionCall","src":"1682:63:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1672:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"1754:41:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1780:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1791:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1776:3:9"},"nodeType":"YulFunctionCall","src":"1776:18:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1770:5:9"},"nodeType":"YulFunctionCall","src":"1770:25:9"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"1758:8:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"1824:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1833:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1836:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1826:6:9"},"nodeType":"YulFunctionCall","src":"1826:12:9"},"nodeType":"YulExpressionStatement","src":"1826:12:9"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"1810:8:9"},{"name":"_1","nodeType":"YulIdentifier","src":"1820:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1807:2:9"},"nodeType":"YulFunctionCall","src":"1807:16:9"},"nodeType":"YulIf","src":"1804:36:9"},{"nodeType":"YulVariableDeclaration","src":"1849:34:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1863:9:9"},{"name":"offset_2","nodeType":"YulIdentifier","src":"1874:8:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1859:3:9"},"nodeType":"YulFunctionCall","src":"1859:24:9"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"1853:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"1931:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1940:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1943:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1933:6:9"},"nodeType":"YulFunctionCall","src":"1933:12:9"},"nodeType":"YulExpressionStatement","src":"1933:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1910:2:9"},{"kind":"number","nodeType":"YulLiteral","src":"1914:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1906:3:9"},"nodeType":"YulFunctionCall","src":"1906:13:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1921:7:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1902:3:9"},"nodeType":"YulFunctionCall","src":"1902:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1895:6:9"},"nodeType":"YulFunctionCall","src":"1895:35:9"},"nodeType":"YulIf","src":"1892:55:9"},{"nodeType":"YulVariableDeclaration","src":"1956:19:9","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"1972:2:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1966:5:9"},"nodeType":"YulFunctionCall","src":"1966:9:9"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"1960:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"1998:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2000:16:9"},"nodeType":"YulFunctionCall","src":"2000:18:9"},"nodeType":"YulExpressionStatement","src":"2000:18:9"}]},"condition":{"arguments":[{"name":"_4","nodeType":"YulIdentifier","src":"1990:2:9"},{"name":"_1","nodeType":"YulIdentifier","src":"1994:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1987:2:9"},"nodeType":"YulFunctionCall","src":"1987:10:9"},"nodeType":"YulIf","src":"1984:36:9"},{"nodeType":"YulVariableDeclaration","src":"2029:20:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2043:1:9","type":"","value":"5"},{"name":"_4","nodeType":"YulIdentifier","src":"2046:2:9"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2039:3:9"},"nodeType":"YulFunctionCall","src":"2039:10:9"},"variables":[{"name":"_5","nodeType":"YulTypedName","src":"2033:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2058:39:9","value":{"arguments":[{"arguments":[{"name":"_5","nodeType":"YulIdentifier","src":"2089:2:9"},{"name":"_2","nodeType":"YulIdentifier","src":"2093:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2085:3:9"},"nodeType":"YulFunctionCall","src":"2085:11:9"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2069:15:9"},"nodeType":"YulFunctionCall","src":"2069:28:9"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2062:3:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2106:16:9","value":{"name":"dst","nodeType":"YulIdentifier","src":"2119:3:9"},"variables":[{"name":"dst_1","nodeType":"YulTypedName","src":"2110:5:9","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2138:3:9"},{"name":"_4","nodeType":"YulIdentifier","src":"2143:2:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2131:6:9"},"nodeType":"YulFunctionCall","src":"2131:15:9"},"nodeType":"YulExpressionStatement","src":"2131:15:9"},{"nodeType":"YulAssignment","src":"2155:19:9","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2166:3:9"},{"name":"_2","nodeType":"YulIdentifier","src":"2171:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2162:3:9"},"nodeType":"YulFunctionCall","src":"2162:12:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2155:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"2183:34:9","value":{"arguments":[{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2205:2:9"},{"name":"_5","nodeType":"YulIdentifier","src":"2209:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2201:3:9"},"nodeType":"YulFunctionCall","src":"2201:11:9"},{"name":"_2","nodeType":"YulIdentifier","src":"2214:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2197:3:9"},"nodeType":"YulFunctionCall","src":"2197:20:9"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"2187:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2249:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2258:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2261:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2251:6:9"},"nodeType":"YulFunctionCall","src":"2251:12:9"},"nodeType":"YulExpressionStatement","src":"2251:12:9"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"2232:6:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2240:7:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2229:2:9"},"nodeType":"YulFunctionCall","src":"2229:19:9"},"nodeType":"YulIf","src":"2226:39:9"},{"nodeType":"YulVariableDeclaration","src":"2274:22:9","value":{"arguments":[{"name":"_3","nodeType":"YulIdentifier","src":"2289:2:9"},{"name":"_2","nodeType":"YulIdentifier","src":"2293:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2285:3:9"},"nodeType":"YulFunctionCall","src":"2285:11:9"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"2278:3:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2361:263:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2375:23:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2394:3:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2388:5:9"},"nodeType":"YulFunctionCall","src":"2388:10:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2379:5:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"2477:74:9","statements":[{"nodeType":"YulVariableDeclaration","src":"2495:11:9","value":{"kind":"number","nodeType":"YulLiteral","src":"2505:1:9","type":"","value":"0"},"variables":[{"name":"_6","nodeType":"YulTypedName","src":"2499:2:9","type":""}]},{"expression":{"arguments":[{"name":"_6","nodeType":"YulIdentifier","src":"2530:2:9"},{"name":"_6","nodeType":"YulIdentifier","src":"2534:2:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2523:6:9"},"nodeType":"YulFunctionCall","src":"2523:14:9"},"nodeType":"YulExpressionStatement","src":"2523:14:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2424:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2450:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2455:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2446:3:9"},"nodeType":"YulFunctionCall","src":"2446:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"2459:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2442:3:9"},"nodeType":"YulFunctionCall","src":"2442:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2431:3:9"},"nodeType":"YulFunctionCall","src":"2431:31:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2421:2:9"},"nodeType":"YulFunctionCall","src":"2421:42:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2414:6:9"},"nodeType":"YulFunctionCall","src":"2414:50:9"},"nodeType":"YulIf","src":"2411:140:9"},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2571:3:9"},{"name":"value","nodeType":"YulIdentifier","src":"2576:5:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2564:6:9"},"nodeType":"YulFunctionCall","src":"2564:18:9"},"nodeType":"YulExpressionStatement","src":"2564:18:9"},{"nodeType":"YulAssignment","src":"2595:19:9","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2606:3:9"},{"name":"_2","nodeType":"YulIdentifier","src":"2611:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2602:3:9"},"nodeType":"YulFunctionCall","src":"2602:12:9"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"2595:3:9"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2316:3:9"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"2321:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2313:2:9"},"nodeType":"YulFunctionCall","src":"2313:15:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2329:23:9","statements":[{"nodeType":"YulAssignment","src":"2331:19:9","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2342:3:9"},{"name":"_2","nodeType":"YulIdentifier","src":"2347:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2338:3:9"},"nodeType":"YulFunctionCall","src":"2338:12:9"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"2331:3:9"}]}]},"pre":{"nodeType":"YulBlock","src":"2309:3:9","statements":[]},"src":"2305:319:9"},{"nodeType":"YulAssignment","src":"2633:15:9","value":{"name":"dst_1","nodeType":"YulIdentifier","src":"2643:5:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2633:6:9"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1236:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1247:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1259:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1267:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1275:6:9","type":""}],"src":"1126:1528:9"},{"body":{"nodeType":"YulBlock","src":"2691:95:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2708:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2715:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2720:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2711:3:9"},"nodeType":"YulFunctionCall","src":"2711:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2701:6:9"},"nodeType":"YulFunctionCall","src":"2701:31:9"},"nodeType":"YulExpressionStatement","src":"2701:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2748:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2751:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2741:6:9"},"nodeType":"YulFunctionCall","src":"2741:15:9"},"nodeType":"YulExpressionStatement","src":"2741:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2772:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2775:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2765:6:9"},"nodeType":"YulFunctionCall","src":"2765:15:9"},"nodeType":"YulExpressionStatement","src":"2765:15:9"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"2659:127:9"},{"body":{"nodeType":"YulBlock","src":"2838:185:9","statements":[{"body":{"nodeType":"YulBlock","src":"2877:111:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2898:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2905:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2910:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2901:3:9"},"nodeType":"YulFunctionCall","src":"2901:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2891:6:9"},"nodeType":"YulFunctionCall","src":"2891:31:9"},"nodeType":"YulExpressionStatement","src":"2891:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2942:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2945:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2935:6:9"},"nodeType":"YulFunctionCall","src":"2935:15:9"},"nodeType":"YulExpressionStatement","src":"2935:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2970:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2973:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2963:6:9"},"nodeType":"YulFunctionCall","src":"2963:15:9"},"nodeType":"YulExpressionStatement","src":"2963:15:9"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2854:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2865:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2861:3:9"},"nodeType":"YulFunctionCall","src":"2861:6:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2851:2:9"},"nodeType":"YulFunctionCall","src":"2851:17:9"},"nodeType":"YulIf","src":"2848:140:9"},{"nodeType":"YulAssignment","src":"2997:20:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3008:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"3015:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3004:3:9"},"nodeType":"YulFunctionCall","src":"3004:13:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2997:3:9"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2820:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2830:3:9","type":""}],"src":"2791:232:9"},{"body":{"nodeType":"YulBlock","src":"3185:218:9","statements":[{"nodeType":"YulAssignment","src":"3195:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3207:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3218:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3203:3:9"},"nodeType":"YulFunctionCall","src":"3203:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3195:4:9"}]},{"nodeType":"YulVariableDeclaration","src":"3230:29:9","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3248:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"3253:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3244:3:9"},"nodeType":"YulFunctionCall","src":"3244:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"3257:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3240:3:9"},"nodeType":"YulFunctionCall","src":"3240:19:9"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3234:2:9","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3275:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3290:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3298:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3286:3:9"},"nodeType":"YulFunctionCall","src":"3286:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3268:6:9"},"nodeType":"YulFunctionCall","src":"3268:34:9"},"nodeType":"YulExpressionStatement","src":"3268:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3322:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3333:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3318:3:9"},"nodeType":"YulFunctionCall","src":"3318:18:9"},{"name":"value1","nodeType":"YulIdentifier","src":"3338:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3311:6:9"},"nodeType":"YulFunctionCall","src":"3311:34:9"},"nodeType":"YulExpressionStatement","src":"3311:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3365:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"3376:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3361:3:9"},"nodeType":"YulFunctionCall","src":"3361:18:9"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"3385:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3393:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3381:3:9"},"nodeType":"YulFunctionCall","src":"3381:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3354:6:9"},"nodeType":"YulFunctionCall","src":"3354:43:9"},"nodeType":"YulExpressionStatement","src":"3354:43:9"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3138:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3149:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3157:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3165:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3176:4:9","type":""}],"src":"3028:375:9"},{"body":{"nodeType":"YulBlock","src":"3463:325:9","statements":[{"nodeType":"YulAssignment","src":"3473:22:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3487:1:9","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"3490:4:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3483:3:9"},"nodeType":"YulFunctionCall","src":"3483:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3473:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"3504:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3534:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"3540:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3530:3:9"},"nodeType":"YulFunctionCall","src":"3530:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3508:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3581:31:9","statements":[{"nodeType":"YulAssignment","src":"3583:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3597:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3605:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3593:3:9"},"nodeType":"YulFunctionCall","src":"3593:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3583:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3561:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3554:6:9"},"nodeType":"YulFunctionCall","src":"3554:26:9"},"nodeType":"YulIf","src":"3551:61:9"},{"body":{"nodeType":"YulBlock","src":"3671:111:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3692:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3699:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3704:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3695:3:9"},"nodeType":"YulFunctionCall","src":"3695:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3685:6:9"},"nodeType":"YulFunctionCall","src":"3685:31:9"},"nodeType":"YulExpressionStatement","src":"3685:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3736:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3739:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3729:6:9"},"nodeType":"YulFunctionCall","src":"3729:15:9"},"nodeType":"YulExpressionStatement","src":"3729:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3764:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3767:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3757:6:9"},"nodeType":"YulFunctionCall","src":"3757:15:9"},"nodeType":"YulExpressionStatement","src":"3757:15:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3627:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3650:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3658:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3647:2:9"},"nodeType":"YulFunctionCall","src":"3647:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3624:2:9"},"nodeType":"YulFunctionCall","src":"3624:38:9"},"nodeType":"YulIf","src":"3621:161:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3443:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3452:6:9","type":""}],"src":"3408:380:9"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        if gt(_1, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let _2 := 0x20\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), _2))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), _2), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _2) }\n        {\n            mstore(add(add(array_1, i), _2), mload(add(add(offset, i), _2)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(array_1, _1), _2), 0)\n        }\n        array := array_1\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := mload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let offset_2 := mload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_2)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _1) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _2))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, _5), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            if iszero(eq(value, and(value, sub(shl(160, 1), 1))))\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        value2 := dst_1\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001d4438038062001d448339810160408190526200003491620003f1565b82516200004990600290602086019062000215565b5081516200005f90600390602085019062000215565b50805162000075906004906020840190620002a4565b5060005b8151811015620000e5576001600560008484815181106200009e576200009e62000508565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000dc816200051e565b91505062000079565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200016057600080fd5b505af115801562000175573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001f357600080fd5b505af115801562000208573d6000803e3d6000fd5b5050505050505062000585565b828054620002239062000548565b90600052602060002090601f01602090048101928262000247576000855562000292565b82601f106200026257805160ff191683800117855562000292565b8280016001018555821562000292579182015b828111156200029257825182559160200191906001019062000275565b50620002a0929150620002fc565b5090565b82805482825590600052602060002090810192821562000292579160200282015b828111156200029257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002c5565b5b80821115620002a05760008155600101620002fd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000354576200035462000313565b604052919050565b600082601f8301126200036e57600080fd5b81516001600160401b038111156200038a576200038a62000313565b6020620003a0601f8301601f1916820162000329565b8281528582848701011115620003b557600080fd5b60005b83811015620003d5578581018301518282018401528201620003b8565b83811115620003e75760008385840101525b5095945050505050565b6000806000606084860312156200040757600080fd5b83516001600160401b03808211156200041f57600080fd5b6200042d878388016200035c565b94506020915081860151818111156200044557600080fd5b62000453888289016200035c565b9450506040860151818111156200046957600080fd5b8601601f810188136200047b57600080fd5b80518281111562000490576200049062000313565b8060051b9250620004a384840162000329565b818152928201840192848101908a851115620004be57600080fd5b928501925b84841015620004f857835192506001600160a01b0383168314620004e75760008081fd5b8282529285019290850190620004c3565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200054157634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200055d57607f821691505b602082108114156200057f57634e487b7160e01b600052602260045260246000fd5b50919050565b6117af80620005956000396000f3fe608060405234801561001057600080fd5b50600436106100f65760003560e01c8063959b8c3f11610092578063959b8c3f146101ca57806395d89b41146101dd5780639bd9bbc6146101e5578063a9059cbb146101f8578063d95b63711461020b578063dd62ed3e1461021e578063fad8b32a14610257578063fc673c4f1461026a578063fe9d93031461027d57600080fd5b806306e48538146100fb57806306fdde0314610119578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163578063313ce56714610176578063556f0dc71461018557806362ad1b831461018c57806370a08231146101a1575b600080fd5b610103610290565b60405161011091906111df565b60405180910390f35b6101216102f2565b6040516101109190611279565b61014161013c3660046112a4565b61037b565b6040519015158152602001610110565b6001545b604051908152602001610110565b6101416101713660046112d0565b610393565b60405160128152602001610110565b6001610155565b61019f61019a3660046113b4565b61055c565b005b6101556101af366004611447565b6001600160a01b031660009081526020819052604090205490565b61019f6101d8366004611447565b610598565b6101216106b6565b61019f6101f3366004611464565b6106c5565b6101416102063660046112a4565b6106e8565b6101416102193660046114bd565b61079b565b61015561022c3660046114bd565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b61019f610265366004611447565b61083d565b61019f6102783660046114f6565b610959565b61019f61028b366004611576565b610991565b606060048054806020026020016040519081016040528092919081815260200182805480156102e857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ca575b5050505050905090565b606060028054610301906115bd565b80601f016020809104026020016040519081016040528092919081815260200182805461032d906115bd565b80156102e85780601f1061034f576101008083540402835291602001916102e8565b820191906000526020600020905b81548152906001019060200180831161035d57509395945050505050565b6000336103898185856109b0565b5060019392505050565b60006001600160a01b0383166103c45760405162461bcd60e51b81526004016103bb906115f8565b60405180910390fd5b6001600160a01b0384166104295760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103bb565b600033905061045a818686866040518060200160405280600081525060405180602001604052806000815250610ad7565b610486818686866040518060200160405280600081525060405180602001604052806000815250610c0e565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561050e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103bb565b610522868361051d8785611652565b6109b0565b6105508287878760405180602001604052806000815250604051806020016040528060008152506000610d74565b50600195945050505050565b610566338661079b565b6105825760405162461bcd60e51b81526004016103bb90611669565b61059185858585856001610f48565b5050505050565b336001600160a01b03821614156105fd5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103bb565b6001600160a01b03811660009081526005602052604090205460ff161561064e573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561067d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610301906115bd565b6106e333848484604051806020016040528060008152506001610f48565b505050565b60006001600160a01b0383166107105760405162461bcd60e51b81526004016103bb906115f8565b6000339050610741818286866040518060200160405280600081525060405180602001604052806000815250610ad7565b61076d818286866040518060200160405280600081525060405180602001604052806000815250610c0e565b6103898182868660405180602001604052806000815250604051806020016040528060008152506000610d74565b6000816001600160a01b0316836001600160a01b0316148061080657506001600160a01b03831660009081526005602052604090205460ff16801561080657506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061083657506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156108a05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103bb565b6001600160a01b03811660009081526005602052604090205460ff16156108f4573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610920565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b610963338561079b565b61097f5760405162461bcd60e51b81526004016103bb90611669565b61098b8484848461102b565b50505050565b6109ac3383836040518060200160405280600081525061102b565b5050565b6001600160a01b038316610a145760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103bb565b6001600160a01b038216610a765760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103bb565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610b5357600080fd5b505afa158015610b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8b91906116b5565b90506001600160a01b03811615610c0557604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610bd2908a908a908a908a908a908a906004016116d2565b600060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c875760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103bb565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610cbe90849061172c565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d1693929190611744565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d6391815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610df057600080fd5b505afa158015610e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2891906116b5565b90506001600160a01b03811615610ea4576040516223de2960e01b81526001600160a01b038216906223de2990610e6d908b908b908b908b908b908b906004016116d2565b600060405180830381600087803b158015610e8757600080fd5b505af1158015610e9b573d6000803e3d6000fd5b50505050610f3e565b8115610f3e576001600160a01b0386163b15610f3e5760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103bb565b5050505050505050565b6001600160a01b038616610fa95760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103bb565b6001600160a01b038516610fff5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103bb565b3361100e818888888888610ad7565b61101c818888888888610c0e565b610c0581888888888888610d74565b6001600160a01b03841661108c5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103bb565b3361109c81866000878787610ad7565b6001600160a01b038516600090815260208190526040902054848110156111115760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103bb565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611140908490611652565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161118e93929190611744565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112205783516001600160a01b0316835292840192918401916001016111fb565b50909695505050505050565b6000815180845260005b8181101561125257602081850181015186830182015201611236565b81811115611264576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610836602083018461122c565b6001600160a01b03811681146112a157600080fd5b50565b600080604083850312156112b757600080fd5b82356112c28161128c565b946020939093013593505050565b6000806000606084860312156112e557600080fd5b83356112f08161128c565b925060208401356113008161128c565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261133857600080fd5b813567ffffffffffffffff8082111561135357611353611311565b604051601f8301601f19908116603f0116810190828211818310171561137b5761137b611311565b8160405283815286602085880101111561139457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113cc57600080fd5b85356113d78161128c565b945060208601356113e78161128c565b935060408601359250606086013567ffffffffffffffff8082111561140b57600080fd5b61141789838a01611327565b9350608088013591508082111561142d57600080fd5b5061143a88828901611327565b9150509295509295909350565b60006020828403121561145957600080fd5b81356108368161128c565b60008060006060848603121561147957600080fd5b83356114848161128c565b925060208401359150604084013567ffffffffffffffff8111156114a757600080fd5b6114b386828701611327565b9150509250925092565b600080604083850312156114d057600080fd5b82356114db8161128c565b915060208301356114eb8161128c565b809150509250929050565b6000806000806080858703121561150c57600080fd5b84356115178161128c565b935060208501359250604085013567ffffffffffffffff8082111561153b57600080fd5b61154788838901611327565b9350606087013591508082111561155d57600080fd5b5061156a87828801611327565b91505092959194509250565b6000806040838503121561158957600080fd5b82359150602083013567ffffffffffffffff8111156115a757600080fd5b6115b385828601611327565b9150509250929050565b600181811c908216806115d157607f821691505b602082108114156115f257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156116645761166461163c565b500390565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116c757600080fd5b81516108368161128c565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009061170d9083018561122c565b82810360a084015261171f818561122c565b9998505050505050505050565b6000821982111561173f5761173f61163c565b500190565b83815260606020820152600061175d606083018561122c565b828103604084015261176f818561122c565b969550505050505056fea264697066735822122029ac8ca1a85b41e53fbda697d1cd2a636fddd144e569b028b37ad81d0d757bc864736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1D44 CODESIZE SUB DUP1 PUSH3 0x1D44 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x3F1 JUMP JUMPDEST DUP3 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x215 JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x215 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x75 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x2A4 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0xE5 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x9E JUMPI PUSH3 0x9E PUSH3 0x508 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0xDC DUP2 PUSH3 0x51E JUMP JUMPDEST SWAP2 POP POP PUSH3 0x79 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xAC7FBAB5F54A3CA8194167523C6753BFEB96A445279294B6125B68CCE2177054 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0x29965A1D SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x175 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xAEA199E31A596269B42CDAFD93407F14436DB6E4CAD65417994C2EB37381E05A PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP3 POP PUSH4 0x29965A1D SWAP2 POP PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x208 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH3 0x585 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x223 SWAP1 PUSH3 0x548 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x247 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x292 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x262 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x292 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x292 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x292 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x275 JUMP JUMPDEST POP PUSH3 0x2A0 SWAP3 SWAP2 POP PUSH3 0x2FC JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x292 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x292 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2C5 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x2A0 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2FD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH3 0x354 JUMPI PUSH3 0x354 PUSH3 0x313 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x38A JUMPI PUSH3 0x38A PUSH3 0x313 JUMP JUMPDEST PUSH1 0x20 PUSH3 0x3A0 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH3 0x329 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP6 DUP3 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x3D5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP3 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x3B8 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x3E7 JUMPI PUSH1 0x0 DUP4 DUP6 DUP5 ADD ADD MSTORE JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x407 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x41F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x42D DUP8 DUP4 DUP9 ADD PUSH3 0x35C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 SWAP2 POP DUP2 DUP7 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x453 DUP9 DUP3 DUP10 ADD PUSH3 0x35C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH3 0x47B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 MLOAD DUP3 DUP2 GT ISZERO PUSH3 0x490 JUMPI PUSH3 0x490 PUSH3 0x313 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP3 POP PUSH3 0x4A3 DUP5 DUP5 ADD PUSH3 0x329 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP3 DUP3 ADD DUP5 ADD SWAP3 DUP5 DUP2 ADD SWAP1 DUP11 DUP6 GT ISZERO PUSH3 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 DUP6 ADD SWAP3 JUMPDEST DUP5 DUP5 LT ISZERO PUSH3 0x4F8 JUMPI DUP4 MLOAD SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 EQ PUSH3 0x4E7 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST DUP3 DUP3 MSTORE SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH3 0x4C3 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x541 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x55D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x57F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17AF DUP1 PUSH3 0x595 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0x92 JUMPI DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x155 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH2 0x155 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH2 0x19F PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x301 SWAP1 PUSH2 0x15BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32D SWAP1 PUSH2 0x15BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x389 DUP2 DUP6 DUP6 PUSH2 0x9B0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x45A DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x486 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x522 DUP7 DUP4 PUSH2 0x51D DUP8 DUP6 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x550 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD74 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x566 CALLER DUP7 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x591 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF48 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x64E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x67D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x301 SWAP1 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x6E3 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x741 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x76D DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x389 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x806 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x806 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x836 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8F4 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x920 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x963 CALLER DUP6 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x98B DUP5 DUP5 DUP5 DUP5 PUSH2 0x102B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9AC CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x102B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBD2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCBE SWAP1 DUP5 SWAP1 PUSH2 0x172C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD16 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD63 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE6D SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF3E JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF3E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3BB JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH2 0x100E DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x101C DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0xC05 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH2 0x109C DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1111 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1140 SWAP1 DUP5 SWAP1 PUSH2 0x1652 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x118E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1220 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11FB JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1236 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1264 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x836 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12C2 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12F0 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1300 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1353 JUMPI PUSH2 0x1353 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x137B JUMPI PUSH2 0x137B PUSH2 0x1311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13D7 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13E7 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1417 DUP10 DUP4 DUP11 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x142D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143A DUP9 DUP3 DUP10 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x836 DUP2 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1484 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B3 DUP7 DUP3 DUP8 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14DB DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14EB DUP2 PUSH2 0x128C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x150C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1517 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x153B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1547 DUP9 DUP4 DUP10 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x155D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156A DUP8 DUP3 DUP9 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x15F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1664 PUSH2 0x163C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x836 DUP2 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x170D SWAP1 DUP4 ADD DUP6 PUSH2 0x122C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x171F DUP2 DUP6 PUSH2 0x122C JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x173F JUMPI PUSH2 0x173F PUSH2 0x163C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x175D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x122C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x176F DUP2 DUP6 PUSH2 0x122C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xAC DUP13 LOG1 0xA8 JUMPDEST COINBASE 0xE5 EXTCODEHASH 0xBD 0xA6 SWAP8 0xD1 0xCD 0x2A PUSH4 0x6FDDD144 0xE5 PUSH10 0xB028B37AD81D0D757BC8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1073:17251:1:-:0;;;2301:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2433:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2456:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2484:42:1;;;;:22;;:42;;;;;:::i;:::-;;2541:9;2536:126;2560:17;:24;2556:1;:28;2536:126;;;2647:4;2605:17;:39;2623:17;2641:1;2623:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2605:39:1;;;;;;;;;;;-1:-1:-1;2605:39:1;:46;;-1:-1:-1;;2605:46:1;;;;;;;;;;2586:3;;;;:::i;:::-;;;;2536:126;;;-1:-1:-1;2703:97:1;;-1:-1:-1;;;2703:97:1;;2753:4;2703:97;;;3268:34:9;;;2760:24:1;3318:18:9;;;3311:34;3361:18;;;3354:43;1227:42:1;;2703:41;;3203:18:9;;2703:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2810:96:1;;-1:-1:-1;;;2810:96:1;;2860:4;2810:96;;;3268:34:9;;;2867:23:1;3318:18:9;;;3311:34;3361:18;;;3354:43;1227:42:1;;-1:-1:-1;2810:41:1;;-1:-1:-1;3203:18:9;;2810:96:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:612;;;1073:17251;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1073:17251:1;;;-1:-1:-1;1073:17251:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1073:17251:1;-1:-1:-1;;;;;1073:17251:1;;;;;;;;;;;-1:-1:-1;1073:17251:1;;;;;;;;;;;;;;;;;;;;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:9;247:40;;-1:-1:-1;;;;;302:34:9;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:9:o;426:695::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;574:13;;-1:-1:-1;;;;;599:26:9;;596:52;;;628:18;;:::i;:::-;667:4;695:53;738:2;719:13;;-1:-1:-1;;715:27:9;711:36;;695:53;:::i;:::-;773:2;764:7;757:19;817:3;812:2;807;799:6;795:15;791:24;788:33;785:53;;;834:1;831;824:12;785:53;856:1;866:134;880:2;877:1;874:9;866:134;;;969:14;;;965:23;;959:30;937:15;;;933:24;;926:64;891:10;;866:134;;;1018:2;1015:1;1012:9;1009:81;;;1078:1;1073:2;1068;1059:7;1055:16;1051:25;1044:36;1009:81;-1:-1:-1;1108:7:9;426:695;-1:-1:-1;;;;;426:695:9:o;1126:1528::-;1259:6;1267;1275;1328:2;1316:9;1307:7;1303:23;1299:32;1296:52;;;1344:1;1341;1334:12;1296:52;1371:16;;-1:-1:-1;;;;;1436:14:9;;;1433:34;;;1463:1;1460;1453:12;1433:34;1486:61;1539:7;1530:6;1519:9;1515:22;1486:61;:::i;:::-;1476:71;;1566:2;1556:12;;1614:2;1603:9;1599:18;1593:25;1643:2;1633:8;1630:16;1627:36;;;1659:1;1656;1649:12;1627:36;1682:63;1737:7;1726:8;1715:9;1711:24;1682:63;:::i;:::-;1672:73;;;1791:2;1780:9;1776:18;1770:25;1820:2;1810:8;1807:16;1804:36;;;1836:1;1833;1826:12;1804:36;1859:24;;1914:4;1906:13;;1902:27;-1:-1:-1;1892:55:9;;1943:1;1940;1933:12;1892:55;1972:2;1966:9;1994:2;1990;1987:10;1984:36;;;2000:18;;:::i;:::-;2046:2;2043:1;2039:10;2029:20;;2069:28;2093:2;2089;2085:11;2069:28;:::i;:::-;2131:15;;;2201:11;;;2197:20;;;2162:12;;;;2229:19;;;2226:39;;;2261:1;2258;2251:12;2226:39;2285:11;;;;2305:319;2321:6;2316:3;2313:15;2305:319;;;2388:10;;;-1:-1:-1;;;;;;2431:31:9;;2421:42;;2411:140;;2505:1;2534:2;2530;2523:14;2411:140;2564:18;;;2338:12;;;;2602;;;;2305:319;;;2643:5;2633:15;;;;;;;;1126:1528;;;;;:::o;2659:127::-;2720:10;2715:3;2711:20;2708:1;2701:31;2751:4;2748:1;2741:15;2775:4;2772:1;2765:15;2791:232;2830:3;-1:-1:-1;;2851:17:9;;2848:140;;;2910:10;2905:3;2901:20;2898:1;2891:31;2945:4;2942:1;2935:15;2973:4;2970:1;2963:15;2848:140;-1:-1:-1;3015:1:9;3004:13;;2791:232::o;3408:380::-;3487:1;3483:12;;;;3530;;;3551:61;;3605:4;3597:6;3593:17;3583:27;;3551:61;3658:2;3650:6;3647:14;3627:18;3624:38;3621:161;;;3704:10;3699:3;3695:20;3692:1;3685:31;3739:4;3736:1;3729:15;3767:4;3764:1;3757:15;3621:161;;3408:380;;;:::o;:::-;1073:17251:1;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1097":{"entryPoint":2480,"id":1097,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1213":{"entryPoint":null,"id":1213,"parameterSlots":4,"returnSlots":0},"@_burn_986":{"entryPoint":4139,"id":986,"parameterSlots":4,"returnSlots":0},"@_callTokensReceived_1200":{"entryPoint":3444,"id":1200,"parameterSlots":7,"returnSlots":0},"@_callTokensToSend_1142":{"entryPoint":2775,"id":1142,"parameterSlots":6,"returnSlots":0},"@_move_1052":{"entryPoint":3086,"id":1052,"parameterSlots":6,"returnSlots":0},"@_msgSender_1722":{"entryPoint":null,"id":1722,"parameterSlots":0,"returnSlots":1},"@_send_893":{"entryPoint":3912,"id":893,"parameterSlots":6,"returnSlots":0},"@allowance_605":{"entryPoint":null,"id":605,"parameterSlots":2,"returnSlots":1},"@approve_630":{"entryPoint":891,"id":630,"parameterSlots":2,"returnSlots":1},"@authorizeOperator_467":{"entryPoint":1432,"id":467,"parameterSlots":1,"returnSlots":0},"@balanceOf_291":{"entryPoint":null,"id":291,"parameterSlots":1,"returnSlots":1},"@burn_388":{"entryPoint":2449,"id":388,"parameterSlots":2,"returnSlots":0},"@decimals_253":{"entryPoint":null,"id":253,"parameterSlots":0,"returnSlots":1},"@defaultOperators_523":{"entryPoint":656,"id":523,"parameterSlots":0,"returnSlots":1},"@granularity_263":{"entryPoint":null,"id":263,"parameterSlots":0,"returnSlots":1},"@isContract_1433":{"entryPoint":null,"id":1433,"parameterSlots":1,"returnSlots":1},"@isOperatorFor_422":{"entryPoint":1947,"id":422,"parameterSlots":2,"returnSlots":1},"@name_234":{"entryPoint":754,"id":234,"parameterSlots":0,"returnSlots":1},"@operatorBurn_587":{"entryPoint":2393,"id":587,"parameterSlots":4,"returnSlots":0},"@operatorSend_557":{"entryPoint":1372,"id":557,"parameterSlots":5,"returnSlots":0},"@revokeOperator_512":{"entryPoint":2109,"id":512,"parameterSlots":1,"returnSlots":0},"@send_313":{"entryPoint":1733,"id":313,"parameterSlots":3,"returnSlots":0},"@symbol_244":{"entryPoint":1718,"id":244,"parameterSlots":0,"returnSlots":1},"@totalSupply_275":{"entryPoint":null,"id":275,"parameterSlots":0,"returnSlots":1},"@transferFrom_722":{"entryPoint":915,"id":722,"parameterSlots":3,"returnSlots":1},"@transfer_370":{"entryPoint":1768,"id":370,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":4903,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5191,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":5813,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5309,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4816,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":5044,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4772,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5220,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":5366,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256t_bytes_memory_ptr":{"entryPoint":5494,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":4652,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5842,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":4575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4729,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5624,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5737,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":5956,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":5932,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5714,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":5565,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":5692,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":4881,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":4748,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15139:9","statements":[{"nodeType":"YulBlock","src":"6:3:9","statements":[]},{"body":{"nodeType":"YulBlock","src":"165:507:9","statements":[{"nodeType":"YulVariableDeclaration","src":"175:12:9","value":{"kind":"number","nodeType":"YulLiteral","src":"185:2:9","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"179:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"196:32:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"214:9:9"},{"name":"_1","nodeType":"YulIdentifier","src":"225:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"210:3:9"},"nodeType":"YulFunctionCall","src":"210:18:9"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"200:6:9","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"244:9:9"},{"name":"_1","nodeType":"YulIdentifier","src":"255:2:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"237:6:9"},"nodeType":"YulFunctionCall","src":"237:21:9"},"nodeType":"YulExpressionStatement","src":"237:21:9"},{"nodeType":"YulVariableDeclaration","src":"267:17:9","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"278:6:9"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"271:3:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"293:27:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"313:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"307:5:9"},"nodeType":"YulFunctionCall","src":"307:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"297:6:9","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"336:6:9"},{"name":"length","nodeType":"YulIdentifier","src":"344:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"329:6:9"},"nodeType":"YulFunctionCall","src":"329:22:9"},"nodeType":"YulExpressionStatement","src":"329:22:9"},{"nodeType":"YulAssignment","src":"360:25:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"371:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"382:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"367:3:9"},"nodeType":"YulFunctionCall","src":"367:18:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"360:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"394:29:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"412:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"420:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"408:3:9"},"nodeType":"YulFunctionCall","src":"408:15:9"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"398:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"432:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"441:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"436:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"500:146:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"521:3:9"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"536:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"530:5:9"},"nodeType":"YulFunctionCall","src":"530:13:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"553:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"558:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"549:3:9"},"nodeType":"YulFunctionCall","src":"549:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"562:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"545:3:9"},"nodeType":"YulFunctionCall","src":"545:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"526:3:9"},"nodeType":"YulFunctionCall","src":"526:39:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"514:6:9"},"nodeType":"YulFunctionCall","src":"514:52:9"},"nodeType":"YulExpressionStatement","src":"514:52:9"},{"nodeType":"YulAssignment","src":"579:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"590:3:9"},{"name":"_1","nodeType":"YulIdentifier","src":"595:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"586:3:9"},"nodeType":"YulFunctionCall","src":"586:12:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"579:3:9"}]},{"nodeType":"YulAssignment","src":"611:25:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"625:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"633:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"621:3:9"},"nodeType":"YulFunctionCall","src":"621:15:9"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"611:6:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"462:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"465:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"459:2:9"},"nodeType":"YulFunctionCall","src":"459:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"473:18:9","statements":[{"nodeType":"YulAssignment","src":"475:14:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"484:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"487:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:9"},"nodeType":"YulFunctionCall","src":"480:9:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"475:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"455:3:9","statements":[]},"src":"451:195:9"},{"nodeType":"YulAssignment","src":"655:11:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"663:3:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"655:4:9"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"134:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"145:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"156:4:9","type":""}],"src":"14:658:9"},{"body":{"nodeType":"YulBlock","src":"727:422:9","statements":[{"nodeType":"YulVariableDeclaration","src":"737:26:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"757:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"751:5:9"},"nodeType":"YulFunctionCall","src":"751:12:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"741:6:9","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"779:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"784:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"772:6:9"},"nodeType":"YulFunctionCall","src":"772:19:9"},"nodeType":"YulExpressionStatement","src":"772:19:9"},{"nodeType":"YulVariableDeclaration","src":"800:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"809:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"804:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"871:110:9","statements":[{"nodeType":"YulVariableDeclaration","src":"885:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"895:4:9","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"889:2:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"927:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"932:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:9"},"nodeType":"YulFunctionCall","src":"923:11:9"},{"name":"_1","nodeType":"YulIdentifier","src":"936:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:9"},"nodeType":"YulFunctionCall","src":"919:20:9"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"955:5:9"},{"name":"i","nodeType":"YulIdentifier","src":"962:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:9"},"nodeType":"YulFunctionCall","src":"951:13:9"},{"name":"_1","nodeType":"YulIdentifier","src":"966:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"947:3:9"},"nodeType":"YulFunctionCall","src":"947:22:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"941:5:9"},"nodeType":"YulFunctionCall","src":"941:29:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"912:6:9"},"nodeType":"YulFunctionCall","src":"912:59:9"},"nodeType":"YulExpressionStatement","src":"912:59:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"830:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"833:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"827:2:9"},"nodeType":"YulFunctionCall","src":"827:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"841:21:9","statements":[{"nodeType":"YulAssignment","src":"843:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"852:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"855:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"848:3:9"},"nodeType":"YulFunctionCall","src":"848:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"843:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"823:3:9","statements":[]},"src":"819:162:9"},{"body":{"nodeType":"YulBlock","src":"1015:62:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1044:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"1049:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:9"},"nodeType":"YulFunctionCall","src":"1040:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"1058:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:9"},"nodeType":"YulFunctionCall","src":"1036:27:9"},{"kind":"number","nodeType":"YulLiteral","src":"1065:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1029:6:9"},"nodeType":"YulFunctionCall","src":"1029:38:9"},"nodeType":"YulExpressionStatement","src":"1029:38:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"996:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"999:6:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"993:2:9"},"nodeType":"YulFunctionCall","src":"993:13:9"},"nodeType":"YulIf","src":"990:87:9"},{"nodeType":"YulAssignment","src":"1086:57:9","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1101:3:9"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1114:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1122:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1110:3:9"},"nodeType":"YulFunctionCall","src":"1110:15:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1131:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1127:3:9"},"nodeType":"YulFunctionCall","src":"1127:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1106:3:9"},"nodeType":"YulFunctionCall","src":"1106:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:9"},"nodeType":"YulFunctionCall","src":"1097:39:9"},{"kind":"number","nodeType":"YulLiteral","src":"1138:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1093:3:9"},"nodeType":"YulFunctionCall","src":"1093:50:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1086:3:9"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"704:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"711:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"719:3:9","type":""}],"src":"677:472:9"},{"body":{"nodeType":"YulBlock","src":"1275:99:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1292:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1303:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1285:6:9"},"nodeType":"YulFunctionCall","src":"1285:21:9"},"nodeType":"YulExpressionStatement","src":"1285:21:9"},{"nodeType":"YulAssignment","src":"1315:53:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1341:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1353:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1364:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:9"},"nodeType":"YulFunctionCall","src":"1349:18:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1323:17:9"},"nodeType":"YulFunctionCall","src":"1323:45:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1315:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1244:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1255:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1266:4:9","type":""}],"src":"1154:220:9"},{"body":{"nodeType":"YulBlock","src":"1424:86:9","statements":[{"body":{"nodeType":"YulBlock","src":"1488:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1500:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1490:6:9"},"nodeType":"YulFunctionCall","src":"1490:12:9"},"nodeType":"YulExpressionStatement","src":"1490:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1458:5:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1469:3:9"},"nodeType":"YulFunctionCall","src":"1469:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"1482:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1465:3:9"},"nodeType":"YulFunctionCall","src":"1465:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1454:3:9"},"nodeType":"YulFunctionCall","src":"1454:31:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1444:2:9"},"nodeType":"YulFunctionCall","src":"1444:42:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1437:6:9"},"nodeType":"YulFunctionCall","src":"1437:50:9"},"nodeType":"YulIf","src":"1434:70:9"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1413:5:9","type":""}],"src":"1379:131:9"},{"body":{"nodeType":"YulBlock","src":"1602:228:9","statements":[{"body":{"nodeType":"YulBlock","src":"1648:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1657:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1660:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1650:6:9"},"nodeType":"YulFunctionCall","src":"1650:12:9"},"nodeType":"YulExpressionStatement","src":"1650:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1623:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1632:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1619:3:9"},"nodeType":"YulFunctionCall","src":"1619:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1644:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1615:3:9"},"nodeType":"YulFunctionCall","src":"1615:32:9"},"nodeType":"YulIf","src":"1612:52:9"},{"nodeType":"YulVariableDeclaration","src":"1673:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1699:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1686:12:9"},"nodeType":"YulFunctionCall","src":"1686:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1743:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1718:24:9"},"nodeType":"YulFunctionCall","src":"1718:31:9"},"nodeType":"YulExpressionStatement","src":"1718:31:9"},{"nodeType":"YulAssignment","src":"1758:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"1768:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1758:6:9"}]},{"nodeType":"YulAssignment","src":"1782:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1809:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1820:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1805:3:9"},"nodeType":"YulFunctionCall","src":"1805:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1792:12:9"},"nodeType":"YulFunctionCall","src":"1792:32:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1782:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1560:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1571:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1583:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1591:6:9","type":""}],"src":"1515:315:9"},{"body":{"nodeType":"YulBlock","src":"1930:92:9","statements":[{"nodeType":"YulAssignment","src":"1940:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1952:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1963:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1948:3:9"},"nodeType":"YulFunctionCall","src":"1948:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1940:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1982:9:9"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2007:6:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2000:6:9"},"nodeType":"YulFunctionCall","src":"2000:14:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1993:6:9"},"nodeType":"YulFunctionCall","src":"1993:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1975:6:9"},"nodeType":"YulFunctionCall","src":"1975:41:9"},"nodeType":"YulExpressionStatement","src":"1975:41:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1899:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1910:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1921:4:9","type":""}],"src":"1835:187:9"},{"body":{"nodeType":"YulBlock","src":"2128:76:9","statements":[{"nodeType":"YulAssignment","src":"2138:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2150:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2161:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2146:3:9"},"nodeType":"YulFunctionCall","src":"2146:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2138:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2180:9:9"},{"name":"value0","nodeType":"YulIdentifier","src":"2191:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2173:6:9"},"nodeType":"YulFunctionCall","src":"2173:25:9"},"nodeType":"YulExpressionStatement","src":"2173:25:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2097:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2108:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2119:4:9","type":""}],"src":"2027:177:9"},{"body":{"nodeType":"YulBlock","src":"2313:352:9","statements":[{"body":{"nodeType":"YulBlock","src":"2359:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2371:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2361:6:9"},"nodeType":"YulFunctionCall","src":"2361:12:9"},"nodeType":"YulExpressionStatement","src":"2361:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2334:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2343:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2330:3:9"},"nodeType":"YulFunctionCall","src":"2330:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2355:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2326:3:9"},"nodeType":"YulFunctionCall","src":"2326:32:9"},"nodeType":"YulIf","src":"2323:52:9"},{"nodeType":"YulVariableDeclaration","src":"2384:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2410:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2397:12:9"},"nodeType":"YulFunctionCall","src":"2397:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2388:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2454:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2429:24:9"},"nodeType":"YulFunctionCall","src":"2429:31:9"},"nodeType":"YulExpressionStatement","src":"2429:31:9"},{"nodeType":"YulAssignment","src":"2469:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"2479:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2469:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"2493:47:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2525:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2536:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2521:3:9"},"nodeType":"YulFunctionCall","src":"2521:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2508:12:9"},"nodeType":"YulFunctionCall","src":"2508:32:9"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2497:7:9","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2574:7:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2549:24:9"},"nodeType":"YulFunctionCall","src":"2549:33:9"},"nodeType":"YulExpressionStatement","src":"2549:33:9"},{"nodeType":"YulAssignment","src":"2591:17:9","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2601:7:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2591:6:9"}]},{"nodeType":"YulAssignment","src":"2617:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2644:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2655:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2640:3:9"},"nodeType":"YulFunctionCall","src":"2640:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2627:12:9"},"nodeType":"YulFunctionCall","src":"2627:32:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2617:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2263:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2274:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2286:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2294:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2302:6:9","type":""}],"src":"2209:456:9"},{"body":{"nodeType":"YulBlock","src":"2767:87:9","statements":[{"nodeType":"YulAssignment","src":"2777:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2800:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2785:3:9"},"nodeType":"YulFunctionCall","src":"2785:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2777:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2819:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2834:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"2842:4:9","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2830:3:9"},"nodeType":"YulFunctionCall","src":"2830:17:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2812:6:9"},"nodeType":"YulFunctionCall","src":"2812:36:9"},"nodeType":"YulExpressionStatement","src":"2812:36:9"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2736:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2747:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2758:4:9","type":""}],"src":"2670:184:9"},{"body":{"nodeType":"YulBlock","src":"2891:95:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2908:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2915:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2920:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2911:3:9"},"nodeType":"YulFunctionCall","src":"2911:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2901:6:9"},"nodeType":"YulFunctionCall","src":"2901:31:9"},"nodeType":"YulExpressionStatement","src":"2901:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2948:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2951:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2941:6:9"},"nodeType":"YulFunctionCall","src":"2941:15:9"},"nodeType":"YulExpressionStatement","src":"2941:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2972:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2975:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2965:6:9"},"nodeType":"YulFunctionCall","src":"2965:15:9"},"nodeType":"YulExpressionStatement","src":"2965:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2859:127:9"},{"body":{"nodeType":"YulBlock","src":"3043:666:9","statements":[{"body":{"nodeType":"YulBlock","src":"3092:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3101:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3104:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3094:6:9"},"nodeType":"YulFunctionCall","src":"3094:12:9"},"nodeType":"YulExpressionStatement","src":"3094:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3071:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3079:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3067:3:9"},"nodeType":"YulFunctionCall","src":"3067:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"3086:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3063:3:9"},"nodeType":"YulFunctionCall","src":"3063:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3056:6:9"},"nodeType":"YulFunctionCall","src":"3056:35:9"},"nodeType":"YulIf","src":"3053:55:9"},{"nodeType":"YulVariableDeclaration","src":"3117:30:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3140:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3127:12:9"},"nodeType":"YulFunctionCall","src":"3127:20:9"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3121:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3156:28:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3166:18:9","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3160:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3207:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3209:16:9"},"nodeType":"YulFunctionCall","src":"3209:18:9"},"nodeType":"YulExpressionStatement","src":"3209:18:9"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3199:2:9"},{"name":"_2","nodeType":"YulIdentifier","src":"3203:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3196:2:9"},"nodeType":"YulFunctionCall","src":"3196:10:9"},"nodeType":"YulIf","src":"3193:36:9"},{"nodeType":"YulVariableDeclaration","src":"3238:17:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3248:3:9"},"nodeType":"YulFunctionCall","src":"3248:7:9"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3242:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3264:23:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3284:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3278:5:9"},"nodeType":"YulFunctionCall","src":"3278:9:9"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3268:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3296:71:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3318:6:9"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3342:2:9"},{"kind":"number","nodeType":"YulLiteral","src":"3346:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3338:3:9"},"nodeType":"YulFunctionCall","src":"3338:13:9"},{"name":"_3","nodeType":"YulIdentifier","src":"3353:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3334:3:9"},"nodeType":"YulFunctionCall","src":"3334:22:9"},{"kind":"number","nodeType":"YulLiteral","src":"3358:2:9","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3330:3:9"},"nodeType":"YulFunctionCall","src":"3330:31:9"},{"name":"_3","nodeType":"YulIdentifier","src":"3363:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3326:3:9"},"nodeType":"YulFunctionCall","src":"3326:40:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:9"},"nodeType":"YulFunctionCall","src":"3314:53:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3300:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3426:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3428:16:9"},"nodeType":"YulFunctionCall","src":"3428:18:9"},"nodeType":"YulExpressionStatement","src":"3428:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3385:10:9"},{"name":"_2","nodeType":"YulIdentifier","src":"3397:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3382:2:9"},"nodeType":"YulFunctionCall","src":"3382:18:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3405:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3417:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3402:2:9"},"nodeType":"YulFunctionCall","src":"3402:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3379:2:9"},"nodeType":"YulFunctionCall","src":"3379:46:9"},"nodeType":"YulIf","src":"3376:72:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3464:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3468:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3457:6:9"},"nodeType":"YulFunctionCall","src":"3457:22:9"},"nodeType":"YulExpressionStatement","src":"3457:22:9"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3495:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3503:2:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3488:6:9"},"nodeType":"YulFunctionCall","src":"3488:18:9"},"nodeType":"YulExpressionStatement","src":"3488:18:9"},{"body":{"nodeType":"YulBlock","src":"3554:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3563:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3566:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3556:6:9"},"nodeType":"YulFunctionCall","src":"3556:12:9"},"nodeType":"YulExpressionStatement","src":"3556:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3529:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3537:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3525:3:9"},"nodeType":"YulFunctionCall","src":"3525:15:9"},{"kind":"number","nodeType":"YulLiteral","src":"3542:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3521:3:9"},"nodeType":"YulFunctionCall","src":"3521:26:9"},{"name":"end","nodeType":"YulIdentifier","src":"3549:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3518:2:9"},"nodeType":"YulFunctionCall","src":"3518:35:9"},"nodeType":"YulIf","src":"3515:55:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3596:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3604:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:9"},"nodeType":"YulFunctionCall","src":"3592:17:9"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3615:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3611:3:9"},"nodeType":"YulFunctionCall","src":"3611:17:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3630:2:9"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3579:12:9"},"nodeType":"YulFunctionCall","src":"3579:54:9"},"nodeType":"YulExpressionStatement","src":"3579:54:9"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3657:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3665:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3653:3:9"},"nodeType":"YulFunctionCall","src":"3653:15:9"},{"kind":"number","nodeType":"YulLiteral","src":"3670:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3649:3:9"},"nodeType":"YulFunctionCall","src":"3649:26:9"},{"kind":"number","nodeType":"YulLiteral","src":"3677:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3642:6:9"},"nodeType":"YulFunctionCall","src":"3642:37:9"},"nodeType":"YulExpressionStatement","src":"3642:37:9"},{"nodeType":"YulAssignment","src":"3688:15:9","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3697:6:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3688:5:9"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3017:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"3025:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3033:5:9","type":""}],"src":"2991:718:9"},{"body":{"nodeType":"YulBlock","src":"3870:729:9","statements":[{"body":{"nodeType":"YulBlock","src":"3917:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3926:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3929:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3919:6:9"},"nodeType":"YulFunctionCall","src":"3919:12:9"},"nodeType":"YulExpressionStatement","src":"3919:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3891:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3900:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3887:3:9"},"nodeType":"YulFunctionCall","src":"3887:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3912:3:9","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3883:3:9"},"nodeType":"YulFunctionCall","src":"3883:33:9"},"nodeType":"YulIf","src":"3880:53:9"},{"nodeType":"YulVariableDeclaration","src":"3942:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3968:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3955:12:9"},"nodeType":"YulFunctionCall","src":"3955:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3946:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4012:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3987:24:9"},"nodeType":"YulFunctionCall","src":"3987:31:9"},"nodeType":"YulExpressionStatement","src":"3987:31:9"},{"nodeType":"YulAssignment","src":"4027:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"4037:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4027:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"4051:47:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4083:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:9"},"nodeType":"YulFunctionCall","src":"4079:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4066:12:9"},"nodeType":"YulFunctionCall","src":"4066:32:9"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4055:7:9","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4132:7:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4107:24:9"},"nodeType":"YulFunctionCall","src":"4107:33:9"},"nodeType":"YulExpressionStatement","src":"4107:33:9"},{"nodeType":"YulAssignment","src":"4149:17:9","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4159:7:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4149:6:9"}]},{"nodeType":"YulAssignment","src":"4175:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4202:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4213:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4198:3:9"},"nodeType":"YulFunctionCall","src":"4198:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4185:12:9"},"nodeType":"YulFunctionCall","src":"4185:32:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4175:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"4226:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4257:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4268:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4253:3:9"},"nodeType":"YulFunctionCall","src":"4253:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4240:12:9"},"nodeType":"YulFunctionCall","src":"4240:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4230:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4281:28:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4291:18:9","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4285:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"4336:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4345:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4348:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4338:6:9"},"nodeType":"YulFunctionCall","src":"4338:12:9"},"nodeType":"YulExpressionStatement","src":"4338:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4324:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"4332:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4321:2:9"},"nodeType":"YulFunctionCall","src":"4321:14:9"},"nodeType":"YulIf","src":"4318:34:9"},{"nodeType":"YulAssignment","src":"4361:59:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4392:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4403:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4388:3:9"},"nodeType":"YulFunctionCall","src":"4388:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4412:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4371:16:9"},"nodeType":"YulFunctionCall","src":"4371:49:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4361:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"4429:49:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4462:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4473:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4458:3:9"},"nodeType":"YulFunctionCall","src":"4458:19:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4445:12:9"},"nodeType":"YulFunctionCall","src":"4445:33:9"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4433:8:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"4507:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4516:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4519:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4509:6:9"},"nodeType":"YulFunctionCall","src":"4509:12:9"},"nodeType":"YulExpressionStatement","src":"4509:12:9"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4493:8:9"},{"name":"_1","nodeType":"YulIdentifier","src":"4503:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4490:2:9"},"nodeType":"YulFunctionCall","src":"4490:16:9"},"nodeType":"YulIf","src":"4487:36:9"},{"nodeType":"YulAssignment","src":"4532:61:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4563:9:9"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4574:8:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4559:3:9"},"nodeType":"YulFunctionCall","src":"4559:24:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4585:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4542:16:9"},"nodeType":"YulFunctionCall","src":"4542:51:9"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4532:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3804:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3815:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3827:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3835:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3843:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3851:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3859:6:9","type":""}],"src":"3714:885:9"},{"body":{"nodeType":"YulBlock","src":"4674:177:9","statements":[{"body":{"nodeType":"YulBlock","src":"4720:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4729:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4732:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4722:6:9"},"nodeType":"YulFunctionCall","src":"4722:12:9"},"nodeType":"YulExpressionStatement","src":"4722:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4695:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4691:3:9"},"nodeType":"YulFunctionCall","src":"4691:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4716:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4687:3:9"},"nodeType":"YulFunctionCall","src":"4687:32:9"},"nodeType":"YulIf","src":"4684:52:9"},{"nodeType":"YulVariableDeclaration","src":"4745:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4758:12:9"},"nodeType":"YulFunctionCall","src":"4758:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4749:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4815:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4790:24:9"},"nodeType":"YulFunctionCall","src":"4790:31:9"},"nodeType":"YulExpressionStatement","src":"4790:31:9"},{"nodeType":"YulAssignment","src":"4830:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"4840:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4830:6:9"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4640:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4651:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4663:6:9","type":""}],"src":"4604:247:9"},{"body":{"nodeType":"YulBlock","src":"4969:410:9","statements":[{"body":{"nodeType":"YulBlock","src":"5015:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5024:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5027:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5017:6:9"},"nodeType":"YulFunctionCall","src":"5017:12:9"},"nodeType":"YulExpressionStatement","src":"5017:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4990:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4999:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4986:3:9"},"nodeType":"YulFunctionCall","src":"4986:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5011:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4982:3:9"},"nodeType":"YulFunctionCall","src":"4982:32:9"},"nodeType":"YulIf","src":"4979:52:9"},{"nodeType":"YulVariableDeclaration","src":"5040:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5066:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5053:12:9"},"nodeType":"YulFunctionCall","src":"5053:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5044:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5110:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5085:24:9"},"nodeType":"YulFunctionCall","src":"5085:31:9"},"nodeType":"YulExpressionStatement","src":"5085:31:9"},{"nodeType":"YulAssignment","src":"5125:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"5135:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5125:6:9"}]},{"nodeType":"YulAssignment","src":"5149:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5176:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5187:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5172:3:9"},"nodeType":"YulFunctionCall","src":"5172:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5159:12:9"},"nodeType":"YulFunctionCall","src":"5159:32:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5149:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"5200:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5231:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5242:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5227:3:9"},"nodeType":"YulFunctionCall","src":"5227:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5214:12:9"},"nodeType":"YulFunctionCall","src":"5214:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5204:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"5289:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5298:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5301:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5291:6:9"},"nodeType":"YulFunctionCall","src":"5291:12:9"},"nodeType":"YulExpressionStatement","src":"5291:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5261:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"5269:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5258:2:9"},"nodeType":"YulFunctionCall","src":"5258:30:9"},"nodeType":"YulIf","src":"5255:50:9"},{"nodeType":"YulAssignment","src":"5314:59:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5345:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5356:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5341:3:9"},"nodeType":"YulFunctionCall","src":"5341:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5365:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5324:16:9"},"nodeType":"YulFunctionCall","src":"5324:49:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5314:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4919:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4930:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4942:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4950:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4958:6:9","type":""}],"src":"4856:523:9"},{"body":{"nodeType":"YulBlock","src":"5471:301:9","statements":[{"body":{"nodeType":"YulBlock","src":"5517:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5526:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5529:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5519:6:9"},"nodeType":"YulFunctionCall","src":"5519:12:9"},"nodeType":"YulExpressionStatement","src":"5519:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5492:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5501:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5488:3:9"},"nodeType":"YulFunctionCall","src":"5488:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5513:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5484:3:9"},"nodeType":"YulFunctionCall","src":"5484:32:9"},"nodeType":"YulIf","src":"5481:52:9"},{"nodeType":"YulVariableDeclaration","src":"5542:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5568:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5555:12:9"},"nodeType":"YulFunctionCall","src":"5555:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5546:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5612:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5587:24:9"},"nodeType":"YulFunctionCall","src":"5587:31:9"},"nodeType":"YulExpressionStatement","src":"5587:31:9"},{"nodeType":"YulAssignment","src":"5627:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"5637:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5627:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"5651:47:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5683:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5694:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5679:3:9"},"nodeType":"YulFunctionCall","src":"5679:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5666:12:9"},"nodeType":"YulFunctionCall","src":"5666:32:9"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"5655:7:9","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"5732:7:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5707:24:9"},"nodeType":"YulFunctionCall","src":"5707:33:9"},"nodeType":"YulExpressionStatement","src":"5707:33:9"},{"nodeType":"YulAssignment","src":"5749:17:9","value":{"name":"value_1","nodeType":"YulIdentifier","src":"5759:7:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5749:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5429:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5440:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5452:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5460:6:9","type":""}],"src":"5384:388:9"},{"body":{"nodeType":"YulBlock","src":"5916:604:9","statements":[{"body":{"nodeType":"YulBlock","src":"5963:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5972:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5975:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5965:6:9"},"nodeType":"YulFunctionCall","src":"5965:12:9"},"nodeType":"YulExpressionStatement","src":"5965:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5937:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5946:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5933:3:9"},"nodeType":"YulFunctionCall","src":"5933:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5958:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5929:3:9"},"nodeType":"YulFunctionCall","src":"5929:33:9"},"nodeType":"YulIf","src":"5926:53:9"},{"nodeType":"YulVariableDeclaration","src":"5988:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6014:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6001:12:9"},"nodeType":"YulFunctionCall","src":"6001:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5992:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6058:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6033:24:9"},"nodeType":"YulFunctionCall","src":"6033:31:9"},"nodeType":"YulExpressionStatement","src":"6033:31:9"},{"nodeType":"YulAssignment","src":"6073:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"6083:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6073:6:9"}]},{"nodeType":"YulAssignment","src":"6097:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6124:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6135:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6120:3:9"},"nodeType":"YulFunctionCall","src":"6120:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6107:12:9"},"nodeType":"YulFunctionCall","src":"6107:32:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6097:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"6148:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6179:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6190:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6175:3:9"},"nodeType":"YulFunctionCall","src":"6175:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6162:12:9"},"nodeType":"YulFunctionCall","src":"6162:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6152:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6203:28:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6213:18:9","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6207:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6258:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6267:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6270:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6260:6:9"},"nodeType":"YulFunctionCall","src":"6260:12:9"},"nodeType":"YulExpressionStatement","src":"6260:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6246:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"6254:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6243:2:9"},"nodeType":"YulFunctionCall","src":"6243:14:9"},"nodeType":"YulIf","src":"6240:34:9"},{"nodeType":"YulAssignment","src":"6283:59:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6314:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6325:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6310:3:9"},"nodeType":"YulFunctionCall","src":"6310:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6334:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6293:16:9"},"nodeType":"YulFunctionCall","src":"6293:49:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6283:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"6351:48:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6384:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6395:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6380:3:9"},"nodeType":"YulFunctionCall","src":"6380:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6367:12:9"},"nodeType":"YulFunctionCall","src":"6367:32:9"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6355:8:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6428:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6437:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6440:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6430:6:9"},"nodeType":"YulFunctionCall","src":"6430:12:9"},"nodeType":"YulExpressionStatement","src":"6430:12:9"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6414:8:9"},{"name":"_1","nodeType":"YulIdentifier","src":"6424:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6411:2:9"},"nodeType":"YulFunctionCall","src":"6411:16:9"},"nodeType":"YulIf","src":"6408:36:9"},{"nodeType":"YulAssignment","src":"6453:61:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6484:9:9"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6495:8:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6480:3:9"},"nodeType":"YulFunctionCall","src":"6480:24:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6506:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6463:16:9"},"nodeType":"YulFunctionCall","src":"6463:51:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6453:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5858:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5869:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5881:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5889:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5897:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5905:6:9","type":""}],"src":"5777:743:9"},{"body":{"nodeType":"YulBlock","src":"6621:292:9","statements":[{"body":{"nodeType":"YulBlock","src":"6667:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6676:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6679:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6669:6:9"},"nodeType":"YulFunctionCall","src":"6669:12:9"},"nodeType":"YulExpressionStatement","src":"6669:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6642:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"6651:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6638:3:9"},"nodeType":"YulFunctionCall","src":"6638:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"6663:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6634:3:9"},"nodeType":"YulFunctionCall","src":"6634:32:9"},"nodeType":"YulIf","src":"6631:52:9"},{"nodeType":"YulAssignment","src":"6692:33:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6715:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6702:12:9"},"nodeType":"YulFunctionCall","src":"6702:23:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6692:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"6734:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6765:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6776:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6761:3:9"},"nodeType":"YulFunctionCall","src":"6761:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6748:12:9"},"nodeType":"YulFunctionCall","src":"6748:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6738:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6823:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6832:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6835:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6825:6:9"},"nodeType":"YulFunctionCall","src":"6825:12:9"},"nodeType":"YulExpressionStatement","src":"6825:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6795:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"6803:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6792:2:9"},"nodeType":"YulFunctionCall","src":"6792:30:9"},"nodeType":"YulIf","src":"6789:50:9"},{"nodeType":"YulAssignment","src":"6848:59:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6879:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6890:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6875:3:9"},"nodeType":"YulFunctionCall","src":"6875:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6899:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6858:16:9"},"nodeType":"YulFunctionCall","src":"6858:49:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6848:6:9"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6579:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6590:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6602:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6610:6:9","type":""}],"src":"6525:388:9"},{"body":{"nodeType":"YulBlock","src":"6973:325:9","statements":[{"nodeType":"YulAssignment","src":"6983:22:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6997:1:9","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7000:4:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6993:3:9"},"nodeType":"YulFunctionCall","src":"6993:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6983:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"7014:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7044:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"7050:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7040:3:9"},"nodeType":"YulFunctionCall","src":"7040:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7018:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"7091:31:9","statements":[{"nodeType":"YulAssignment","src":"7093:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7107:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7115:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7103:3:9"},"nodeType":"YulFunctionCall","src":"7103:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7093:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7071:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7064:6:9"},"nodeType":"YulFunctionCall","src":"7064:26:9"},"nodeType":"YulIf","src":"7061:61:9"},{"body":{"nodeType":"YulBlock","src":"7181:111:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7202:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7209:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7214:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7205:3:9"},"nodeType":"YulFunctionCall","src":"7205:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7195:6:9"},"nodeType":"YulFunctionCall","src":"7195:31:9"},"nodeType":"YulExpressionStatement","src":"7195:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7246:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7249:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7239:6:9"},"nodeType":"YulFunctionCall","src":"7239:15:9"},"nodeType":"YulExpressionStatement","src":"7239:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7274:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7277:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7267:6:9"},"nodeType":"YulFunctionCall","src":"7267:15:9"},"nodeType":"YulExpressionStatement","src":"7267:15:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7137:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7160:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7168:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7157:2:9"},"nodeType":"YulFunctionCall","src":"7157:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7134:2:9"},"nodeType":"YulFunctionCall","src":"7134:38:9"},"nodeType":"YulIf","src":"7131:161:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6953:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6962:6:9","type":""}],"src":"6918:380:9"},{"body":{"nodeType":"YulBlock","src":"7477:226:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7494:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7505:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7487:6:9"},"nodeType":"YulFunctionCall","src":"7487:21:9"},"nodeType":"YulExpressionStatement","src":"7487:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7528:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7539:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7524:3:9"},"nodeType":"YulFunctionCall","src":"7524:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"7544:2:9","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7517:6:9"},"nodeType":"YulFunctionCall","src":"7517:30:9"},"nodeType":"YulExpressionStatement","src":"7517:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7567:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7578:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7563:3:9"},"nodeType":"YulFunctionCall","src":"7563:18:9"},{"hexValue":"4552433737373a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7583:34:9","type":"","value":"ERC777: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7556:6:9"},"nodeType":"YulFunctionCall","src":"7556:62:9"},"nodeType":"YulExpressionStatement","src":"7556:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7638:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7649:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7634:3:9"},"nodeType":"YulFunctionCall","src":"7634:18:9"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7654:6:9","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7627:6:9"},"nodeType":"YulFunctionCall","src":"7627:34:9"},"nodeType":"YulExpressionStatement","src":"7627:34:9"},{"nodeType":"YulAssignment","src":"7670:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7682:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7693:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7678:3:9"},"nodeType":"YulFunctionCall","src":"7678:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7670:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7454:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7468:4:9","type":""}],"src":"7303:400:9"},{"body":{"nodeType":"YulBlock","src":"7882:228:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7899:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7910:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7892:6:9"},"nodeType":"YulFunctionCall","src":"7892:21:9"},"nodeType":"YulExpressionStatement","src":"7892:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7933:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7944:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7929:3:9"},"nodeType":"YulFunctionCall","src":"7929:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"7949:2:9","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7922:6:9"},"nodeType":"YulFunctionCall","src":"7922:30:9"},"nodeType":"YulExpressionStatement","src":"7922:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7972:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7983:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7968:3:9"},"nodeType":"YulFunctionCall","src":"7968:18:9"},{"hexValue":"4552433737373a207472616e736665722066726f6d20746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"7988:34:9","type":"","value":"ERC777: transfer from the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7961:6:9"},"nodeType":"YulFunctionCall","src":"7961:62:9"},"nodeType":"YulExpressionStatement","src":"7961:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8043:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8054:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8039:3:9"},"nodeType":"YulFunctionCall","src":"8039:18:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8059:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8032:6:9"},"nodeType":"YulFunctionCall","src":"8032:36:9"},"nodeType":"YulExpressionStatement","src":"8032:36:9"},{"nodeType":"YulAssignment","src":"8077:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8089:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8100:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8085:3:9"},"nodeType":"YulFunctionCall","src":"8085:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8077:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7859:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7873:4:9","type":""}],"src":"7708:402:9"},{"body":{"nodeType":"YulBlock","src":"8289:231:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8306:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8317:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8299:6:9"},"nodeType":"YulFunctionCall","src":"8299:21:9"},"nodeType":"YulExpressionStatement","src":"8299:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8340:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8351:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8336:3:9"},"nodeType":"YulFunctionCall","src":"8336:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"8356:2:9","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8329:6:9"},"nodeType":"YulFunctionCall","src":"8329:30:9"},"nodeType":"YulExpressionStatement","src":"8329:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8379:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8390:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8375:3:9"},"nodeType":"YulFunctionCall","src":"8375:18:9"},{"hexValue":"4552433737373a207472616e7366657220616d6f756e74206578636565647320","kind":"string","nodeType":"YulLiteral","src":"8395:34:9","type":"","value":"ERC777: transfer amount exceeds "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8368:6:9"},"nodeType":"YulFunctionCall","src":"8368:62:9"},"nodeType":"YulExpressionStatement","src":"8368:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8450:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8461:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8446:3:9"},"nodeType":"YulFunctionCall","src":"8446:18:9"},{"hexValue":"616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"8466:11:9","type":"","value":"allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8439:6:9"},"nodeType":"YulFunctionCall","src":"8439:39:9"},"nodeType":"YulExpressionStatement","src":"8439:39:9"},{"nodeType":"YulAssignment","src":"8487:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8499:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8510:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8495:3:9"},"nodeType":"YulFunctionCall","src":"8495:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8487:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8266:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8280:4:9","type":""}],"src":"8115:405:9"},{"body":{"nodeType":"YulBlock","src":"8557:95:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8574:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8581:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8586:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8577:3:9"},"nodeType":"YulFunctionCall","src":"8577:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8567:6:9"},"nodeType":"YulFunctionCall","src":"8567:31:9"},"nodeType":"YulExpressionStatement","src":"8567:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8614:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8617:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8607:6:9"},"nodeType":"YulFunctionCall","src":"8607:15:9"},"nodeType":"YulExpressionStatement","src":"8607:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8638:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8641:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8631:6:9"},"nodeType":"YulFunctionCall","src":"8631:15:9"},"nodeType":"YulExpressionStatement","src":"8631:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8525:127:9"},{"body":{"nodeType":"YulBlock","src":"8706:76:9","statements":[{"body":{"nodeType":"YulBlock","src":"8728:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8730:16:9"},"nodeType":"YulFunctionCall","src":"8730:18:9"},"nodeType":"YulExpressionStatement","src":"8730:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8722:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"8725:1:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8719:2:9"},"nodeType":"YulFunctionCall","src":"8719:8:9"},"nodeType":"YulIf","src":"8716:34:9"},{"nodeType":"YulAssignment","src":"8759:17:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8771:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"8774:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8767:3:9"},"nodeType":"YulFunctionCall","src":"8767:9:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8759:4:9"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8688:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"8691:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8697:4:9","type":""}],"src":"8657:125:9"},{"body":{"nodeType":"YulBlock","src":"8961:234:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8978:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8989:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8971:6:9"},"nodeType":"YulFunctionCall","src":"8971:21:9"},"nodeType":"YulExpressionStatement","src":"8971:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9012:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9023:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9008:3:9"},"nodeType":"YulFunctionCall","src":"9008:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"9028:2:9","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9001:6:9"},"nodeType":"YulFunctionCall","src":"9001:30:9"},"nodeType":"YulExpressionStatement","src":"9001:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9051:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9062:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9047:3:9"},"nodeType":"YulFunctionCall","src":"9047:18:9"},{"hexValue":"4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f","kind":"string","nodeType":"YulLiteral","src":"9067:34:9","type":"","value":"ERC777: caller is not an operato"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9040:6:9"},"nodeType":"YulFunctionCall","src":"9040:62:9"},"nodeType":"YulExpressionStatement","src":"9040:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9122:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9133:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9118:3:9"},"nodeType":"YulFunctionCall","src":"9118:18:9"},{"hexValue":"7220666f7220686f6c646572","kind":"string","nodeType":"YulLiteral","src":"9138:14:9","type":"","value":"r for holder"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9111:6:9"},"nodeType":"YulFunctionCall","src":"9111:42:9"},"nodeType":"YulExpressionStatement","src":"9111:42:9"},{"nodeType":"YulAssignment","src":"9162:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9174:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9185:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9170:3:9"},"nodeType":"YulFunctionCall","src":"9170:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9162:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8938:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8952:4:9","type":""}],"src":"8787:408:9"},{"body":{"nodeType":"YulBlock","src":"9374:226:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9391:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9402:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9384:6:9"},"nodeType":"YulFunctionCall","src":"9384:21:9"},"nodeType":"YulExpressionStatement","src":"9384:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9425:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9436:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9421:3:9"},"nodeType":"YulFunctionCall","src":"9421:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"9441:2:9","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9414:6:9"},"nodeType":"YulFunctionCall","src":"9414:30:9"},"nodeType":"YulExpressionStatement","src":"9414:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9464:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9475:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9460:3:9"},"nodeType":"YulFunctionCall","src":"9460:18:9"},{"hexValue":"4552433737373a20617574686f72697a696e672073656c66206173206f706572","kind":"string","nodeType":"YulLiteral","src":"9480:34:9","type":"","value":"ERC777: authorizing self as oper"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9453:6:9"},"nodeType":"YulFunctionCall","src":"9453:62:9"},"nodeType":"YulExpressionStatement","src":"9453:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9535:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9546:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9531:3:9"},"nodeType":"YulFunctionCall","src":"9531:18:9"},{"hexValue":"61746f72","kind":"string","nodeType":"YulLiteral","src":"9551:6:9","type":"","value":"ator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9524:6:9"},"nodeType":"YulFunctionCall","src":"9524:34:9"},"nodeType":"YulExpressionStatement","src":"9524:34:9"},{"nodeType":"YulAssignment","src":"9567:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9579:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9590:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9575:3:9"},"nodeType":"YulFunctionCall","src":"9575:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9567:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9351:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9365:4:9","type":""}],"src":"9200:400:9"},{"body":{"nodeType":"YulBlock","src":"9779:223:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9796:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9807:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9789:6:9"},"nodeType":"YulFunctionCall","src":"9789:21:9"},"nodeType":"YulExpressionStatement","src":"9789:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9830:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9841:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9826:3:9"},"nodeType":"YulFunctionCall","src":"9826:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"9846:2:9","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9819:6:9"},"nodeType":"YulFunctionCall","src":"9819:30:9"},"nodeType":"YulExpressionStatement","src":"9819:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9869:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9880:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9865:3:9"},"nodeType":"YulFunctionCall","src":"9865:18:9"},{"hexValue":"4552433737373a207265766f6b696e672073656c66206173206f70657261746f","kind":"string","nodeType":"YulLiteral","src":"9885:34:9","type":"","value":"ERC777: revoking self as operato"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9858:6:9"},"nodeType":"YulFunctionCall","src":"9858:62:9"},"nodeType":"YulExpressionStatement","src":"9858:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9951:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:9"},"nodeType":"YulFunctionCall","src":"9936:18:9"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"9956:3:9","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9929:6:9"},"nodeType":"YulFunctionCall","src":"9929:31:9"},"nodeType":"YulExpressionStatement","src":"9929:31:9"},{"nodeType":"YulAssignment","src":"9969:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9981:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9992:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9977:3:9"},"nodeType":"YulFunctionCall","src":"9977:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9969:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9756:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9770:4:9","type":""}],"src":"9605:397:9"},{"body":{"nodeType":"YulBlock","src":"10181:227:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10198:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10209:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10191:6:9"},"nodeType":"YulFunctionCall","src":"10191:21:9"},"nodeType":"YulExpressionStatement","src":"10191:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10232:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10243:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10228:3:9"},"nodeType":"YulFunctionCall","src":"10228:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"10248:2:9","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10221:6:9"},"nodeType":"YulFunctionCall","src":"10221:30:9"},"nodeType":"YulExpressionStatement","src":"10221:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10271:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10282:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10267:3:9"},"nodeType":"YulFunctionCall","src":"10267:18:9"},{"hexValue":"4552433737373a20617070726f76652066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10287:34:9","type":"","value":"ERC777: approve from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10260:6:9"},"nodeType":"YulFunctionCall","src":"10260:62:9"},"nodeType":"YulExpressionStatement","src":"10260:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10342:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10353:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10338:3:9"},"nodeType":"YulFunctionCall","src":"10338:18:9"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10358:7:9","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10331:6:9"},"nodeType":"YulFunctionCall","src":"10331:35:9"},"nodeType":"YulExpressionStatement","src":"10331:35:9"},{"nodeType":"YulAssignment","src":"10375:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10387:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10398:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10383:3:9"},"nodeType":"YulFunctionCall","src":"10383:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10375:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10158:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10172:4:9","type":""}],"src":"10007:401:9"},{"body":{"nodeType":"YulBlock","src":"10587:225:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10604:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10615:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10597:6:9"},"nodeType":"YulFunctionCall","src":"10597:21:9"},"nodeType":"YulExpressionStatement","src":"10597:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10638:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10649:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10634:3:9"},"nodeType":"YulFunctionCall","src":"10634:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"10654:2:9","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10627:6:9"},"nodeType":"YulFunctionCall","src":"10627:30:9"},"nodeType":"YulExpressionStatement","src":"10627:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10677:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10688:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10673:3:9"},"nodeType":"YulFunctionCall","src":"10673:18:9"},{"hexValue":"4552433737373a20617070726f766520746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"10693:34:9","type":"","value":"ERC777: approve to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10666:6:9"},"nodeType":"YulFunctionCall","src":"10666:62:9"},"nodeType":"YulExpressionStatement","src":"10666:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10748:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10759:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10744:3:9"},"nodeType":"YulFunctionCall","src":"10744:18:9"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"10764:5:9","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10737:6:9"},"nodeType":"YulFunctionCall","src":"10737:33:9"},"nodeType":"YulExpressionStatement","src":"10737:33:9"},{"nodeType":"YulAssignment","src":"10779:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10791:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10802:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10787:3:9"},"nodeType":"YulFunctionCall","src":"10787:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10779:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10564:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10578:4:9","type":""}],"src":"10413:399:9"},{"body":{"nodeType":"YulBlock","src":"10946:145:9","statements":[{"nodeType":"YulAssignment","src":"10956:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10968:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10979:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10964:3:9"},"nodeType":"YulFunctionCall","src":"10964:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10956:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10998:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11013:6:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11029:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11034:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11025:3:9"},"nodeType":"YulFunctionCall","src":"11025:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"11038:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11021:3:9"},"nodeType":"YulFunctionCall","src":"11021:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11009:3:9"},"nodeType":"YulFunctionCall","src":"11009:32:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10991:6:9"},"nodeType":"YulFunctionCall","src":"10991:51:9"},"nodeType":"YulExpressionStatement","src":"10991:51:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11062:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11073:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11058:3:9"},"nodeType":"YulFunctionCall","src":"11058:18:9"},{"name":"value1","nodeType":"YulIdentifier","src":"11078:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11051:6:9"},"nodeType":"YulFunctionCall","src":"11051:34:9"},"nodeType":"YulExpressionStatement","src":"11051:34:9"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10907:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10918:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10926:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10937:4:9","type":""}],"src":"10817:274:9"},{"body":{"nodeType":"YulBlock","src":"11177:170:9","statements":[{"body":{"nodeType":"YulBlock","src":"11223:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11232:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11235:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11225:6:9"},"nodeType":"YulFunctionCall","src":"11225:12:9"},"nodeType":"YulExpressionStatement","src":"11225:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11198:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11207:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11194:3:9"},"nodeType":"YulFunctionCall","src":"11194:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"11219:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11190:3:9"},"nodeType":"YulFunctionCall","src":"11190:32:9"},"nodeType":"YulIf","src":"11187:52:9"},{"nodeType":"YulVariableDeclaration","src":"11248:29:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11267:9:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11261:5:9"},"nodeType":"YulFunctionCall","src":"11261:16:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11252:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11311:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11286:24:9"},"nodeType":"YulFunctionCall","src":"11286:31:9"},"nodeType":"YulExpressionStatement","src":"11286:31:9"},{"nodeType":"YulAssignment","src":"11326:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"11336:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11326:6:9"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11143:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11154:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11166:6:9","type":""}],"src":"11096:251:9"},{"body":{"nodeType":"YulBlock","src":"11629:455:9","statements":[{"nodeType":"YulVariableDeclaration","src":"11639:29:9","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11657:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11662:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11653:3:9"},"nodeType":"YulFunctionCall","src":"11653:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"11666:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11649:3:9"},"nodeType":"YulFunctionCall","src":"11649:19:9"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11643:2:9","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11684:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11699:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"11707:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11695:3:9"},"nodeType":"YulFunctionCall","src":"11695:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11677:6:9"},"nodeType":"YulFunctionCall","src":"11677:34:9"},"nodeType":"YulExpressionStatement","src":"11677:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11731:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11742:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11727:3:9"},"nodeType":"YulFunctionCall","src":"11727:18:9"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11751:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"11759:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11747:3:9"},"nodeType":"YulFunctionCall","src":"11747:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11720:6:9"},"nodeType":"YulFunctionCall","src":"11720:43:9"},"nodeType":"YulExpressionStatement","src":"11720:43:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11783:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11794:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11779:3:9"},"nodeType":"YulFunctionCall","src":"11779:18:9"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11803:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"11811:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11799:3:9"},"nodeType":"YulFunctionCall","src":"11799:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11772:6:9"},"nodeType":"YulFunctionCall","src":"11772:43:9"},"nodeType":"YulExpressionStatement","src":"11772:43:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11835:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11846:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11831:3:9"},"nodeType":"YulFunctionCall","src":"11831:18:9"},{"name":"value3","nodeType":"YulIdentifier","src":"11851:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11824:6:9"},"nodeType":"YulFunctionCall","src":"11824:34:9"},"nodeType":"YulExpressionStatement","src":"11824:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11878:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11889:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11874:3:9"},"nodeType":"YulFunctionCall","src":"11874:19:9"},{"kind":"number","nodeType":"YulLiteral","src":"11895:3:9","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11867:6:9"},"nodeType":"YulFunctionCall","src":"11867:32:9"},"nodeType":"YulExpressionStatement","src":"11867:32:9"},{"nodeType":"YulVariableDeclaration","src":"11908:60:9","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11940:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11952:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11963:3:9","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11948:3:9"},"nodeType":"YulFunctionCall","src":"11948:19:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"11922:17:9"},"nodeType":"YulFunctionCall","src":"11922:46:9"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"11912:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11988:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11999:3:9","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11984:3:9"},"nodeType":"YulFunctionCall","src":"11984:19:9"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"12009:6:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"12017:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12005:3:9"},"nodeType":"YulFunctionCall","src":"12005:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11977:6:9"},"nodeType":"YulFunctionCall","src":"11977:51:9"},"nodeType":"YulExpressionStatement","src":"11977:51:9"},{"nodeType":"YulAssignment","src":"12037:41:9","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"12063:6:9"},{"name":"tail_1","nodeType":"YulIdentifier","src":"12071:6:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12045:17:9"},"nodeType":"YulFunctionCall","src":"12045:33:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12037:4:9"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11558:9:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11569:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11577:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11585:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11593:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11601:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11609:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11620:4:9","type":""}],"src":"11352:732:9"},{"body":{"nodeType":"YulBlock","src":"12263:229:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12280:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12291:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12273:6:9"},"nodeType":"YulFunctionCall","src":"12273:21:9"},"nodeType":"YulExpressionStatement","src":"12273:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12314:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12325:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12310:3:9"},"nodeType":"YulFunctionCall","src":"12310:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"12330:2:9","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12303:6:9"},"nodeType":"YulFunctionCall","src":"12303:30:9"},"nodeType":"YulExpressionStatement","src":"12303:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12353:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12364:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12349:3:9"},"nodeType":"YulFunctionCall","src":"12349:18:9"},{"hexValue":"4552433737373a207472616e7366657220616d6f756e74206578636565647320","kind":"string","nodeType":"YulLiteral","src":"12369:34:9","type":"","value":"ERC777: transfer amount exceeds "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12342:6:9"},"nodeType":"YulFunctionCall","src":"12342:62:9"},"nodeType":"YulExpressionStatement","src":"12342:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12424:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12435:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12420:3:9"},"nodeType":"YulFunctionCall","src":"12420:18:9"},{"hexValue":"62616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12440:9:9","type":"","value":"balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12413:6:9"},"nodeType":"YulFunctionCall","src":"12413:37:9"},"nodeType":"YulExpressionStatement","src":"12413:37:9"},{"nodeType":"YulAssignment","src":"12459:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12471:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12482:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12467:3:9"},"nodeType":"YulFunctionCall","src":"12467:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12459:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12240:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12254:4:9","type":""}],"src":"12089:403:9"},{"body":{"nodeType":"YulBlock","src":"12545:80:9","statements":[{"body":{"nodeType":"YulBlock","src":"12572:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12574:16:9"},"nodeType":"YulFunctionCall","src":"12574:18:9"},"nodeType":"YulExpressionStatement","src":"12574:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12561:1:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12568:1:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12564:3:9"},"nodeType":"YulFunctionCall","src":"12564:6:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12558:2:9"},"nodeType":"YulFunctionCall","src":"12558:13:9"},"nodeType":"YulIf","src":"12555:39:9"},{"nodeType":"YulAssignment","src":"12603:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12614:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"12617:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12610:3:9"},"nodeType":"YulFunctionCall","src":"12610:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12603:3:9"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12528:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"12531:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12537:3:9","type":""}],"src":"12497:128:9"},{"body":{"nodeType":"YulBlock","src":"12823:257:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12840:9:9"},{"name":"value0","nodeType":"YulIdentifier","src":"12851:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12833:6:9"},"nodeType":"YulFunctionCall","src":"12833:25:9"},"nodeType":"YulExpressionStatement","src":"12833:25:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12878:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12889:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12874:3:9"},"nodeType":"YulFunctionCall","src":"12874:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"12894:2:9","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12867:6:9"},"nodeType":"YulFunctionCall","src":"12867:30:9"},"nodeType":"YulExpressionStatement","src":"12867:30:9"},{"nodeType":"YulVariableDeclaration","src":"12906:59:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12938:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12950:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12961:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12946:3:9"},"nodeType":"YulFunctionCall","src":"12946:18:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12920:17:9"},"nodeType":"YulFunctionCall","src":"12920:45:9"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"12910:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12985:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12996:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12981:3:9"},"nodeType":"YulFunctionCall","src":"12981:18:9"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13005:6:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"13013:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13001:3:9"},"nodeType":"YulFunctionCall","src":"13001:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12974:6:9"},"nodeType":"YulFunctionCall","src":"12974:50:9"},"nodeType":"YulExpressionStatement","src":"12974:50:9"},{"nodeType":"YulAssignment","src":"13033:41:9","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13059:6:9"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13067:6:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13041:17:9"},"nodeType":"YulFunctionCall","src":"13041:33:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13033:4:9"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12776:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12787:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12795:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12803:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12814:4:9","type":""}],"src":"12630:450:9"},{"body":{"nodeType":"YulBlock","src":"13259:307:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13276:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13287:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13269:6:9"},"nodeType":"YulFunctionCall","src":"13269:21:9"},"nodeType":"YulExpressionStatement","src":"13269:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13310:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13321:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13306:3:9"},"nodeType":"YulFunctionCall","src":"13306:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"13326:2:9","type":"","value":"77"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13299:6:9"},"nodeType":"YulFunctionCall","src":"13299:30:9"},"nodeType":"YulExpressionStatement","src":"13299:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13349:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13360:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13345:3:9"},"nodeType":"YulFunctionCall","src":"13345:18:9"},{"hexValue":"4552433737373a20746f6b656e20726563697069656e7420636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"13365:34:9","type":"","value":"ERC777: token recipient contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13338:6:9"},"nodeType":"YulFunctionCall","src":"13338:62:9"},"nodeType":"YulExpressionStatement","src":"13338:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13420:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13431:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13416:3:9"},"nodeType":"YulFunctionCall","src":"13416:18:9"},{"hexValue":"20686173206e6f20696d706c656d656e74657220666f7220455243373737546f","kind":"string","nodeType":"YulLiteral","src":"13436:34:9","type":"","value":" has no implementer for ERC777To"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13409:6:9"},"nodeType":"YulFunctionCall","src":"13409:62:9"},"nodeType":"YulExpressionStatement","src":"13409:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13491:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13502:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13487:3:9"},"nodeType":"YulFunctionCall","src":"13487:19:9"},{"hexValue":"6b656e73526563697069656e74","kind":"string","nodeType":"YulLiteral","src":"13508:15:9","type":"","value":"kensRecipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13480:6:9"},"nodeType":"YulFunctionCall","src":"13480:44:9"},"nodeType":"YulExpressionStatement","src":"13480:44:9"},{"nodeType":"YulAssignment","src":"13533:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13545:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13556:3:9","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13541:3:9"},"nodeType":"YulFunctionCall","src":"13541:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13533:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13236:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13250:4:9","type":""}],"src":"13085:481:9"},{"body":{"nodeType":"YulBlock","src":"13745:224:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13762:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13773:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13755:6:9"},"nodeType":"YulFunctionCall","src":"13755:21:9"},"nodeType":"YulExpressionStatement","src":"13755:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13796:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13807:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13792:3:9"},"nodeType":"YulFunctionCall","src":"13792:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"13812:2:9","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13785:6:9"},"nodeType":"YulFunctionCall","src":"13785:30:9"},"nodeType":"YulExpressionStatement","src":"13785:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13835:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13846:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13831:3:9"},"nodeType":"YulFunctionCall","src":"13831:18:9"},{"hexValue":"4552433737373a2073656e642066726f6d20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"13851:34:9","type":"","value":"ERC777: send from the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13824:6:9"},"nodeType":"YulFunctionCall","src":"13824:62:9"},"nodeType":"YulExpressionStatement","src":"13824:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13906:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13917:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13902:3:9"},"nodeType":"YulFunctionCall","src":"13902:18:9"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"13922:4:9","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13895:6:9"},"nodeType":"YulFunctionCall","src":"13895:32:9"},"nodeType":"YulExpressionStatement","src":"13895:32:9"},{"nodeType":"YulAssignment","src":"13936:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13948:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13959:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13944:3:9"},"nodeType":"YulFunctionCall","src":"13944:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13936:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13722:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13736:4:9","type":""}],"src":"13571:398:9"},{"body":{"nodeType":"YulBlock","src":"14148:182:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14165:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14176:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14158:6:9"},"nodeType":"YulFunctionCall","src":"14158:21:9"},"nodeType":"YulExpressionStatement","src":"14158:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14199:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14210:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14195:3:9"},"nodeType":"YulFunctionCall","src":"14195:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"14215:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14188:6:9"},"nodeType":"YulFunctionCall","src":"14188:30:9"},"nodeType":"YulExpressionStatement","src":"14188:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14238:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14249:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14234:3:9"},"nodeType":"YulFunctionCall","src":"14234:18:9"},{"hexValue":"4552433737373a2073656e6420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"14254:34:9","type":"","value":"ERC777: send to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14227:6:9"},"nodeType":"YulFunctionCall","src":"14227:62:9"},"nodeType":"YulExpressionStatement","src":"14227:62:9"},{"nodeType":"YulAssignment","src":"14298:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14310:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14321:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14306:3:9"},"nodeType":"YulFunctionCall","src":"14306:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14298:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14125:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14139:4:9","type":""}],"src":"13974:356:9"},{"body":{"nodeType":"YulBlock","src":"14509:224:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14526:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14537:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14519:6:9"},"nodeType":"YulFunctionCall","src":"14519:21:9"},"nodeType":"YulExpressionStatement","src":"14519:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14560:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14571:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14556:3:9"},"nodeType":"YulFunctionCall","src":"14556:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"14576:2:9","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14549:6:9"},"nodeType":"YulFunctionCall","src":"14549:30:9"},"nodeType":"YulExpressionStatement","src":"14549:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14599:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14610:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14595:3:9"},"nodeType":"YulFunctionCall","src":"14595:18:9"},{"hexValue":"4552433737373a206275726e2066726f6d20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"14615:34:9","type":"","value":"ERC777: burn from the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14588:6:9"},"nodeType":"YulFunctionCall","src":"14588:62:9"},"nodeType":"YulExpressionStatement","src":"14588:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14670:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14681:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14666:3:9"},"nodeType":"YulFunctionCall","src":"14666:18:9"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"14686:4:9","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14659:6:9"},"nodeType":"YulFunctionCall","src":"14659:32:9"},"nodeType":"YulExpressionStatement","src":"14659:32:9"},{"nodeType":"YulAssignment","src":"14700:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14712:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14723:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14708:3:9"},"nodeType":"YulFunctionCall","src":"14708:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14700:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14486:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14500:4:9","type":""}],"src":"14335:398:9"},{"body":{"nodeType":"YulBlock","src":"14912:225:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14929:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14940:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14922:6:9"},"nodeType":"YulFunctionCall","src":"14922:21:9"},"nodeType":"YulExpressionStatement","src":"14922:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14963:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14974:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14959:3:9"},"nodeType":"YulFunctionCall","src":"14959:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"14979:2:9","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14952:6:9"},"nodeType":"YulFunctionCall","src":"14952:30:9"},"nodeType":"YulExpressionStatement","src":"14952:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15002:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15013:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14998:3:9"},"nodeType":"YulFunctionCall","src":"14998:18:9"},{"hexValue":"4552433737373a206275726e20616d6f756e7420657863656564732062616c61","kind":"string","nodeType":"YulLiteral","src":"15018:34:9","type":"","value":"ERC777: burn amount exceeds bala"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14991:6:9"},"nodeType":"YulFunctionCall","src":"14991:62:9"},"nodeType":"YulExpressionStatement","src":"14991:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15073:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15084:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15069:3:9"},"nodeType":"YulFunctionCall","src":"15069:18:9"},{"hexValue":"6e6365","kind":"string","nodeType":"YulLiteral","src":"15089:5:9","type":"","value":"nce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15062:6:9"},"nodeType":"YulFunctionCall","src":"15062:33:9"},"nodeType":"YulExpressionStatement","src":"15062:33:9"},{"nodeType":"YulAssignment","src":"15104:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15116:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15127:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15112:3:9"},"nodeType":"YulFunctionCall","src":"15112:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15104:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14889:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14903:4:9","type":""}],"src":"14738:399:9"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC777: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC777: transfer from the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC777: transfer amount exceeds \")\n        mstore(add(headStart, 96), \"allowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC777: caller is not an operato\")\n        mstore(add(headStart, 96), \"r for holder\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC777: authorizing self as oper\")\n        mstore(add(headStart, 96), \"ator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC777: revoking self as operato\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC777: approve from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC777: approve to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        let tail_1 := abi_encode_string(value4, add(headStart, 192))\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_string(value5, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC777: transfer amount exceeds \")\n        mstore(add(headStart, 96), \"balance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 77)\n        mstore(add(headStart, 64), \"ERC777: token recipient contract\")\n        mstore(add(headStart, 96), \" has no implementer for ERC777To\")\n        mstore(add(headStart, 128), \"kensRecipient\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC777: send from the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC777: send to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC777: burn from the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC777: burn amount exceeds bala\")\n        mstore(add(headStart, 96), \"nce\")\n        tail := add(headStart, 128)\n    }\n}","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f65760003560e01c8063959b8c3f11610092578063959b8c3f146101ca57806395d89b41146101dd5780639bd9bbc6146101e5578063a9059cbb146101f8578063d95b63711461020b578063dd62ed3e1461021e578063fad8b32a14610257578063fc673c4f1461026a578063fe9d93031461027d57600080fd5b806306e48538146100fb57806306fdde0314610119578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163578063313ce56714610176578063556f0dc71461018557806362ad1b831461018c57806370a08231146101a1575b600080fd5b610103610290565b60405161011091906111df565b60405180910390f35b6101216102f2565b6040516101109190611279565b61014161013c3660046112a4565b61037b565b6040519015158152602001610110565b6001545b604051908152602001610110565b6101416101713660046112d0565b610393565b60405160128152602001610110565b6001610155565b61019f61019a3660046113b4565b61055c565b005b6101556101af366004611447565b6001600160a01b031660009081526020819052604090205490565b61019f6101d8366004611447565b610598565b6101216106b6565b61019f6101f3366004611464565b6106c5565b6101416102063660046112a4565b6106e8565b6101416102193660046114bd565b61079b565b61015561022c3660046114bd565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b61019f610265366004611447565b61083d565b61019f6102783660046114f6565b610959565b61019f61028b366004611576565b610991565b606060048054806020026020016040519081016040528092919081815260200182805480156102e857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ca575b5050505050905090565b606060028054610301906115bd565b80601f016020809104026020016040519081016040528092919081815260200182805461032d906115bd565b80156102e85780601f1061034f576101008083540402835291602001916102e8565b820191906000526020600020905b81548152906001019060200180831161035d57509395945050505050565b6000336103898185856109b0565b5060019392505050565b60006001600160a01b0383166103c45760405162461bcd60e51b81526004016103bb906115f8565b60405180910390fd5b6001600160a01b0384166104295760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b60648201526084016103bb565b600033905061045a818686866040518060200160405280600081525060405180602001604052806000815250610ad7565b610486818686866040518060200160405280600081525060405180602001604052806000815250610c0e565b6001600160a01b038086166000908152600860209081526040808320938516835292905220548381101561050e5760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b60648201526084016103bb565b610522868361051d8785611652565b6109b0565b6105508287878760405180602001604052806000815250604051806020016040528060008152506000610d74565b50600195945050505050565b610566338661079b565b6105825760405162461bcd60e51b81526004016103bb90611669565b61059185858585856001610f48565b5050505050565b336001600160a01b03821614156105fd5760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b60648201526084016103bb565b6001600160a01b03811660009081526005602052604090205460ff161561064e573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916905561067d565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610301906115bd565b6106e333848484604051806020016040528060008152506001610f48565b505050565b60006001600160a01b0383166107105760405162461bcd60e51b81526004016103bb906115f8565b6000339050610741818286866040518060200160405280600081525060405180602001604052806000815250610ad7565b61076d818286866040518060200160405280600081525060405180602001604052806000815250610c0e565b6103898182868660405180602001604052806000815250604051806020016040528060008152506000610d74565b6000816001600160a01b0316836001600160a01b0316148061080657506001600160a01b03831660009081526005602052604090205460ff16801561080657506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061083657506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156108a05760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b60648201526084016103bb565b6001600160a01b03811660009081526005602052604090205460ff16156108f4573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055610920565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b610963338561079b565b61097f5760405162461bcd60e51b81526004016103bb90611669565b61098b8484848461102b565b50505050565b6109ac3383836040518060200160405280600081525061102b565b5050565b6001600160a01b038316610a145760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103bb565b6001600160a01b038216610a765760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103bb565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610b5357600080fd5b505afa158015610b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8b91906116b5565b90506001600160a01b03811615610c0557604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610bd2908a908a908a908a908a908a906004016116d2565b600060405180830381600087803b158015610bec57600080fd5b505af1158015610c00573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610c875760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b60648201526084016103bb565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610cbe90849061172c565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610d1693929190611744565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610d6391815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610df057600080fd5b505afa158015610e04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2891906116b5565b90506001600160a01b03811615610ea4576040516223de2960e01b81526001600160a01b038216906223de2990610e6d908b908b908b908b908b908b906004016116d2565b600060405180830381600087803b158015610e8757600080fd5b505af1158015610e9b573d6000803e3d6000fd5b50505050610f3e565b8115610f3e576001600160a01b0386163b15610f3e5760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a4016103bb565b5050505050505050565b6001600160a01b038616610fa95760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103bb565b6001600160a01b038516610fff5760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f206164647265737360448201526064016103bb565b3361100e818888888888610ad7565b61101c818888888888610c0e565b610c0581888888888888610d74565b6001600160a01b03841661108c5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b60648201526084016103bb565b3361109c81866000878787610ad7565b6001600160a01b038516600090815260208190526040902054848110156111115760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b60648201526084016103bb565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611140908490611652565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a409887878760405161118e93929190611744565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b6020808252825182820181905260009190848201906040850190845b818110156112205783516001600160a01b0316835292840192918401916001016111fb565b50909695505050505050565b6000815180845260005b8181101561125257602081850181015186830182015201611236565b81811115611264576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610836602083018461122c565b6001600160a01b03811681146112a157600080fd5b50565b600080604083850312156112b757600080fd5b82356112c28161128c565b946020939093013593505050565b6000806000606084860312156112e557600080fd5b83356112f08161128c565b925060208401356113008161128c565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261133857600080fd5b813567ffffffffffffffff8082111561135357611353611311565b604051601f8301601f19908116603f0116810190828211818310171561137b5761137b611311565b8160405283815286602085880101111561139457600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156113cc57600080fd5b85356113d78161128c565b945060208601356113e78161128c565b935060408601359250606086013567ffffffffffffffff8082111561140b57600080fd5b61141789838a01611327565b9350608088013591508082111561142d57600080fd5b5061143a88828901611327565b9150509295509295909350565b60006020828403121561145957600080fd5b81356108368161128c565b60008060006060848603121561147957600080fd5b83356114848161128c565b925060208401359150604084013567ffffffffffffffff8111156114a757600080fd5b6114b386828701611327565b9150509250925092565b600080604083850312156114d057600080fd5b82356114db8161128c565b915060208301356114eb8161128c565b809150509250929050565b6000806000806080858703121561150c57600080fd5b84356115178161128c565b935060208501359250604085013567ffffffffffffffff8082111561153b57600080fd5b61154788838901611327565b9350606087013591508082111561155d57600080fd5b5061156a87828801611327565b91505092959194509250565b6000806040838503121561158957600080fd5b82359150602083013567ffffffffffffffff8111156115a757600080fd5b6115b385828601611327565b9150509250929050565b600181811c908216806115d157607f821691505b602082108114156115f257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b6000828210156116645761166461163c565b500390565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156116c757600080fd5b81516108368161128c565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c06080820181905260009061170d9083018561122c565b82810360a084015261171f818561122c565b9998505050505050505050565b6000821982111561173f5761173f61163c565b500190565b83815260606020820152600061175d606083018561122c565b828103604084015261176f818561122c565b969550505050505056fea264697066735822122029ac8ca1a85b41e53fbda697d1cd2a636fddd144e569b028b37ad81d0d757bc864736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0x92 JUMPI DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1CA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x27D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1A1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x103 PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x110 SWAP2 SWAP1 PUSH2 0x1279 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x37B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x12D0 JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x110 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x155 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x19A CALLDATASIZE PUSH1 0x4 PUSH2 0x13B4 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH2 0x1AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x1D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST PUSH2 0x121 PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x206 CALLDATASIZE PUSH1 0x4 PUSH2 0x12A4 JUMP JUMPDEST PUSH2 0x6E8 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x14BD JUMP JUMPDEST PUSH2 0x79B JUMP JUMPDEST PUSH2 0x155 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x14BD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x1447 JUMP JUMPDEST PUSH2 0x83D JUMP JUMPDEST PUSH2 0x19F PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x959 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x991 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2CA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x301 SWAP1 PUSH2 0x15BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x32D SWAP1 PUSH2 0x15BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2E8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x34F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2E8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x35D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x389 DUP2 DUP6 DUP6 PUSH2 0x9B0 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x429 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x45A DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x486 DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC0E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x50E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x522 DUP7 DUP4 PUSH2 0x51D DUP8 DUP6 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH2 0x550 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD74 JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x566 CALLER DUP7 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x591 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0xF48 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x5FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x64E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x67D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x301 SWAP1 PUSH2 0x15BD JUMP JUMPDEST PUSH2 0x6E3 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0xF48 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x710 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x741 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x76D DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC0E JUMP JUMPDEST PUSH2 0x389 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x806 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x806 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x836 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x8A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8F4 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x920 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x963 CALLER DUP6 PUSH2 0x79B JUMP JUMPDEST PUSH2 0x97F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3BB SWAP1 PUSH2 0x1669 JUMP JUMPDEST PUSH2 0x98B DUP5 DUP5 DUP5 DUP5 PUSH2 0x102B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x9AC CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x102B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xC05 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xBD2 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC00 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xCBE SWAP1 DUP5 SWAP1 PUSH2 0x172C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xD16 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xD63 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xDF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE04 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x16B5 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xEA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xE6D SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xF3E JUMP JUMPDEST DUP2 ISZERO PUSH2 0xF3E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xF3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x3BB JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0xFA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xFFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH2 0x100E DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAD7 JUMP JUMPDEST PUSH2 0x101C DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC0E JUMP JUMPDEST PUSH2 0xC05 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x108C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST CALLER PUSH2 0x109C DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1111 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1140 SWAP1 DUP5 SWAP1 PUSH2 0x1652 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x118E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1220 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x11FB JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1252 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1236 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1264 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x836 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12C2 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x12F0 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1300 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1353 JUMPI PUSH2 0x1353 PUSH2 0x1311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x137B JUMPI PUSH2 0x137B PUSH2 0x1311 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x13D7 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x13E7 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x140B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1417 DUP10 DUP4 DUP11 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x142D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143A DUP9 DUP3 DUP10 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x836 DUP2 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1479 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1484 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14B3 DUP7 DUP3 DUP8 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14DB DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x14EB DUP2 PUSH2 0x128C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x150C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x1517 DUP2 PUSH2 0x128C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x153B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1547 DUP9 DUP4 DUP10 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x155D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156A DUP8 DUP3 DUP9 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15B3 DUP6 DUP3 DUP7 ADD PUSH2 0x1327 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x15D1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x15F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1664 JUMPI PUSH2 0x1664 PUSH2 0x163C JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x836 DUP2 PUSH2 0x128C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x170D SWAP1 DUP4 ADD DUP6 PUSH2 0x122C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x171F DUP2 DUP6 PUSH2 0x122C JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x173F JUMPI PUSH2 0x173F PUSH2 0x163C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x175D PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x122C JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x176F DUP2 DUP6 PUSH2 0x122C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xAC DUP13 LOG1 0xA8 JUMPDEST COINBASE 0xE5 EXTCODEHASH 0xBD 0xA6 SWAP8 0xD1 0xCD 0x2A PUSH4 0x6FDDD144 0xE5 PUSH10 0xB028B37AD81D0D757BC8 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"1073:17251:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6769:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2967:98;;;:::i;:::-;;;;;;;:::i;8358:197::-;;;;;;:::i;:::-;;:::i;:::-;;;2000:14:9;;1993:22;1975:41;;1963:2;1948:18;8358:197:1;1835:187:9;3760:123:1;3864:12;;3760:123;;;2173:25:9;;;2161:2;2146:18;3760:123:1;2027:177:9;8929:806:1;;;;;;:::i;:::-;;:::i;3407:82::-;;;3480:2;2812:36:9;;2800:2;2785:18;3407:82:1;2670:184:9;3604:95:1;3691:1;3604:95;;7018:366;;;;;;:::i;:::-;;:::i;:::-;;3983:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4104:22:1;4078:7;4104:22;;;;;;;;;;;;3983:150;5824:412;;;;;;:::i;:::-;;:::i;3121:102::-;;;:::i;4263:193::-;;;;;;:::i;:::-;;:::i;4687:439::-;;;;;;:::i;:::-;;:::i;5446:311::-;;;;;;:::i;:::-;;:::i;8069:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8185:19:1;;;8159:7;8185:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;8069:151;6300:403;;;;;;:::i;:::-;;:::i;7505:325::-;;;;;;:::i;:::-;;:::i;5256:127::-;;;;;;:::i;:::-;;:::i;6769:130::-;6835:16;6870:22;6863:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6863:29:1;;;;;;;;;;;;;;;;;;;;;;;6769:130;:::o;2967:98::-;3021:13;3053:5;3046:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:12:1;;2967:98;-1:-1:-1;;;;;2967:98:1:o;8358:197::-;8440:4;719:10:6;8495:32:1;719:10:6;8512:7:1;8521:5;8495:8;:32::i;:::-;-1:-1:-1;8544:4:1;;8358:197;-1:-1:-1;;;8358:197:1:o;8929:806::-;9065:4;-1:-1:-1;;;;;9089:23:1;;9081:72;;;;-1:-1:-1;;;9081:72:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9171:20:1;;9163:71;;;;-1:-1:-1;;;9163:71:1;;7910:2:9;9163:71:1;;;7892:21:9;7949:2;7929:18;;;7922:30;7988:34;7968:18;;;7961:62;-1:-1:-1;;;8039:18:9;;;8032:36;8085:19;;9163:71:1;7708:402:9;9163:71:1;9245:15;719:10:6;9245:30:1;;9286:61;9304:7;9313:6;9321:9;9332:6;9286:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;9358:49;9364:7;9373:6;9381:9;9392:6;9358:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;-1:-1:-1;;;;;9445:19:1;;;9418:24;9445:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9491:26;;;;9483:80;;;;-1:-1:-1;;;9483:80:1;;8317:2:9;9483:80:1;;;8299:21:9;8356:2;8336:18;;;8329:30;8395:34;8375:18;;;8368:62;-1:-1:-1;;;8446:18:9;;;8439:39;8495:19;;9483:80:1;8115:405:9;9483:80:1;9573:52;9582:6;9590:7;9599:25;9618:6;9599:16;:25;:::i;:::-;9573:8;:52::i;:::-;9636:70;9656:7;9665:6;9673:9;9684:6;9636:70;;;;;;;;;;;;;;;;;;;;;;;;9700:5;9636:19;:70::i;:::-;-1:-1:-1;9724:4:1;;8929:806;-1:-1:-1;;;;;8929:806:1:o;7018:366::-;7225:35;719:10:6;7253:6:1;7225:13;:35::i;:::-;7217:92;;;;-1:-1:-1;;;7217:92:1;;;;;;;:::i;:::-;7319:58;7325:6;7333:9;7344:6;7352:4;7358:12;7372:4;7319:5;:58::i;:::-;7018:366;;;;;:::o;5824:412::-;719:10:6;-1:-1:-1;;;;;5911:24:1;;;;5903:73;;;;-1:-1:-1;;;5903:73:1;;9402:2:9;5903:73:1;;;9384:21:9;9441:2;9421:18;;;9414:30;9480:34;9460:18;;;9453:62;-1:-1:-1;;;9531:18:9;;;9524:34;9575:19;;5903:73:1;9200:400:9;5903:73:1;-1:-1:-1;;;;;5991:27:1;;;;;;:17;:27;;;;;;;;5987:185;;;719:10:6;6041:38:1;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6041:48:1;;;;;;;;;6034:55;;-1:-1:-1;;6034:55:1;;;5987:185;;;719:10:6;6120:24:1;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6120:34:1;;;;;;;;;:41;;-1:-1:-1;;6120:41:1;6157:4;6120:41;;;5987:185;6187:42;;719:10:6;;-1:-1:-1;;;;;6187:42:1;;;;;;;;5824:412;:::o;3121:102::-;3177:13;3209:7;3202:14;;;;;:::i;4263:193::-;4395:54;719:10:6;4415:9:1;4426:6;4434:4;4395:54;;;;;;;;;;;;4444:4;4395:5;:54::i;:::-;4263:193;;;:::o;4687:439::-;4773:4;-1:-1:-1;;;;;4797:23:1;;4789:72;;;;-1:-1:-1;;;4789:72:1;;;;;;;:::i;:::-;4872:12;719:10:6;4872:27:1;;4910:56;4928:4;4934;4940:9;4951:6;4910:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4977:44;4983:4;4989;4995:9;5006:6;4977:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;5032:65;5052:4;5058;5064:9;5075:6;5032:65;;;;;;;;;;;;;;;;;;;;;;;;5091:5;5032:19;:65::i;5446:311::-;5546:4;5593:11;-1:-1:-1;;;;;5581:23:1;:8;-1:-1:-1;;;;;5581:23:1;;:120;;;-1:-1:-1;;;;;;5621:27:1;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5653:37:1;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5652:48;5621:79;5581:169;;;-1:-1:-1;;;;;;5717:23:1;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5581:169;5562:188;5446:311;-1:-1:-1;;;5446:311:1:o;6300:403::-;-1:-1:-1;;;;;6384:24:1;;719:10:6;6384:24:1;;6376:70;;;;-1:-1:-1;;;6376:70:1;;9807:2:9;6376:70:1;;;9789:21:9;9846:2;9826:18;;;9819:30;9885:34;9865:18;;;9858:62;-1:-1:-1;;;9936:18:9;;;9929:31;9977:19;;6376:70:1;9605:397:9;6376:70:1;-1:-1:-1;;;;;6461:27:1;;;;;;:17;:27;;;;;;;;6457:185;;;719:10:6;6504:38:1;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6504:48:1;;;;;;;;;:55;;-1:-1:-1;;6504:55:1;6555:4;6504:55;;;6457:185;;;719:10:6;6597:24:1;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6597:34:1;;;;;;;;;6590:41;;-1:-1:-1;;6590:41:1;;;6457:185;6657:39;;719:10:6;;-1:-1:-1;;;;;6657:39:1;;;;;;;;6300:403;:::o;7505:325::-;7686:36;719:10:6;7714:7:1;7686:13;:36::i;:::-;7678:93;;;;-1:-1:-1;;;7678:93:1;;;;;;;:::i;:::-;7781:42;7787:7;7796:6;7804:4;7810:12;7781:5;:42::i;:::-;7505:325;;;;:::o;5256:127::-;5339:37;719:10:6;5359:6:1;5367:4;5339:37;;;;;;;;;;;;:5;:37::i;:::-;5256:127;;:::o;14872:365::-;-1:-1:-1;;;;;14995:20:1;;14987:70;;;;-1:-1:-1;;;14987:70:1;;10209:2:9;14987:70:1;;;10191:21:9;10248:2;10228:18;;;10221:30;10287:34;10267:18;;;10260:62;-1:-1:-1;;;10338:18:9;;;10331:35;10383:19;;14987:70:1;10007:401:9;14987:70:1;-1:-1:-1;;;;;15075:21:1;;15067:69;;;;-1:-1:-1;;;15067:69:1;;10615:2:9;15067:69:1;;;10597:21:9;10654:2;10634:18;;;10627:30;10693:34;10673:18;;;10666:62;-1:-1:-1;;;10744:18:9;;;10737:33;10787:19;;15067:69:1;10413:399:9;15067:69:1;-1:-1:-1;;;;;15147:19:1;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15198:32;;2173:25:9;;;15198:32:1;;2146:18:9;15198:32:1;;;;;;;14872:365;;;:::o;15710:472::-;15941:78;;-1:-1:-1;;;15941:78:1;;-1:-1:-1;;;;;11009:32:9;;15941:78:1;;;10991:51:9;1476:31:1;11058:18:9;;;11051:34;15919:19:1;;1227:42;;15941:41;;10964:18:9;;15941:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15919:100;-1:-1:-1;;;;;;16033:25:1;;;16029:147;;16074:91;;-1:-1:-1;;;16074:91:1;;-1:-1:-1;;;;;16074:39:1;;;;;:91;;16114:8;;16124:4;;16130:2;;16134:6;;16142:8;;16152:12;;16074:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16029:147;15909:273;15710:472;;;;;;:::o;14123:611::-;-1:-1:-1;;;;;14401:15:1;;14379:19;14401:15;;;;;;;;;;;14434:21;;;;14426:73;;;;-1:-1:-1;;;14426:73:1;;12291:2:9;14426:73:1;;;12273:21:9;12330:2;12310:18;;;12303:30;12369:34;12349:18;;;12342:62;-1:-1:-1;;;12420:18:9;;;12413:37;12467:19;;14426:73:1;12089:403:9;14426:73:1;-1:-1:-1;;;;;14533:15:1;;;:9;:15;;;;;;;;;;;14551:20;;;14533:38;;14591:13;;;;;;;;:23;;14565:6;;14533:9;14591:23;;14565:6;;14591:23;:::i;:::-;;;;;;;;14651:2;-1:-1:-1;;;;;14630:56:1;14645:4;-1:-1:-1;;;;;14630:56:1;14635:8;-1:-1:-1;;;;;14630:56:1;;14655:6;14663:8;14673:12;14630:56;;;;;;;;:::i;:::-;;;;;;;;14716:2;-1:-1:-1;;;;;14701:26:1;14710:4;-1:-1:-1;;;;;14701:26:1;;14720:6;14701:26;;;;2173:25:9;;2161:2;2146:18;;2027:177;14701:26:1;;;;;;;;14310:424;14123:611;;;;;;:::o;16871:676::-;17138:79;;-1:-1:-1;;;17138:79:1;;-1:-1:-1;;;;;11009:32:9;;17138:79:1;;;10991:51:9;1573:34:1;11058:18:9;;;11051:34;17116:19:1;;1227:42;;17138:41;;10964:18:9;;17138:79:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17116:101;-1:-1:-1;;;;;;17231:25:1;;;17227:314;;17272:96;;-1:-1:-1;;;17272:96:1;;-1:-1:-1;;;;;17272:44:1;;;;;:96;;17317:8;;17327:4;;17333:2;;17337:6;;17345:8;;17355:12;;17272:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17227:314;;;17389:19;17385:156;;;-1:-1:-1;;;;;17433:13:1;;1087:20:5;1133:8;17424:106:1;;;;-1:-1:-1;;;17424:106:1;;13287:2:9;17424:106:1;;;13269:21:9;13326:2;13306:18;;;13299:30;13365:34;13345:18;;;13338:62;13436:34;13416:18;;;13409:62;-1:-1:-1;;;13487:19:9;;;13480:44;13541:19;;17424:106:1;13085:481:9;17424:106:1;17106:441;16871:676;;;;;;;:::o;12351:650::-;-1:-1:-1;;;;;12573:18:1;;12565:65;;;;-1:-1:-1;;;12565:65:1;;13773:2:9;12565:65:1;;;13755:21:9;13812:2;13792:18;;;13785:30;13851:34;13831:18;;;13824:62;-1:-1:-1;;;13902:18:9;;;13895:32;13944:19;;12565:65:1;13571:398:9;12565:65:1;-1:-1:-1;;;;;12648:16:1;;12640:61;;;;-1:-1:-1;;;12640:61:1;;14176:2:9;12640:61:1;;;14158:21:9;;;14195:18;;;14188:30;14254:34;14234:18;;;14227:62;14306:18;;12640:61:1;13974:356:9;12640:61:1;719:10:6;12754:69:1;719:10:6;12782:4:1;12788:2;12792:6;12800:8;12810:12;12754:17;:69::i;:::-;12834:57;12840:8;12850:4;12856:2;12860:6;12868:8;12878:12;12834:5;:57::i;:::-;12902:92;12922:8;12932:4;12938:2;12942:6;12950:8;12960:12;12974:19;12902;:92::i;13306:811::-;-1:-1:-1;;;;;13470:18:1;;13462:65;;;;-1:-1:-1;;;13462:65:1;;14537:2:9;13462:65:1;;;14519:21:9;14576:2;14556:18;;;14549:30;14615:34;14595:18;;;14588:62;-1:-1:-1;;;14666:18:9;;;14659:32;14708:19;;13462:65:1;14335:398:9;13462:65:1;719:10:6;13580:73:1;719:10:6;13608:4:1;13538:16;13626:6;13634:4;13640:12;13580:17;:73::i;:::-;-1:-1:-1;;;;;13787:15:1;;13765:19;13787:15;;;;;;;;;;;13820:21;;;;13812:69;;;;-1:-1:-1;;;13812:69:1;;14940:2:9;13812:69:1;;;14922:21:9;14979:2;14959:18;;;14952:30;15018:34;14998:18;;;14991:62;-1:-1:-1;;;15069:18:9;;;15062:33;15112:19;;13812:69:1;14738:399:9;13812:69:1;-1:-1:-1;;;;;13915:15:1;;:9;:15;;;;;;;;;;13933:20;;;13915:38;;13973:12;:22;;13947:6;;13915:9;13973:22;;13947:6;;13973:22;:::i;:::-;;;;;;;;14028:4;-1:-1:-1;;;;;14011:50:1;14018:8;-1:-1:-1;;;;;14011:50:1;;14034:6;14042:4;14048:12;14011:50;;;;;;;;:::i;:::-;;;;;;;;14076:34;;2173:25:9;;;14099:1:1;;-1:-1:-1;;;;;14076:34:1;;;;;2161:2:9;2146:18;14076:34:1;;;;;;;13452:665;;13306:811;;;;:::o;14:658:9:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:9;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:9;;14:658;-1:-1:-1;;;;;;14:658:9:o;677:472::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;999:6;996:1;993:13;990:87;;;1065:1;1058:4;1049:6;1044:3;1040:16;1036:27;1029:38;990:87;-1:-1:-1;1131:2:9;1110:15;-1:-1:-1;;1106:29:9;1097:39;;;;1138:4;1093:50;;677:472;-1:-1:-1;;677:472:9:o;1154:220::-;1303:2;1292:9;1285:21;1266:4;1323:45;1364:2;1353:9;1349:18;1341:6;1323:45;:::i;1379:131::-;-1:-1:-1;;;;;1454:31:9;;1444:42;;1434:70;;1500:1;1497;1490:12;1434:70;1379:131;:::o;1515:315::-;1583:6;1591;1644:2;1632:9;1623:7;1619:23;1615:32;1612:52;;;1660:1;1657;1650:12;1612:52;1699:9;1686:23;1718:31;1743:5;1718:31;:::i;:::-;1768:5;1820:2;1805:18;;;;1792:32;;-1:-1:-1;;;1515:315:9:o;2209:456::-;2286:6;2294;2302;2355:2;2343:9;2334:7;2330:23;2326:32;2323:52;;;2371:1;2368;2361:12;2323:52;2410:9;2397:23;2429:31;2454:5;2429:31;:::i;:::-;2479:5;-1:-1:-1;2536:2:9;2521:18;;2508:32;2549:33;2508:32;2549:33;:::i;:::-;2209:456;;2601:7;;-1:-1:-1;;;2655:2:9;2640:18;;;;2627:32;;2209:456::o;2859:127::-;2920:10;2915:3;2911:20;2908:1;2901:31;2951:4;2948:1;2941:15;2975:4;2972:1;2965:15;2991:718;3033:5;3086:3;3079:4;3071:6;3067:17;3063:27;3053:55;;3104:1;3101;3094:12;3053:55;3140:6;3127:20;3166:18;3203:2;3199;3196:10;3193:36;;;3209:18;;:::i;:::-;3284:2;3278:9;3252:2;3338:13;;-1:-1:-1;;3334:22:9;;;3358:2;3330:31;3326:40;3314:53;;;3382:18;;;3402:22;;;3379:46;3376:72;;;3428:18;;:::i;:::-;3468:10;3464:2;3457:22;3503:2;3495:6;3488:18;3549:3;3542:4;3537:2;3529:6;3525:15;3521:26;3518:35;3515:55;;;3566:1;3563;3556:12;3515:55;3630:2;3623:4;3615:6;3611:17;3604:4;3596:6;3592:17;3579:54;3677:1;3670:4;3665:2;3657:6;3653:15;3649:26;3642:37;3697:6;3688:15;;;;;;2991:718;;;;:::o;3714:885::-;3827:6;3835;3843;3851;3859;3912:3;3900:9;3891:7;3887:23;3883:33;3880:53;;;3929:1;3926;3919:12;3880:53;3968:9;3955:23;3987:31;4012:5;3987:31;:::i;:::-;4037:5;-1:-1:-1;4094:2:9;4079:18;;4066:32;4107:33;4066:32;4107:33;:::i;:::-;4159:7;-1:-1:-1;4213:2:9;4198:18;;4185:32;;-1:-1:-1;4268:2:9;4253:18;;4240:32;4291:18;4321:14;;;4318:34;;;4348:1;4345;4338:12;4318:34;4371:49;4412:7;4403:6;4392:9;4388:22;4371:49;:::i;:::-;4361:59;;4473:3;4462:9;4458:19;4445:33;4429:49;;4503:2;4493:8;4490:16;4487:36;;;4519:1;4516;4509:12;4487:36;;4542:51;4585:7;4574:8;4563:9;4559:24;4542:51;:::i;:::-;4532:61;;;3714:885;;;;;;;;:::o;4604:247::-;4663:6;4716:2;4704:9;4695:7;4691:23;4687:32;4684:52;;;4732:1;4729;4722:12;4684:52;4771:9;4758:23;4790:31;4815:5;4790:31;:::i;4856:523::-;4942:6;4950;4958;5011:2;4999:9;4990:7;4986:23;4982:32;4979:52;;;5027:1;5024;5017:12;4979:52;5066:9;5053:23;5085:31;5110:5;5085:31;:::i;:::-;5135:5;-1:-1:-1;5187:2:9;5172:18;;5159:32;;-1:-1:-1;5242:2:9;5227:18;;5214:32;5269:18;5258:30;;5255:50;;;5301:1;5298;5291:12;5255:50;5324:49;5365:7;5356:6;5345:9;5341:22;5324:49;:::i;:::-;5314:59;;;4856:523;;;;;:::o;5384:388::-;5452:6;5460;5513:2;5501:9;5492:7;5488:23;5484:32;5481:52;;;5529:1;5526;5519:12;5481:52;5568:9;5555:23;5587:31;5612:5;5587:31;:::i;:::-;5637:5;-1:-1:-1;5694:2:9;5679:18;;5666:32;5707:33;5666:32;5707:33;:::i;:::-;5759:7;5749:17;;;5384:388;;;;;:::o;5777:743::-;5881:6;5889;5897;5905;5958:3;5946:9;5937:7;5933:23;5929:33;5926:53;;;5975:1;5972;5965:12;5926:53;6014:9;6001:23;6033:31;6058:5;6033:31;:::i;:::-;6083:5;-1:-1:-1;6135:2:9;6120:18;;6107:32;;-1:-1:-1;6190:2:9;6175:18;;6162:32;6213:18;6243:14;;;6240:34;;;6270:1;6267;6260:12;6240:34;6293:49;6334:7;6325:6;6314:9;6310:22;6293:49;:::i;:::-;6283:59;;6395:2;6384:9;6380:18;6367:32;6351:48;;6424:2;6414:8;6411:16;6408:36;;;6440:1;6437;6430:12;6408:36;;6463:51;6506:7;6495:8;6484:9;6480:24;6463:51;:::i;:::-;6453:61;;;5777:743;;;;;;;:::o;6525:388::-;6602:6;6610;6663:2;6651:9;6642:7;6638:23;6634:32;6631:52;;;6679:1;6676;6669:12;6631:52;6715:9;6702:23;6692:33;;6776:2;6765:9;6761:18;6748:32;6803:18;6795:6;6792:30;6789:50;;;6835:1;6832;6825:12;6789:50;6858:49;6899:7;6890:6;6879:9;6875:22;6858:49;:::i;:::-;6848:59;;;6525:388;;;;;:::o;6918:380::-;6997:1;6993:12;;;;7040;;;7061:61;;7115:4;7107:6;7103:17;7093:27;;7061:61;7168:2;7160:6;7157:14;7137:18;7134:38;7131:161;;;7214:10;7209:3;7205:20;7202:1;7195:31;7249:4;7246:1;7239:15;7277:4;7274:1;7267:15;7131:161;;6918:380;;;:::o;7303:400::-;7505:2;7487:21;;;7544:2;7524:18;;;7517:30;7583:34;7578:2;7563:18;;7556:62;-1:-1:-1;;;7649:2:9;7634:18;;7627:34;7693:3;7678:19;;7303:400::o;8525:127::-;8586:10;8581:3;8577:20;8574:1;8567:31;8617:4;8614:1;8607:15;8641:4;8638:1;8631:15;8657:125;8697:4;8725:1;8722;8719:8;8716:34;;;8730:18;;:::i;:::-;-1:-1:-1;8767:9:9;;8657:125::o;8787:408::-;8989:2;8971:21;;;9028:2;9008:18;;;9001:30;9067:34;9062:2;9047:18;;9040:62;-1:-1:-1;;;9133:2:9;9118:18;;9111:42;9185:3;9170:19;;8787:408::o;11096:251::-;11166:6;11219:2;11207:9;11198:7;11194:23;11190:32;11187:52;;;11235:1;11232;11225:12;11187:52;11267:9;11261:16;11286:31;11311:5;11286:31;:::i;11352:732::-;-1:-1:-1;;;;;11695:15:9;;;11677:34;;11747:15;;;11742:2;11727:18;;11720:43;11799:15;;11794:2;11779:18;;11772:43;11846:2;11831:18;;11824:34;;;11895:3;11889;11874:19;;11867:32;;;11620:4;;11922:46;;11948:19;;11940:6;11922:46;:::i;:::-;12017:9;12009:6;12005:22;11999:3;11988:9;11984:19;11977:51;12045:33;12071:6;12063;12045:33;:::i;:::-;12037:41;11352:732;-1:-1:-1;;;;;;;;;11352:732:9:o;12497:128::-;12537:3;12568:1;12564:6;12561:1;12558:13;12555:39;;;12574:18;;:::i;:::-;-1:-1:-1;12610:9:9;;12497:128::o;12630:450::-;12851:6;12840:9;12833:25;12894:2;12889;12878:9;12874:18;12867:30;12814:4;12920:45;12961:2;12950:9;12946:18;12938:6;12920:45;:::i;:::-;13013:9;13005:6;13001:22;12996:2;12985:9;12981:18;12974:50;13041:33;13067:6;13059;13041:33;:::i;:::-;13033:41;12630:450;-1:-1:-1;;;;;;12630:450:9:o"},"gasEstimates":{"creation":{"codeDepositCost":"1212600","executionCost":"infinite","totalCost":"infinite"},"external":{"allowance(address,address)":"infinite","approve(address,uint256)":"24640","authorizeOperator(address)":"28488","balanceOf(address)":"2711","burn(uint256,bytes)":"infinite","decimals()":"288","defaultOperators()":"infinite","granularity()":"325","isOperatorFor(address,address)":"infinite","name()":"infinite","operatorBurn(address,uint256,bytes,bytes)":"infinite","operatorSend(address,address,uint256,bytes,bytes)":"infinite","revokeOperator(address)":"28626","send(address,uint256,bytes)":"infinite","symbol()":"infinite","totalSupply()":"2348","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_approve(address,address,uint256)":"infinite","_beforeTokenTransfer(address,address,address,uint256)":"infinite","_burn(address,uint256,bytes memory,bytes memory)":"infinite","_callTokensReceived(address,address,address,uint256,bytes memory,bytes memory,bool)":"infinite","_callTokensToSend(address,address,address,uint256,bytes memory,bytes memory)":"infinite","_mint(address,uint256,bytes memory,bytes memory)":"infinite","_mint(address,uint256,bytes memory,bytes memory,bool)":"infinite","_move(address,address,address,uint256,bytes memory,bytes memory)":"infinite","_send(address,address,uint256,bytes memory,bytes memory,bool)":"infinite"}},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authorizeOperator(address)":"959b8c3f","balanceOf(address)":"70a08231","burn(uint256,bytes)":"fe9d9303","decimals()":"313ce567","defaultOperators()":"06e48538","granularity()":"556f0dc7","isOperatorFor(address,address)":"d95b6371","name()":"06fdde03","operatorBurn(address,uint256,bytes,bytes)":"fc673c4f","operatorSend(address,address,uint256,bytes,bytes)":"62ad1b83","revokeOperator(address)":"fad8b32a","send(address,uint256,bytes)":"9bd9bbc6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultOperators_\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators.\"},\"authorizeOperator(address)\":{\"details\":\"See {IERC777-authorizeOperator}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`tokenHolder`).\"},\"burn(uint256,bytes)\":{\"details\":\"See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"constructor\":{\"details\":\"`defaultOperators` may be an empty array.\"},\"decimals()\":{\"details\":\"See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\"},\"defaultOperators()\":{\"details\":\"See {IERC777-defaultOperators}.\"},\"granularity()\":{\"details\":\"See {IERC777-granularity}. This implementation always returns `1`.\"},\"isOperatorFor(address,address)\":{\"details\":\"See {IERC777-isOperatorFor}.\"},\"name()\":{\"details\":\"See {IERC777-name}.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events.\"},\"revokeOperator(address)\":{\"details\":\"See {IERC777-revokeOperator}.\"},\"send(address,uint256,bytes)\":{\"details\":\"See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"symbol()\":{\"details\":\"See {IERC777-symbol}.\"},\"totalSupply()\":{\"details\":\"See {IERC777-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/ERC777.sol\":\"ERC777\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/ERC777.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/ERC777.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC777.sol\\\";\\nimport \\\"./IERC777Recipient.sol\\\";\\nimport \\\"./IERC777Sender.sol\\\";\\nimport \\\"../ERC20/IERC20.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/IERC1820Registry.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC777} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * Support for ERC20 is included in this contract, as specified by the EIP: both\\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\\n * movements.\\n *\\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\\n * are no special restrictions in the amount of tokens that created, moved, or\\n * destroyed. This makes integration with ERC20 applications seamless.\\n */\\ncontract ERC777 is Context, IERC777, IERC20 {\\n    using Address for address;\\n\\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\\n\\n    mapping(address => uint256) private _balances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\\\"ERC777TokensSender\\\");\\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\\\"ERC777TokensRecipient\\\");\\n\\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\\n    address[] private _defaultOperatorsArray;\\n\\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\\n    mapping(address => bool) private _defaultOperators;\\n\\n    // For each account, a mapping of its operators and revoked default operators.\\n    mapping(address => mapping(address => bool)) private _operators;\\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\\n\\n    // ERC20-allowances\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    /**\\n     * @dev `defaultOperators` may be an empty array.\\n     */\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        address[] memory defaultOperators_\\n    ) {\\n        _name = name_;\\n        _symbol = symbol_;\\n\\n        _defaultOperatorsArray = defaultOperators_;\\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\\n            _defaultOperators[defaultOperators_[i]] = true;\\n        }\\n\\n        // register interfaces\\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\\\"ERC777Token\\\"), address(this));\\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\\\"ERC20Token\\\"), address(this));\\n    }\\n\\n    /**\\n     * @dev See {IERC777-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-decimals}.\\n     *\\n     * Always returns 18, as per the\\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\\n     */\\n    function decimals() public pure virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-granularity}.\\n     *\\n     * This implementation always returns `1`.\\n     */\\n    function granularity() public view virtual override returns (uint256) {\\n        return 1;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\\n     */\\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\\n        return _balances[tokenHolder];\\n    }\\n\\n    /**\\n     * @dev See {IERC777-send}.\\n     *\\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\\n     */\\n    function send(\\n        address recipient,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        _send(_msgSender(), recipient, amount, data, \\\"\\\", true);\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\\n     * interface if it is a contract.\\n     *\\n     * Also emits a {Sent} event.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        require(recipient != address(0), \\\"ERC777: transfer to the zero address\\\");\\n\\n        address from = _msgSender();\\n\\n        _callTokensToSend(from, from, recipient, amount, \\\"\\\", \\\"\\\");\\n\\n        _move(from, from, recipient, amount, \\\"\\\", \\\"\\\");\\n\\n        _callTokensReceived(from, from, recipient, amount, \\\"\\\", \\\"\\\", false);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-burn}.\\n     *\\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\\n     */\\n    function burn(uint256 amount, bytes memory data) public virtual override {\\n        _burn(_msgSender(), amount, data, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC777-isOperatorFor}.\\n     */\\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\\n        return\\n            operator == tokenHolder ||\\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\\n            _operators[tokenHolder][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC777-authorizeOperator}.\\n     */\\n    function authorizeOperator(address operator) public virtual override {\\n        require(_msgSender() != operator, \\\"ERC777: authorizing self as operator\\\");\\n\\n        if (_defaultOperators[operator]) {\\n            delete _revokedDefaultOperators[_msgSender()][operator];\\n        } else {\\n            _operators[_msgSender()][operator] = true;\\n        }\\n\\n        emit AuthorizedOperator(operator, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC777-revokeOperator}.\\n     */\\n    function revokeOperator(address operator) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC777: revoking self as operator\\\");\\n\\n        if (_defaultOperators[operator]) {\\n            _revokedDefaultOperators[_msgSender()][operator] = true;\\n        } else {\\n            delete _operators[_msgSender()][operator];\\n        }\\n\\n        emit RevokedOperator(operator, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC777-defaultOperators}.\\n     */\\n    function defaultOperators() public view virtual override returns (address[] memory) {\\n        return _defaultOperatorsArray;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-operatorSend}.\\n     *\\n     * Emits {Sent} and {IERC20-Transfer} events.\\n     */\\n    function operatorSend(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes memory data,\\n        bytes memory operatorData\\n    ) public virtual override {\\n        require(isOperatorFor(_msgSender(), sender), \\\"ERC777: caller is not an operator for holder\\\");\\n        _send(sender, recipient, amount, data, operatorData, true);\\n    }\\n\\n    /**\\n     * @dev See {IERC777-operatorBurn}.\\n     *\\n     * Emits {Burned} and {IERC20-Transfer} events.\\n     */\\n    function operatorBurn(\\n        address account,\\n        uint256 amount,\\n        bytes memory data,\\n        bytes memory operatorData\\n    ) public virtual override {\\n        require(isOperatorFor(_msgSender(), account), \\\"ERC777: caller is not an operator for holder\\\");\\n        _burn(account, amount, data, operatorData);\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     *\\n     * Note that operator and allowance concepts are orthogonal: operators may\\n     * not have allowance, and accounts with allowance may not be operators\\n     * themselves.\\n     */\\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\\n        return _allowances[holder][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Note that accounts cannot have allowance issued by their operators.\\n     */\\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\\n        address holder = _msgSender();\\n        _approve(holder, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Note that operator and allowance concepts are orthogonal: operators cannot\\n     * call `transferFrom` (unless they have allowance), and accounts with\\n     * allowance cannot call `operatorSend` (unless they are operators).\\n     *\\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\\n     */\\n    function transferFrom(\\n        address holder,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        require(recipient != address(0), \\\"ERC777: transfer to the zero address\\\");\\n        require(holder != address(0), \\\"ERC777: transfer from the zero address\\\");\\n\\n        address spender = _msgSender();\\n\\n        _callTokensToSend(spender, holder, recipient, amount, \\\"\\\", \\\"\\\");\\n\\n        _move(spender, holder, recipient, amount, \\\"\\\", \\\"\\\");\\n\\n        uint256 currentAllowance = _allowances[holder][spender];\\n        require(currentAllowance >= amount, \\\"ERC777: transfer amount exceeds allowance\\\");\\n        _approve(holder, spender, currentAllowance - amount);\\n\\n        _callTokensReceived(spender, holder, recipient, amount, \\\"\\\", \\\"\\\", false);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * If a send hook is registered for `account`, the corresponding function\\n     * will be called with `operator`, `data` and `operatorData`.\\n     *\\n     * See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits {Minted} and {IERC20-Transfer} events.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function _mint(\\n        address account,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData\\n    ) internal virtual {\\n        _mint(account, amount, userData, operatorData, true);\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * If `requireReceptionAck` is set to true, and if a send hook is\\n     * registered for `account`, the corresponding function will be called with\\n     * `operator`, `data` and `operatorData`.\\n     *\\n     * See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits {Minted} and {IERC20-Transfer} events.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function _mint(\\n        address account,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData,\\n        bool requireReceptionAck\\n    ) internal virtual {\\n        require(account != address(0), \\\"ERC777: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), account, amount);\\n\\n        // Update state variables\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n\\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\\n\\n        emit Minted(operator, account, amount, userData, operatorData);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Send tokens\\n     * @param from address token holder address\\n     * @param to address recipient address\\n     * @param amount uint256 amount of tokens to transfer\\n     * @param userData bytes extra information provided by the token holder (if any)\\n     * @param operatorData bytes extra information provided by the operator (if any)\\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\\n     */\\n    function _send(\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData,\\n        bool requireReceptionAck\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC777: send from the zero address\\\");\\n        require(to != address(0), \\\"ERC777: send to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\\n\\n        _move(operator, from, to, amount, userData, operatorData);\\n\\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\\n    }\\n\\n    /**\\n     * @dev Burn tokens\\n     * @param from address token holder address\\n     * @param amount uint256 amount of tokens to burn\\n     * @param data bytes extra information provided by the token holder\\n     * @param operatorData bytes extra information provided by the operator (if any)\\n     */\\n    function _burn(\\n        address from,\\n        uint256 amount,\\n        bytes memory data,\\n        bytes memory operatorData\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC777: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\\n\\n        _beforeTokenTransfer(operator, from, address(0), amount);\\n\\n        // Update state variables\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC777: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Burned(operator, from, amount, data, operatorData);\\n        emit Transfer(from, address(0), amount);\\n    }\\n\\n    function _move(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData\\n    ) private {\\n        _beforeTokenTransfer(operator, from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC777: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Sent(operator, from, to, amount, userData, operatorData);\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_approve}.\\n     *\\n     * Note that accounts cannot have allowance issued by their operators.\\n     */\\n    function _approve(\\n        address holder,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(holder != address(0), \\\"ERC777: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC777: approve to the zero address\\\");\\n\\n        _allowances[holder][spender] = value;\\n        emit Approval(holder, spender, value);\\n    }\\n\\n    /**\\n     * @dev Call from.tokensToSend() if the interface is registered\\n     * @param operator address operator requesting the transfer\\n     * @param from address token holder address\\n     * @param to address recipient address\\n     * @param amount uint256 amount of tokens to transfer\\n     * @param userData bytes extra information provided by the token holder (if any)\\n     * @param operatorData bytes extra information provided by the operator (if any)\\n     */\\n    function _callTokensToSend(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData\\n    ) private {\\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\\n        if (implementer != address(0)) {\\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\\n        }\\n    }\\n\\n    /**\\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\\n     * tokensReceived() was not registered for the recipient\\n     * @param operator address operator requesting the transfer\\n     * @param from address token holder address\\n     * @param to address recipient address\\n     * @param amount uint256 amount of tokens to transfer\\n     * @param userData bytes extra information provided by the token holder (if any)\\n     * @param operatorData bytes extra information provided by the operator (if any)\\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\\n     */\\n    function _callTokensReceived(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData,\\n        bool requireReceptionAck\\n    ) private {\\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\\n        if (implementer != address(0)) {\\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\\n        } else if (requireReceptionAck) {\\n            require(!to.isContract(), \\\"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes\\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x72d06ad8a9e0b3603ed5ed945a8994112c10e377b1c920a7c64a3350cd3d23f2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777Token standard as defined in the EIP.\\n *\\n * This contract uses the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\\n * token holders and recipients react to token movements by using setting implementers\\n * for the associated interfaces in said registry. See {IERC1820Registry} and\\n * {ERC1820Implementer}.\\n */\\ninterface IERC777 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the smallest part of the token that is not divisible. This\\n     * means all token operations (creation, movement and destruction) must have\\n     * amounts that are a multiple of this number.\\n     *\\n     * For most token contracts, this value will equal 1.\\n     */\\n    function granularity() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by an account (`owner`).\\n     */\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * If send or receive hooks are registered for the caller and `recipient`,\\n     * the corresponding functions will be called with `data` and empty\\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits a {Sent} event.\\n     *\\n     * Requirements\\n     *\\n     * - the caller must have at least `amount` tokens.\\n     * - `recipient` cannot be the zero address.\\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function send(\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\\n     * total supply.\\n     *\\n     * If a send hook is registered for the caller, the corresponding function\\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\\n     *\\n     * Emits a {Burned} event.\\n     *\\n     * Requirements\\n     *\\n     * - the caller must have at least `amount` tokens.\\n     */\\n    function burn(uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev Returns true if an account is an operator of `tokenHolder`.\\n     * Operators can send and burn tokens on behalf of their owners. All\\n     * accounts are their own operator.\\n     *\\n     * See {operatorSend} and {operatorBurn}.\\n     */\\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\\n\\n    /**\\n     * @dev Make an account an operator of the caller.\\n     *\\n     * See {isOperatorFor}.\\n     *\\n     * Emits an {AuthorizedOperator} event.\\n     *\\n     * Requirements\\n     *\\n     * - `operator` cannot be calling address.\\n     */\\n    function authorizeOperator(address operator) external;\\n\\n    /**\\n     * @dev Revoke an account's operator status for the caller.\\n     *\\n     * See {isOperatorFor} and {defaultOperators}.\\n     *\\n     * Emits a {RevokedOperator} event.\\n     *\\n     * Requirements\\n     *\\n     * - `operator` cannot be calling address.\\n     */\\n    function revokeOperator(address operator) external;\\n\\n    /**\\n     * @dev Returns the list of default operators. These accounts are operators\\n     * for all token holders, even if {authorizeOperator} was never called on\\n     * them.\\n     *\\n     * This list is immutable, but individual holders may revoke these via\\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\\n     */\\n    function defaultOperators() external view returns (address[] memory);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\\n     * be an operator of `sender`.\\n     *\\n     * If send or receive hooks are registered for `sender` and `recipient`,\\n     * the corresponding functions will be called with `data` and\\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits a {Sent} event.\\n     *\\n     * Requirements\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `sender` must have at least `amount` tokens.\\n     * - the caller must be an operator for `sender`.\\n     * - `recipient` cannot be the zero address.\\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function operatorSend(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data,\\n        bytes calldata operatorData\\n    ) external;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\\n     * The caller must be an operator of `account`.\\n     *\\n     * If a send hook is registered for `account`, the corresponding function\\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\\n     *\\n     * Emits a {Burned} event.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     * - the caller must be an operator for `account`.\\n     */\\n    function operatorBurn(\\n        address account,\\n        uint256 amount,\\n        bytes calldata data,\\n        bytes calldata operatorData\\n    ) external;\\n\\n    event Sent(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 amount,\\n        bytes data,\\n        bytes operatorData\\n    );\\n\\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\\n\\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\\n\\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\\n\\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\\n}\\n\",\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\\n *\\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\\n * contract implement this interface (contract holders can be their own\\n * implementer) and registering it on the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\\n *\\n * See {IERC1820Registry} and {ERC1820Implementer}.\\n */\\ninterface IERC777Recipient {\\n    /**\\n     * @dev Called by an {IERC777} token contract whenever tokens are being\\n     * moved or created into a registered account (`to`). The type of operation\\n     * is conveyed by `from` being the zero address or not.\\n     *\\n     * This call occurs _after_ the token contract's state is updated, so\\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\\n     *\\n     * This function may revert to prevent the operation from being executed.\\n     */\\n    function tokensReceived(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes calldata userData,\\n        bytes calldata operatorData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Sender.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\\n *\\n * {IERC777} Token holders can be notified of operations performed on their\\n * tokens by having a contract implement this interface (contract holders can be\\n * their own implementer) and registering it on the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\\n *\\n * See {IERC1820Registry} and {ERC1820Implementer}.\\n */\\ninterface IERC777Sender {\\n    /**\\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\\n     * is conveyed by `to` being the zero address or not.\\n     *\\n     * This call occurs _before_ the token contract's state is updated, so\\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\\n     *\\n     * This function may revert to prevent the operation from being executed.\\n     */\\n    function tokensToSend(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes calldata userData,\\n        bytes calldata operatorData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC1820Registry.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the global ERC1820 Registry, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\\n * implementers for interfaces in this registry, as well as query support.\\n *\\n * Implementers may be shared by multiple accounts, and can also implement more\\n * than a single interface for each account. Contracts can implement interfaces\\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\\n * contract.\\n *\\n * {IERC165} interfaces can also be queried via the registry.\\n *\\n * For an in-depth explanation and source code analysis, see the EIP text.\\n */\\ninterface IERC1820Registry {\\n    /**\\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\\n     * account is able to set interface implementers for it.\\n     *\\n     * By default, each account is its own manager. Passing a value of `0x0` in\\n     * `newManager` will reset the manager to this initial state.\\n     *\\n     * Emits a {ManagerChanged} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be the current manager for `account`.\\n     */\\n    function setManager(address account, address newManager) external;\\n\\n    /**\\n     * @dev Returns the manager for `account`.\\n     *\\n     * See {setManager}.\\n     */\\n    function getManager(address account) external view returns (address);\\n\\n    /**\\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\\n     * `interfaceHash`.\\n     *\\n     * `account` being the zero address is an alias for the caller's address.\\n     * The zero address can also be used in `implementer` to remove an old one.\\n     *\\n     * See {interfaceHash} to learn how these are created.\\n     *\\n     * Emits an {InterfaceImplementerSet} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be the current manager for `account`.\\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\\n     * end in 28 zeroes).\\n     * - `implementer` must implement {IERC1820Implementer} and return true when\\n     * queried for support, unless `implementer` is the caller. See\\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\\n     */\\n    function setInterfaceImplementer(\\n        address account,\\n        bytes32 _interfaceHash,\\n        address implementer\\n    ) external;\\n\\n    /**\\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\\n     * implementer is registered, returns the zero address.\\n     *\\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\\n     * zeroes), `account` will be queried for support of it.\\n     *\\n     * `account` being the zero address is an alias for the caller's address.\\n     */\\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\\n\\n    /**\\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\\n     * corresponding\\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\\n     */\\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\\n     * @param account Address of the contract for which to update the cache.\\n     * @param interfaceId ERC165 interface for which to update the cache.\\n     */\\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\\n\\n    /**\\n     * @notice Checks whether a contract implements an ERC165 interface or not.\\n     * If the result is not cached a direct lookup on the contract address is performed.\\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\\n     * {updateERC165Cache} with the contract address.\\n     * @param account Address of the contract to check.\\n     * @param interfaceId ERC165 interface to check.\\n     * @return True if `account` implements `interfaceId`, false otherwise.\\n     */\\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\\n\\n    /**\\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\\n     * @param account Address of the contract to check.\\n     * @param interfaceId ERC165 interface to check.\\n     * @return True if `account` implements `interfaceId`, false otherwise.\\n     */\\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\\n\\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\\n\\n    event ManagerChanged(address indexed account, address indexed newManager);\\n}\\n\",\"keccak256\":\"0x6e306f9ab28416a9e5931f0b6e264676e8ac68fad184f9a9d8bb125c6ec23bc3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":106,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":108,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_totalSupply","offset":0,"slot":"1","type":"t_uint256"},{"astId":110,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":112,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":125,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_defaultOperatorsArray","offset":0,"slot":"4","type":"t_array(t_address)dyn_storage"},{"astId":129,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_defaultOperators","offset":0,"slot":"5","type":"t_mapping(t_address,t_bool)"},{"astId":135,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_operators","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":141,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_revokedDefaultOperators","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":147,"contract":"@openzeppelin/contracts/token/ERC777/ERC777.sol:ERC777","label":"_allowances","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC777/IERC777.sol":{"IERC777":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"AuthorizedOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Burned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"RevokedOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Sent","type":"event"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultOperators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"granularity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"operatorBurn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"operatorSend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.","kind":"dev","methods":{"authorizeOperator(address)":{"details":"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by an account (`owner`)."},"burn(uint256,bytes)":{"details":"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."},"defaultOperators()":{"details":"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."},"granularity()":{"details":"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."},"isOperatorFor(address,address)":{"details":"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."},"name()":{"details":"Returns the name of the token."},"operatorBurn(address,uint256,bytes,bytes)":{"details":"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."},"operatorSend(address,address,uint256,bytes,bytes)":{"details":"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."},"revokeOperator(address)":{"details":"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."},"send(address,uint256,bytes)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"Returns the amount of tokens in existence."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"authorizeOperator(address)":"959b8c3f","balanceOf(address)":"70a08231","burn(uint256,bytes)":"fe9d9303","defaultOperators()":"06e48538","granularity()":"556f0dc7","isOperatorFor(address,address)":"d95b6371","name()":"06fdde03","operatorBurn(address,uint256,bytes,bytes)":"fc673c4f","operatorSend(address,address,uint256,bytes,bytes)":"62ad1b83","revokeOperator(address)":"fad8b32a","send(address,uint256,bytes)":"9bd9bbc6","symbol()":"95d89b41","totalSupply()":"18160ddd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"authorizeOperator(address)\":{\"details\":\"Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`owner`).\"},\"burn(uint256,bytes)\":{\"details\":\"Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens.\"},\"defaultOperators()\":{\"details\":\"Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false.\"},\"granularity()\":{\"details\":\"Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1.\"},\"isOperatorFor(address,address)\":{\"details\":\"Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"revokeOperator(address)\":{\"details\":\"Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address.\"},\"send(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":\"IERC777\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777Token standard as defined in the EIP.\\n *\\n * This contract uses the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\\n * token holders and recipients react to token movements by using setting implementers\\n * for the associated interfaces in said registry. See {IERC1820Registry} and\\n * {ERC1820Implementer}.\\n */\\ninterface IERC777 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the smallest part of the token that is not divisible. This\\n     * means all token operations (creation, movement and destruction) must have\\n     * amounts that are a multiple of this number.\\n     *\\n     * For most token contracts, this value will equal 1.\\n     */\\n    function granularity() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by an account (`owner`).\\n     */\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * If send or receive hooks are registered for the caller and `recipient`,\\n     * the corresponding functions will be called with `data` and empty\\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits a {Sent} event.\\n     *\\n     * Requirements\\n     *\\n     * - the caller must have at least `amount` tokens.\\n     * - `recipient` cannot be the zero address.\\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function send(\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\\n     * total supply.\\n     *\\n     * If a send hook is registered for the caller, the corresponding function\\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\\n     *\\n     * Emits a {Burned} event.\\n     *\\n     * Requirements\\n     *\\n     * - the caller must have at least `amount` tokens.\\n     */\\n    function burn(uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev Returns true if an account is an operator of `tokenHolder`.\\n     * Operators can send and burn tokens on behalf of their owners. All\\n     * accounts are their own operator.\\n     *\\n     * See {operatorSend} and {operatorBurn}.\\n     */\\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\\n\\n    /**\\n     * @dev Make an account an operator of the caller.\\n     *\\n     * See {isOperatorFor}.\\n     *\\n     * Emits an {AuthorizedOperator} event.\\n     *\\n     * Requirements\\n     *\\n     * - `operator` cannot be calling address.\\n     */\\n    function authorizeOperator(address operator) external;\\n\\n    /**\\n     * @dev Revoke an account's operator status for the caller.\\n     *\\n     * See {isOperatorFor} and {defaultOperators}.\\n     *\\n     * Emits a {RevokedOperator} event.\\n     *\\n     * Requirements\\n     *\\n     * - `operator` cannot be calling address.\\n     */\\n    function revokeOperator(address operator) external;\\n\\n    /**\\n     * @dev Returns the list of default operators. These accounts are operators\\n     * for all token holders, even if {authorizeOperator} was never called on\\n     * them.\\n     *\\n     * This list is immutable, but individual holders may revoke these via\\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\\n     */\\n    function defaultOperators() external view returns (address[] memory);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\\n     * be an operator of `sender`.\\n     *\\n     * If send or receive hooks are registered for `sender` and `recipient`,\\n     * the corresponding functions will be called with `data` and\\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits a {Sent} event.\\n     *\\n     * Requirements\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `sender` must have at least `amount` tokens.\\n     * - the caller must be an operator for `sender`.\\n     * - `recipient` cannot be the zero address.\\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function operatorSend(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data,\\n        bytes calldata operatorData\\n    ) external;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\\n     * The caller must be an operator of `account`.\\n     *\\n     * If a send hook is registered for `account`, the corresponding function\\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\\n     *\\n     * Emits a {Burned} event.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     * - the caller must be an operator for `account`.\\n     */\\n    function operatorBurn(\\n        address account,\\n        uint256 amount,\\n        bytes calldata data,\\n        bytes calldata operatorData\\n    ) external;\\n\\n    event Sent(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 amount,\\n        bytes data,\\n        bytes operatorData\\n    );\\n\\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\\n\\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\\n\\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\\n\\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\\n}\\n\",\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol":{"IERC777Recipient":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"tokensReceived","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.","kind":"dev","methods":{"tokensReceived(address,address,address,uint256,bytes,bytes)":{"details":"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"tokensReceived(address,address,address,uint256,bytes,bytes)":"0023de29"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\\n *\\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\\n * contract implement this interface (contract holders can be their own\\n * implementer) and registering it on the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\\n *\\n * See {IERC1820Registry} and {ERC1820Implementer}.\\n */\\ninterface IERC777Recipient {\\n    /**\\n     * @dev Called by an {IERC777} token contract whenever tokens are being\\n     * moved or created into a registered account (`to`). The type of operation\\n     * is conveyed by `from` being the zero address or not.\\n     *\\n     * This call occurs _after_ the token contract's state is updated, so\\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\\n     *\\n     * This function may revert to prevent the operation from being executed.\\n     */\\n    function tokensReceived(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes calldata userData,\\n        bytes calldata operatorData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol":{"IERC777Sender":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"userData","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"tokensToSend","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.","kind":"dev","methods":{"tokensToSend(address,address,address,uint256,bytes,bytes)":{"details":"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"tokensToSend(address,address,address,uint256,bytes,bytes)":"75ab9782"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":\"IERC777Sender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Sender.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\\n *\\n * {IERC777} Token holders can be notified of operations performed on their\\n * tokens by having a contract implement this interface (contract holders can be\\n * their own implementer) and registering it on the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\\n *\\n * See {IERC1820Registry} and {ERC1820Implementer}.\\n */\\ninterface IERC777Sender {\\n    /**\\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\\n     * is conveyed by `to` being the zero address or not.\\n     *\\n     * This call occurs _before_ the token contract's state is updated, so\\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\\n     *\\n     * This function may revert to prevent the operation from being executed.\\n     */\\n    function tokensToSend(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes calldata userData,\\n        bytes calldata operatorData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207885e4897cc455cec14e791885ff9f77bb408f6f04137993d22e88dea4d38c2864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x85E4897CC455CEC14E791885FF9F77BB408F6F04137993D22E DUP9 0xDE LOG4 0xD3 DUP13 0x28 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"179:7729:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;179:7729:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207885e4897cc455cec14e791885ff9f77bb408f6f04137993d22e88dea4d38c2864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x85E4897CC455CEC14E791885FF9F77BB408F6F04137993D22E DUP9 0xDE LOG4 0xD3 DUP13 0x28 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"179:7729:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol":{"IERC1820Registry":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"bytes32","name":"interfaceHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"implementer","type":"address"}],"name":"InterfaceImplementerSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"newManager","type":"address"}],"name":"ManagerChanged","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"_interfaceHash","type":"bytes32"}],"name":"getInterfaceImplementer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"getManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"implementsERC165Interface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"implementsERC165InterfaceNoCache","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"interfaceName","type":"string"}],"name":"interfaceHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"_interfaceHash","type":"bytes32"},{"internalType":"address","name":"implementer","type":"address"}],"name":"setInterfaceImplementer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"newManager","type":"address"}],"name":"setManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"updateERC165Cache","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.","kind":"dev","methods":{"getInterfaceImplementer(address,bytes32)":{"details":"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address."},"getManager(address)":{"details":"Returns the manager for `account`. See {setManager}."},"implementsERC165Interface(address,bytes4)":{"params":{"account":"Address of the contract to check.","interfaceId":"ERC165 interface to check."},"returns":{"_0":"True if `account` implements `interfaceId`, false otherwise."}},"implementsERC165InterfaceNoCache(address,bytes4)":{"params":{"account":"Address of the contract to check.","interfaceId":"ERC165 interface to check."},"returns":{"_0":"True if `account` implements `interfaceId`, false otherwise."}},"interfaceHash(string)":{"details":"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP]."},"setInterfaceImplementer(address,bytes32,address)":{"details":"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}."},"setManager(address,address)":{"details":"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`."},"updateERC165Cache(address,bytes4)":{"params":{"account":"Address of the contract for which to update the cache.","interfaceId":"ERC165 interface for which to update the cache."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getInterfaceImplementer(address,bytes32)":"aabbb8ca","getManager(address)":"3d584063","implementsERC165Interface(address,bytes4)":"f712f3e8","implementsERC165InterfaceNoCache(address,bytes4)":"b7056765","interfaceHash(string)":"65ba36c1","setInterfaceImplementer(address,bytes32,address)":"29965a1d","setManager(address,address)":"5df8122f","updateERC165Cache(address,bytes4)":"a41e7d51"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"interfaceHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"InterfaceImplementerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"}],\"name\":\"getInterfaceImplementer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165Interface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"implementsERC165InterfaceNoCache\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"interfaceName\",\"type\":\"string\"}],\"name\":\"interfaceHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_interfaceHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"implementer\",\"type\":\"address\"}],\"name\":\"setInterfaceImplementer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newManager\",\"type\":\"address\"}],\"name\":\"setManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"updateERC165Cache\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the global ERC1820 Registry, as defined in the https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register implementers for interfaces in this registry, as well as query support. Implementers may be shared by multiple accounts, and can also implement more than a single interface for each account. Contracts can implement interfaces for themselves, but externally-owned accounts (EOA) must delegate this to a contract. {IERC165} interfaces can also be queried via the registry. For an in-depth explanation and source code analysis, see the EIP text.\",\"kind\":\"dev\",\"methods\":{\"getInterfaceImplementer(address,bytes32)\":{\"details\":\"Returns the implementer of `interfaceHash` for `account`. If no such implementer is registered, returns the zero address. If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28 zeroes), `account` will be queried for support of it. `account` being the zero address is an alias for the caller's address.\"},\"getManager(address)\":{\"details\":\"Returns the manager for `account`. See {setManager}.\"},\"implementsERC165Interface(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract to check.\",\"interfaceId\":\"ERC165 interface to check.\"},\"returns\":{\"_0\":\"True if `account` implements `interfaceId`, false otherwise.\"}},\"interfaceHash(string)\":{\"details\":\"Returns the interface hash for an `interfaceName`, as defined in the corresponding https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\"},\"setInterfaceImplementer(address,bytes32,address)\":{\"details\":\"Sets the `implementer` contract as ``account``'s implementer for `interfaceHash`. `account` being the zero address is an alias for the caller's address. The zero address can also be used in `implementer` to remove an old one. See {interfaceHash} to learn how these are created. Emits an {InterfaceImplementerSet} event. Requirements: - the caller must be the current manager for `account`. - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not end in 28 zeroes). - `implementer` must implement {IERC1820Implementer} and return true when queried for support, unless `implementer` is the caller. See {IERC1820Implementer-canImplementInterfaceForAddress}.\"},\"setManager(address,address)\":{\"details\":\"Sets `newManager` as the manager for `account`. A manager of an account is able to set interface implementers for it. By default, each account is its own manager. Passing a value of `0x0` in `newManager` will reset the manager to this initial state. Emits a {ManagerChanged} event. Requirements: - the caller must be the current manager for `account`.\"},\"updateERC165Cache(address,bytes4)\":{\"params\":{\"account\":\"Address of the contract for which to update the cache.\",\"interfaceId\":\"ERC165 interface for which to update the cache.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"implementsERC165Interface(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address.\"},\"implementsERC165InterfaceNoCache(address,bytes4)\":{\"notice\":\"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\"},\"updateERC165Cache(address,bytes4)\":{\"notice\":\"Updates the cache with whether the contract implements an ERC165 interface or not.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":\"IERC1820Registry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC1820Registry.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the global ERC1820 Registry, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\\n * implementers for interfaces in this registry, as well as query support.\\n *\\n * Implementers may be shared by multiple accounts, and can also implement more\\n * than a single interface for each account. Contracts can implement interfaces\\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\\n * contract.\\n *\\n * {IERC165} interfaces can also be queried via the registry.\\n *\\n * For an in-depth explanation and source code analysis, see the EIP text.\\n */\\ninterface IERC1820Registry {\\n    /**\\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\\n     * account is able to set interface implementers for it.\\n     *\\n     * By default, each account is its own manager. Passing a value of `0x0` in\\n     * `newManager` will reset the manager to this initial state.\\n     *\\n     * Emits a {ManagerChanged} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be the current manager for `account`.\\n     */\\n    function setManager(address account, address newManager) external;\\n\\n    /**\\n     * @dev Returns the manager for `account`.\\n     *\\n     * See {setManager}.\\n     */\\n    function getManager(address account) external view returns (address);\\n\\n    /**\\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\\n     * `interfaceHash`.\\n     *\\n     * `account` being the zero address is an alias for the caller's address.\\n     * The zero address can also be used in `implementer` to remove an old one.\\n     *\\n     * See {interfaceHash} to learn how these are created.\\n     *\\n     * Emits an {InterfaceImplementerSet} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be the current manager for `account`.\\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\\n     * end in 28 zeroes).\\n     * - `implementer` must implement {IERC1820Implementer} and return true when\\n     * queried for support, unless `implementer` is the caller. See\\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\\n     */\\n    function setInterfaceImplementer(\\n        address account,\\n        bytes32 _interfaceHash,\\n        address implementer\\n    ) external;\\n\\n    /**\\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\\n     * implementer is registered, returns the zero address.\\n     *\\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\\n     * zeroes), `account` will be queried for support of it.\\n     *\\n     * `account` being the zero address is an alias for the caller's address.\\n     */\\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\\n\\n    /**\\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\\n     * corresponding\\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\\n     */\\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\\n     * @param account Address of the contract for which to update the cache.\\n     * @param interfaceId ERC165 interface for which to update the cache.\\n     */\\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\\n\\n    /**\\n     * @notice Checks whether a contract implements an ERC165 interface or not.\\n     * If the result is not cached a direct lookup on the contract address is performed.\\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\\n     * {updateERC165Cache} with the contract address.\\n     * @param account Address of the contract to check.\\n     * @param interfaceId ERC165 interface to check.\\n     * @return True if `account` implements `interfaceId`, false otherwise.\\n     */\\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\\n\\n    /**\\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\\n     * @param account Address of the contract to check.\\n     * @param interfaceId ERC165 interface to check.\\n     * @return True if `account` implements `interfaceId`, false otherwise.\\n     */\\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\\n\\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\\n\\n    event ManagerChanged(address indexed account, address indexed newManager);\\n}\\n\",\"keccak256\":\"0x6e306f9ab28416a9e5931f0b6e264676e8ac68fad184f9a9d8bb125c6ec23bc3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"implementsERC165Interface(address,bytes4)":{"notice":"Checks whether a contract implements an ERC165 interface or not. If the result is not cached a direct lookup on the contract address is performed. If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling {updateERC165Cache} with the contract address."},"implementsERC165InterfaceNoCache(address,bytes4)":{"notice":"Checks whether a contract implements an ERC165 interface or not without using nor updating the cache."},"updateERC165Cache(address,bytes4)":{"notice":"Updates the cache with whether the contract implements an ERC165 interface or not."}},"version":1}}},"contracts/TestTokens/ERC777TestToken.sol":{"TestERC777":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"AuthorizedOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Burned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Minted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"tokenHolder","type":"address"}],"name":"RevokedOperator","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":false,"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"Sent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"_defaultOperators","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"authorizeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"defaultOperators","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"granularity","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"tokenHolder","type":"address"}],"name":"isOperatorFor","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"operatorBurn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"operatorData","type":"bytes"}],"name":"operatorSend","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"revokeOperator","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"send","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"holder","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."},"approve(address,uint256)":{"details":"See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators."},"authorizeOperator(address)":{"details":"See {IERC777-authorizeOperator}."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by an account (`tokenHolder`)."},"burn(uint256,bytes)":{"details":"See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."},"decimals()":{"details":"See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."},"defaultOperators()":{"details":"See {IERC777-defaultOperators}."},"granularity()":{"details":"See {IERC777-granularity}. This implementation always returns `1`."},"isOperatorFor(address,address)":{"details":"See {IERC777-isOperatorFor}."},"name()":{"details":"See {IERC777-name}."},"operatorBurn(address,uint256,bytes,bytes)":{"details":"See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."},"operatorSend(address,address,uint256,bytes,bytes)":{"details":"See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."},"revokeOperator(address)":{"details":"See {IERC777-revokeOperator}."},"send(address,uint256,bytes)":{"details":"See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."},"symbol()":{"details":"See {IERC777-symbol}."},"totalSupply()":{"details":"See {IERC777-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1844":{"entryPoint":null,"id":1844,"parameterSlots":0,"returnSlots":0},"@_224":{"entryPoint":null,"id":224,"parameterSlots":3,"returnSlots":0},"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"extract_byte_array_length":{"entryPoint":995,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":953,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x32":{"entryPoint":931,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1145:9","statements":[{"nodeType":"YulBlock","src":"6:3:9","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:9"},"nodeType":"YulFunctionCall","src":"66:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:9"},"nodeType":"YulFunctionCall","src":"56:31:9"},"nodeType":"YulExpressionStatement","src":"56:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:9","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:9"},"nodeType":"YulFunctionCall","src":"96:15:9"},"nodeType":"YulExpressionStatement","src":"96:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:9"},"nodeType":"YulFunctionCall","src":"120:15:9"},"nodeType":"YulExpressionStatement","src":"120:15:9"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"14:127:9"},{"body":{"nodeType":"YulBlock","src":"193:185:9","statements":[{"body":{"nodeType":"YulBlock","src":"232:111:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"253:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"260:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"265:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"256:3:9"},"nodeType":"YulFunctionCall","src":"256:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"246:6:9"},"nodeType":"YulFunctionCall","src":"246:31:9"},"nodeType":"YulExpressionStatement","src":"246:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"297:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"300:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"290:6:9"},"nodeType":"YulFunctionCall","src":"290:15:9"},"nodeType":"YulExpressionStatement","src":"290:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"325:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"328:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"318:6:9"},"nodeType":"YulFunctionCall","src":"318:15:9"},"nodeType":"YulExpressionStatement","src":"318:15:9"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"209:5:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"220:1:9","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"216:3:9"},"nodeType":"YulFunctionCall","src":"216:6:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"206:2:9"},"nodeType":"YulFunctionCall","src":"206:17:9"},"nodeType":"YulIf","src":"203:140:9"},{"nodeType":"YulAssignment","src":"352:20:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"363:5:9"},{"kind":"number","nodeType":"YulLiteral","src":"370:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"359:3:9"},"nodeType":"YulFunctionCall","src":"359:13:9"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"352:3:9"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"175:5:9","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"185:3:9","type":""}],"src":"146:232:9"},{"body":{"nodeType":"YulBlock","src":"540:218:9","statements":[{"nodeType":"YulAssignment","src":"550:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"562:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"573:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:9"},"nodeType":"YulFunctionCall","src":"558:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"550:4:9"}]},{"nodeType":"YulVariableDeclaration","src":"585:29:9","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"603:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"608:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"599:3:9"},"nodeType":"YulFunctionCall","src":"599:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"595:3:9"},"nodeType":"YulFunctionCall","src":"595:19:9"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"589:2:9","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"630:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"645:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"653:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"641:3:9"},"nodeType":"YulFunctionCall","src":"641:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"623:6:9"},"nodeType":"YulFunctionCall","src":"623:34:9"},"nodeType":"YulExpressionStatement","src":"623:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"677:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"688:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"673:3:9"},"nodeType":"YulFunctionCall","src":"673:18:9"},{"name":"value1","nodeType":"YulIdentifier","src":"693:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"666:6:9"},"nodeType":"YulFunctionCall","src":"666:34:9"},"nodeType":"YulExpressionStatement","src":"666:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"720:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"731:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"716:3:9"},"nodeType":"YulFunctionCall","src":"716:18:9"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"740:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"748:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"736:3:9"},"nodeType":"YulFunctionCall","src":"736:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"709:6:9"},"nodeType":"YulFunctionCall","src":"709:43:9"},"nodeType":"YulExpressionStatement","src":"709:43:9"}]},"name":"abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"493:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"504:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"512:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"520:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"531:4:9","type":""}],"src":"383:375:9"},{"body":{"nodeType":"YulBlock","src":"818:325:9","statements":[{"nodeType":"YulAssignment","src":"828:22:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"842:1:9","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"845:4:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"838:3:9"},"nodeType":"YulFunctionCall","src":"838:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"828:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"859:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"889:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"895:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"885:3:9"},"nodeType":"YulFunctionCall","src":"885:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"863:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"936:31:9","statements":[{"nodeType":"YulAssignment","src":"938:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"952:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"960:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"948:3:9"},"nodeType":"YulFunctionCall","src":"948:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"938:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"916:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"909:6:9"},"nodeType":"YulFunctionCall","src":"909:26:9"},"nodeType":"YulIf","src":"906:61:9"},{"body":{"nodeType":"YulBlock","src":"1026:111:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1047:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1054:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1059:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1050:3:9"},"nodeType":"YulFunctionCall","src":"1050:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1040:6:9"},"nodeType":"YulFunctionCall","src":"1040:31:9"},"nodeType":"YulExpressionStatement","src":"1040:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1091:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1094:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1084:6:9"},"nodeType":"YulFunctionCall","src":"1084:15:9"},"nodeType":"YulExpressionStatement","src":"1084:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1119:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1122:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1112:6:9"},"nodeType":"YulFunctionCall","src":"1112:15:9"},"nodeType":"YulExpressionStatement","src":"1112:15:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"982:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1005:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1013:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1002:2:9"},"nodeType":"YulFunctionCall","src":"1002:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"979:2:9"},"nodeType":"YulFunctionCall","src":"979:38:9"},"nodeType":"YulIf","src":"976:161:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"798:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"807:6:9","type":""}],"src":"763:380:9"}]},"contents":"{\n    { }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_address__to_t_address_t_bytes32_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}","id":9,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH3 0x1A SWAP1 PUSH1 0x9 SWAP1 PUSH1 0x1 PUSH3 0x2A5 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH9 0x2A32B9BA2A37B5B2B7 PUSH1 0xB9 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1514D5 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH1 0x9 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH3 0xBF JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH3 0xA0 JUMPI JUMPDEST POP POP DUP6 MLOAD PUSH3 0xD9 SWAP4 POP PUSH1 0x2 SWAP3 POP PUSH1 0x20 DUP8 ADD SWAP2 POP PUSH3 0x30F JUMP JUMPDEST POP DUP2 MLOAD PUSH3 0xEF SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x30F JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x105 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x2A5 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH3 0x175 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH3 0x12E JUMPI PUSH3 0x12E PUSH3 0x3A3 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 PUSH3 0x16C DUP2 PUSH3 0x3B9 JUMP JUMPDEST SWAP2 POP POP PUSH3 0x109 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xAC7FBAB5F54A3CA8194167523C6753BFEB96A445279294B6125B68CCE2177054 PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0x29965A1D SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x205 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xAEA199E31A596269B42CDAFD93407F14436DB6E4CAD65417994C2EB37381E05A PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP3 POP PUSH4 0x29965A1D SWAP2 POP PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH3 0x298 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP PUSH3 0x420 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x2FD JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2FD JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH3 0x2C6 JUMP JUMPDEST POP PUSH3 0x30B SWAP3 SWAP2 POP PUSH3 0x38C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x31D SWAP1 PUSH3 0x3E3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x341 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2FD JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x35C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2FD JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2FD JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2FD JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x36F JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x30B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x38D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH3 0x3DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x3F8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x41A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19C6 DUP1 PUSH3 0x430 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E7C99A GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78E7C99A EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH2 0x18B JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x782 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x165B JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x16ED JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0x176D JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A1 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D1 JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FD DUP2 DUP6 DUP6 PUSH2 0xA78 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x4CE DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x4FA DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH2 0x596 DUP7 DUP4 PUSH2 0x591 DUP8 DUP6 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x5C4 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xE2A JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5FA DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x608 CALLER DUP7 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH2 0x633 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x100C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x71A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x749 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x7AF CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x100C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x80D DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x839 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x3FD DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x8D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x8D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x902 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9C0 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x9EC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xA2F CALLER DUP6 PUSH2 0x867 JUMP JUMPDEST PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH2 0xA57 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5FA CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xC9A SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xD4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xD86 SWAP1 DUP5 SWAP1 PUSH2 0x1923 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1971 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH1 0x40 MLOAD PUSH2 0xE19 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xF23 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xFF4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x42F JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA57 DUP5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x10C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST CALLER PUSH2 0x10D2 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x10E0 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xCCD DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1150 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST CALLER PUSH2 0x1160 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1204 SWAP1 DUP5 SWAP1 PUSH2 0x1849 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1252 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1971 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x12E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x132C SWAP1 DUP5 SWAP1 PUSH2 0x1923 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1342 SWAP1 POP DUP2 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE2A JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2FE5BE0146F74C5BCE36C0B80911AF6C7D86FF27E89D5CFA61FC681327954E5D DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1389 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1971 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13FE JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13D9 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1430 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1414 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x902 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x147F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14A0 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x14CE DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x14DE DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1531 JUMPI PUSH2 0x1531 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1559 JUMPI PUSH2 0x1559 PUSH2 0x14EF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x15B5 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x15C5 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F5 DUP10 DUP4 DUP11 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x160B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1618 DUP9 DUP3 DUP10 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x902 DUP2 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x167B DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x169E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16AA DUP7 DUP3 DUP8 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16D2 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16E2 DUP2 PUSH2 0x146A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x170E DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173E DUP9 DUP4 DUP10 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1761 DUP8 DUP3 DUP9 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17AA DUP6 DUP3 DUP7 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x185B JUMPI PUSH2 0x185B PUSH2 0x1833 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x902 DUP2 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1904 SWAP1 DUP4 ADD DUP6 PUSH2 0x140A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1916 DUP2 DUP6 PUSH2 0x140A JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1936 PUSH2 0x1833 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1954 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x140A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1966 DUP2 DUP6 PUSH2 0x140A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF SWAP10 DUP15 0x22 DUP6 0xD SLT PUSH28 0xE9098F56AF88CC982F83A4E2CBDC33960E6FDB3E7A42BE5364736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"158:52:8:-:0;122:266;158:52;204:4;122:266;158:52;;;;;;;;;:::i;:::-;;216:63;;;;;;;;;;2301:612:1;;;;;;;;;;;;;-1:-1:-1;;;2301:612:1;;;;;;;;;;;;;;;;-1:-1:-1;;;2301:612:1;;;258:17:8;2301:612:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2301:612:1;;;;;;;;;;;;;;;;-1:-1:-1;;2433:13:1;;;;-1:-1:-1;2433:5:1;;-1:-1:-1;2433:13:1;;;;-1:-1:-1;2433:13:1;:::i;:::-;-1:-1:-1;2456:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2484:42:1;;;;:22;;:42;;;;;:::i;:::-;;2541:9;2536:126;2560:17;:24;2556:1;:28;2536:126;;;2647:4;2605:17;:39;2623:17;2641:1;2623:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2605:39:1;;;;;;;;;;;-1:-1:-1;2605:39:1;:46;;-1:-1:-1;;2605:46:1;;;;;;;;;;2586:3;;;;:::i;:::-;;;;2536:126;;;-1:-1:-1;2703:97:1;;-1:-1:-1;;;2703:97:1;;2753:4;2703:97;;;623:34:9;;;2760:24:1;673:18:9;;;666:34;716:18;;;709:43;1227:42:1;;2703:41;;558:18:9;;2703:97:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2810:96:1;;-1:-1:-1;;;2810:96:1;;2860:4;2810:96;;;623:34:9;;;2867:23:1;673:18:9;;;666:34;716:18;;;709:43;1227:42:1;;-1:-1:-1;2810:41:1;;-1:-1:-1;558:18:9;;2810:96:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:612;;;122:266:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;122:266:8;-1:-1:-1;;;;;122:266:8;;;;;;;;;;;-1:-1:-1;122:266:8;;;;;;;-1:-1:-1;122:266:8;;;-1:-1:-1;122:266:8;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:232;185:3;-1:-1:-1;;206:17:9;;203:140;;;265:10;260:3;256:20;253:1;246:31;300:4;297:1;290:15;328:4;325:1;318:15;203:140;-1:-1:-1;370:1:9;359:13;;146:232::o;763:380::-;842:1;838:12;;;;885;;;906:61;;960:4;952:6;948:17;938:27;;906:61;1013:2;1005:6;1002:14;982:18;979:38;976:161;;;1059:10;1054:3;1050:20;1047:1;1040:31;1094:4;1091:1;1084:15;1122:4;1119:1;1112:15;976:161;;763:380;;;:::o;:::-;122:266:8;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_1097":{"entryPoint":2680,"id":1097,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1213":{"entryPoint":null,"id":1213,"parameterSlots":4,"returnSlots":0},"@_burn_986":{"entryPoint":4335,"id":986,"parameterSlots":4,"returnSlots":0},"@_callTokensReceived_1200":{"entryPoint":3626,"id":1200,"parameterSlots":7,"returnSlots":0},"@_callTokensToSend_1142":{"entryPoint":2975,"id":1142,"parameterSlots":6,"returnSlots":0},"@_defaultOperators_1835":{"entryPoint":1594,"id":1835,"parameterSlots":0,"returnSlots":0},"@_mint_743":{"entryPoint":4094,"id":743,"parameterSlots":4,"returnSlots":0},"@_mint_823":{"entryPoint":4754,"id":823,"parameterSlots":5,"returnSlots":0},"@_move_1052":{"entryPoint":3286,"id":1052,"parameterSlots":6,"returnSlots":0},"@_msgSender_1722":{"entryPoint":null,"id":1722,"parameterSlots":0,"returnSlots":1},"@_send_893":{"entryPoint":4108,"id":893,"parameterSlots":6,"returnSlots":0},"@allowance_605":{"entryPoint":null,"id":605,"parameterSlots":2,"returnSlots":1},"@approve_630":{"entryPoint":1007,"id":630,"parameterSlots":2,"returnSlots":1},"@authorizeOperator_467":{"entryPoint":1636,"id":467,"parameterSlots":1,"returnSlots":0},"@balanceOf_291":{"entryPoint":null,"id":291,"parameterSlots":1,"returnSlots":1},"@burn_388":{"entryPoint":2653,"id":388,"parameterSlots":2,"returnSlots":0},"@decimals_253":{"entryPoint":null,"id":253,"parameterSlots":0,"returnSlots":1},"@defaultOperators_523":{"entryPoint":772,"id":523,"parameterSlots":0,"returnSlots":1},"@granularity_263":{"entryPoint":null,"id":263,"parameterSlots":0,"returnSlots":1},"@isContract_1433":{"entryPoint":null,"id":1433,"parameterSlots":1,"returnSlots":1},"@isOperatorFor_422":{"entryPoint":2151,"id":422,"parameterSlots":2,"returnSlots":1},"@mint_1859":{"entryPoint":1488,"id":1859,"parameterSlots":2,"returnSlots":0},"@name_234":{"entryPoint":870,"id":234,"parameterSlots":0,"returnSlots":1},"@operatorBurn_587":{"entryPoint":2597,"id":587,"parameterSlots":4,"returnSlots":0},"@operatorSend_557":{"entryPoint":1534,"id":557,"parameterSlots":5,"returnSlots":0},"@revokeOperator_512":{"entryPoint":2313,"id":512,"parameterSlots":1,"returnSlots":0},"@send_313":{"entryPoint":1937,"id":313,"parameterSlots":3,"returnSlots":0},"@symbol_244":{"entryPoint":1922,"id":244,"parameterSlots":0,"returnSlots":1},"@totalSupply_275":{"entryPoint":null,"id":275,"parameterSlots":0,"returnSlots":1},"@transferFrom_722":{"entryPoint":1031,"id":722,"parameterSlots":3,"returnSlots":1},"@transfer_370":{"entryPoint":1972,"id":370,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":5381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":5669,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":6316,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":5812,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5294,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":5522,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5250,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr":{"entryPoint":5723,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr":{"entryPoint":5869,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_uint256":{"entryPoint":5698,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_bytes_memory_ptr":{"entryPoint":5997,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_string":{"entryPoint":5130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6345,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":5053,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5207,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6127,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6240,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":6459,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":6435,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":6217,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6068,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6195,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5359,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":5226,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:15893:9","statements":[{"nodeType":"YulBlock","src":"6:3:9","statements":[]},{"body":{"nodeType":"YulBlock","src":"165:507:9","statements":[{"nodeType":"YulVariableDeclaration","src":"175:12:9","value":{"kind":"number","nodeType":"YulLiteral","src":"185:2:9","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"179:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"196:32:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"214:9:9"},{"name":"_1","nodeType":"YulIdentifier","src":"225:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"210:3:9"},"nodeType":"YulFunctionCall","src":"210:18:9"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"200:6:9","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"244:9:9"},{"name":"_1","nodeType":"YulIdentifier","src":"255:2:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"237:6:9"},"nodeType":"YulFunctionCall","src":"237:21:9"},"nodeType":"YulExpressionStatement","src":"237:21:9"},{"nodeType":"YulVariableDeclaration","src":"267:17:9","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"278:6:9"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"271:3:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"293:27:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"313:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"307:5:9"},"nodeType":"YulFunctionCall","src":"307:13:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"297:6:9","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"336:6:9"},{"name":"length","nodeType":"YulIdentifier","src":"344:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"329:6:9"},"nodeType":"YulFunctionCall","src":"329:22:9"},"nodeType":"YulExpressionStatement","src":"329:22:9"},{"nodeType":"YulAssignment","src":"360:25:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"371:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"382:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"367:3:9"},"nodeType":"YulFunctionCall","src":"367:18:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"360:3:9"}]},{"nodeType":"YulVariableDeclaration","src":"394:29:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"412:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"420:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"408:3:9"},"nodeType":"YulFunctionCall","src":"408:15:9"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"398:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"432:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"441:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"436:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"500:146:9","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"521:3:9"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"536:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"530:5:9"},"nodeType":"YulFunctionCall","src":"530:13:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"553:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"558:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"549:3:9"},"nodeType":"YulFunctionCall","src":"549:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"562:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"545:3:9"},"nodeType":"YulFunctionCall","src":"545:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"526:3:9"},"nodeType":"YulFunctionCall","src":"526:39:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"514:6:9"},"nodeType":"YulFunctionCall","src":"514:52:9"},"nodeType":"YulExpressionStatement","src":"514:52:9"},{"nodeType":"YulAssignment","src":"579:19:9","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"590:3:9"},{"name":"_1","nodeType":"YulIdentifier","src":"595:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"586:3:9"},"nodeType":"YulFunctionCall","src":"586:12:9"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"579:3:9"}]},{"nodeType":"YulAssignment","src":"611:25:9","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"625:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"633:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"621:3:9"},"nodeType":"YulFunctionCall","src":"621:15:9"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"611:6:9"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"462:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"465:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"459:2:9"},"nodeType":"YulFunctionCall","src":"459:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"473:18:9","statements":[{"nodeType":"YulAssignment","src":"475:14:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"484:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"487:1:9","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"480:3:9"},"nodeType":"YulFunctionCall","src":"480:9:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"475:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"455:3:9","statements":[]},"src":"451:195:9"},{"nodeType":"YulAssignment","src":"655:11:9","value":{"name":"pos","nodeType":"YulIdentifier","src":"663:3:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"655:4:9"}]}]},"name":"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"134:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"145:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"156:4:9","type":""}],"src":"14:658:9"},{"body":{"nodeType":"YulBlock","src":"727:422:9","statements":[{"nodeType":"YulVariableDeclaration","src":"737:26:9","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"757:5:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"751:5:9"},"nodeType":"YulFunctionCall","src":"751:12:9"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"741:6:9","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"779:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"784:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"772:6:9"},"nodeType":"YulFunctionCall","src":"772:19:9"},"nodeType":"YulExpressionStatement","src":"772:19:9"},{"nodeType":"YulVariableDeclaration","src":"800:10:9","value":{"kind":"number","nodeType":"YulLiteral","src":"809:1:9","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"804:1:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"871:110:9","statements":[{"nodeType":"YulVariableDeclaration","src":"885:14:9","value":{"kind":"number","nodeType":"YulLiteral","src":"895:4:9","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"889:2:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"927:3:9"},{"name":"i","nodeType":"YulIdentifier","src":"932:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"923:3:9"},"nodeType":"YulFunctionCall","src":"923:11:9"},{"name":"_1","nodeType":"YulIdentifier","src":"936:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:9"},"nodeType":"YulFunctionCall","src":"919:20:9"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"955:5:9"},{"name":"i","nodeType":"YulIdentifier","src":"962:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"951:3:9"},"nodeType":"YulFunctionCall","src":"951:13:9"},{"name":"_1","nodeType":"YulIdentifier","src":"966:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"947:3:9"},"nodeType":"YulFunctionCall","src":"947:22:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"941:5:9"},"nodeType":"YulFunctionCall","src":"941:29:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"912:6:9"},"nodeType":"YulFunctionCall","src":"912:59:9"},"nodeType":"YulExpressionStatement","src":"912:59:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"830:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"833:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"827:2:9"},"nodeType":"YulFunctionCall","src":"827:13:9"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"841:21:9","statements":[{"nodeType":"YulAssignment","src":"843:17:9","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"852:1:9"},{"kind":"number","nodeType":"YulLiteral","src":"855:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"848:3:9"},"nodeType":"YulFunctionCall","src":"848:12:9"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"843:1:9"}]}]},"pre":{"nodeType":"YulBlock","src":"823:3:9","statements":[]},"src":"819:162:9"},{"body":{"nodeType":"YulBlock","src":"1015:62:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1044:3:9"},{"name":"length","nodeType":"YulIdentifier","src":"1049:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:9"},"nodeType":"YulFunctionCall","src":"1040:16:9"},{"kind":"number","nodeType":"YulLiteral","src":"1058:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:9"},"nodeType":"YulFunctionCall","src":"1036:27:9"},{"kind":"number","nodeType":"YulLiteral","src":"1065:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1029:6:9"},"nodeType":"YulFunctionCall","src":"1029:38:9"},"nodeType":"YulExpressionStatement","src":"1029:38:9"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"996:1:9"},{"name":"length","nodeType":"YulIdentifier","src":"999:6:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"993:2:9"},"nodeType":"YulFunctionCall","src":"993:13:9"},"nodeType":"YulIf","src":"990:87:9"},{"nodeType":"YulAssignment","src":"1086:57:9","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1101:3:9"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1114:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"1122:2:9","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1110:3:9"},"nodeType":"YulFunctionCall","src":"1110:15:9"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1131:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1127:3:9"},"nodeType":"YulFunctionCall","src":"1127:7:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1106:3:9"},"nodeType":"YulFunctionCall","src":"1106:29:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1097:3:9"},"nodeType":"YulFunctionCall","src":"1097:39:9"},{"kind":"number","nodeType":"YulLiteral","src":"1138:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1093:3:9"},"nodeType":"YulFunctionCall","src":"1093:50:9"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1086:3:9"}]}]},"name":"abi_encode_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"704:5:9","type":""},{"name":"pos","nodeType":"YulTypedName","src":"711:3:9","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"719:3:9","type":""}],"src":"677:472:9"},{"body":{"nodeType":"YulBlock","src":"1275:99:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1292:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1303:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1285:6:9"},"nodeType":"YulFunctionCall","src":"1285:21:9"},"nodeType":"YulExpressionStatement","src":"1285:21:9"},{"nodeType":"YulAssignment","src":"1315:53:9","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1341:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1353:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1364:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1349:3:9"},"nodeType":"YulFunctionCall","src":"1349:18:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"1323:17:9"},"nodeType":"YulFunctionCall","src":"1323:45:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1315:4:9"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1244:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1255:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1266:4:9","type":""}],"src":"1154:220:9"},{"body":{"nodeType":"YulBlock","src":"1424:86:9","statements":[{"body":{"nodeType":"YulBlock","src":"1488:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1497:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1500:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1490:6:9"},"nodeType":"YulFunctionCall","src":"1490:12:9"},"nodeType":"YulExpressionStatement","src":"1490:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1447:5:9"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1458:5:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1473:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1478:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1469:3:9"},"nodeType":"YulFunctionCall","src":"1469:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"1482:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1465:3:9"},"nodeType":"YulFunctionCall","src":"1465:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1454:3:9"},"nodeType":"YulFunctionCall","src":"1454:31:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1444:2:9"},"nodeType":"YulFunctionCall","src":"1444:42:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1437:6:9"},"nodeType":"YulFunctionCall","src":"1437:50:9"},"nodeType":"YulIf","src":"1434:70:9"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1413:5:9","type":""}],"src":"1379:131:9"},{"body":{"nodeType":"YulBlock","src":"1602:228:9","statements":[{"body":{"nodeType":"YulBlock","src":"1648:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1657:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1660:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1650:6:9"},"nodeType":"YulFunctionCall","src":"1650:12:9"},"nodeType":"YulExpressionStatement","src":"1650:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1623:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"1632:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1619:3:9"},"nodeType":"YulFunctionCall","src":"1619:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"1644:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1615:3:9"},"nodeType":"YulFunctionCall","src":"1615:32:9"},"nodeType":"YulIf","src":"1612:52:9"},{"nodeType":"YulVariableDeclaration","src":"1673:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1699:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1686:12:9"},"nodeType":"YulFunctionCall","src":"1686:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1677:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1743:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1718:24:9"},"nodeType":"YulFunctionCall","src":"1718:31:9"},"nodeType":"YulExpressionStatement","src":"1718:31:9"},{"nodeType":"YulAssignment","src":"1758:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"1768:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1758:6:9"}]},{"nodeType":"YulAssignment","src":"1782:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1809:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1820:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1805:3:9"},"nodeType":"YulFunctionCall","src":"1805:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1792:12:9"},"nodeType":"YulFunctionCall","src":"1792:32:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1782:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1560:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1571:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1583:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1591:6:9","type":""}],"src":"1515:315:9"},{"body":{"nodeType":"YulBlock","src":"1930:92:9","statements":[{"nodeType":"YulAssignment","src":"1940:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1952:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"1963:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1948:3:9"},"nodeType":"YulFunctionCall","src":"1948:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1940:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1982:9:9"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2007:6:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2000:6:9"},"nodeType":"YulFunctionCall","src":"2000:14:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1993:6:9"},"nodeType":"YulFunctionCall","src":"1993:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1975:6:9"},"nodeType":"YulFunctionCall","src":"1975:41:9"},"nodeType":"YulExpressionStatement","src":"1975:41:9"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1899:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1910:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1921:4:9","type":""}],"src":"1835:187:9"},{"body":{"nodeType":"YulBlock","src":"2128:76:9","statements":[{"nodeType":"YulAssignment","src":"2138:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2150:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2161:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2146:3:9"},"nodeType":"YulFunctionCall","src":"2146:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2138:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2180:9:9"},{"name":"value0","nodeType":"YulIdentifier","src":"2191:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2173:6:9"},"nodeType":"YulFunctionCall","src":"2173:25:9"},"nodeType":"YulExpressionStatement","src":"2173:25:9"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2097:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2108:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2119:4:9","type":""}],"src":"2027:177:9"},{"body":{"nodeType":"YulBlock","src":"2313:352:9","statements":[{"body":{"nodeType":"YulBlock","src":"2359:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2368:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2371:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2361:6:9"},"nodeType":"YulFunctionCall","src":"2361:12:9"},"nodeType":"YulExpressionStatement","src":"2361:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2334:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"2343:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2330:3:9"},"nodeType":"YulFunctionCall","src":"2330:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"2355:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2326:3:9"},"nodeType":"YulFunctionCall","src":"2326:32:9"},"nodeType":"YulIf","src":"2323:52:9"},{"nodeType":"YulVariableDeclaration","src":"2384:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2410:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2397:12:9"},"nodeType":"YulFunctionCall","src":"2397:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2388:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2454:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2429:24:9"},"nodeType":"YulFunctionCall","src":"2429:31:9"},"nodeType":"YulExpressionStatement","src":"2429:31:9"},{"nodeType":"YulAssignment","src":"2469:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"2479:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2469:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"2493:47:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2525:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2536:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2521:3:9"},"nodeType":"YulFunctionCall","src":"2521:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2508:12:9"},"nodeType":"YulFunctionCall","src":"2508:32:9"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2497:7:9","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2574:7:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2549:24:9"},"nodeType":"YulFunctionCall","src":"2549:33:9"},"nodeType":"YulExpressionStatement","src":"2549:33:9"},{"nodeType":"YulAssignment","src":"2591:17:9","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2601:7:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2591:6:9"}]},{"nodeType":"YulAssignment","src":"2617:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2644:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2655:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2640:3:9"},"nodeType":"YulFunctionCall","src":"2640:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2627:12:9"},"nodeType":"YulFunctionCall","src":"2627:32:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2617:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2263:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2274:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2286:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2294:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2302:6:9","type":""}],"src":"2209:456:9"},{"body":{"nodeType":"YulBlock","src":"2767:87:9","statements":[{"nodeType":"YulAssignment","src":"2777:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"2800:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2785:3:9"},"nodeType":"YulFunctionCall","src":"2785:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2777:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2819:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2834:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"2842:4:9","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2830:3:9"},"nodeType":"YulFunctionCall","src":"2830:17:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2812:6:9"},"nodeType":"YulFunctionCall","src":"2812:36:9"},"nodeType":"YulExpressionStatement","src":"2812:36:9"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2736:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2747:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2758:4:9","type":""}],"src":"2670:184:9"},{"body":{"nodeType":"YulBlock","src":"2891:95:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2908:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2915:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2920:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2911:3:9"},"nodeType":"YulFunctionCall","src":"2911:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2901:6:9"},"nodeType":"YulFunctionCall","src":"2901:31:9"},"nodeType":"YulExpressionStatement","src":"2901:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2948:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2951:4:9","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2941:6:9"},"nodeType":"YulFunctionCall","src":"2941:15:9"},"nodeType":"YulExpressionStatement","src":"2941:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2972:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2975:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2965:6:9"},"nodeType":"YulFunctionCall","src":"2965:15:9"},"nodeType":"YulExpressionStatement","src":"2965:15:9"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2859:127:9"},{"body":{"nodeType":"YulBlock","src":"3043:666:9","statements":[{"body":{"nodeType":"YulBlock","src":"3092:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3101:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3104:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3094:6:9"},"nodeType":"YulFunctionCall","src":"3094:12:9"},"nodeType":"YulExpressionStatement","src":"3094:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3071:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3079:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3067:3:9"},"nodeType":"YulFunctionCall","src":"3067:17:9"},{"name":"end","nodeType":"YulIdentifier","src":"3086:3:9"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3063:3:9"},"nodeType":"YulFunctionCall","src":"3063:27:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3056:6:9"},"nodeType":"YulFunctionCall","src":"3056:35:9"},"nodeType":"YulIf","src":"3053:55:9"},{"nodeType":"YulVariableDeclaration","src":"3117:30:9","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3140:6:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3127:12:9"},"nodeType":"YulFunctionCall","src":"3127:20:9"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"3121:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3156:28:9","value":{"kind":"number","nodeType":"YulLiteral","src":"3166:18:9","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3160:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3207:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3209:16:9"},"nodeType":"YulFunctionCall","src":"3209:18:9"},"nodeType":"YulExpressionStatement","src":"3209:18:9"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3199:2:9"},{"name":"_2","nodeType":"YulIdentifier","src":"3203:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3196:2:9"},"nodeType":"YulFunctionCall","src":"3196:10:9"},"nodeType":"YulIf","src":"3193:36:9"},{"nodeType":"YulVariableDeclaration","src":"3238:17:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3252:2:9","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3248:3:9"},"nodeType":"YulFunctionCall","src":"3248:7:9"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"3242:2:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3264:23:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3284:2:9","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3278:5:9"},"nodeType":"YulFunctionCall","src":"3278:9:9"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3268:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3296:71:9","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3318:6:9"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"3342:2:9"},{"kind":"number","nodeType":"YulLiteral","src":"3346:4:9","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3338:3:9"},"nodeType":"YulFunctionCall","src":"3338:13:9"},{"name":"_3","nodeType":"YulIdentifier","src":"3353:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3334:3:9"},"nodeType":"YulFunctionCall","src":"3334:22:9"},{"kind":"number","nodeType":"YulLiteral","src":"3358:2:9","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3330:3:9"},"nodeType":"YulFunctionCall","src":"3330:31:9"},{"name":"_3","nodeType":"YulIdentifier","src":"3363:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3326:3:9"},"nodeType":"YulFunctionCall","src":"3326:40:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:9"},"nodeType":"YulFunctionCall","src":"3314:53:9"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3300:10:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"3426:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3428:16:9"},"nodeType":"YulFunctionCall","src":"3428:18:9"},"nodeType":"YulExpressionStatement","src":"3428:18:9"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3385:10:9"},{"name":"_2","nodeType":"YulIdentifier","src":"3397:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3382:2:9"},"nodeType":"YulFunctionCall","src":"3382:18:9"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3405:10:9"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3417:6:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3402:2:9"},"nodeType":"YulFunctionCall","src":"3402:22:9"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3379:2:9"},"nodeType":"YulFunctionCall","src":"3379:46:9"},"nodeType":"YulIf","src":"3376:72:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3464:2:9","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3468:10:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3457:6:9"},"nodeType":"YulFunctionCall","src":"3457:22:9"},"nodeType":"YulExpressionStatement","src":"3457:22:9"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3495:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3503:2:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3488:6:9"},"nodeType":"YulFunctionCall","src":"3488:18:9"},"nodeType":"YulExpressionStatement","src":"3488:18:9"},{"body":{"nodeType":"YulBlock","src":"3554:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3563:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3566:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3556:6:9"},"nodeType":"YulFunctionCall","src":"3556:12:9"},"nodeType":"YulExpressionStatement","src":"3556:12:9"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3529:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3537:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3525:3:9"},"nodeType":"YulFunctionCall","src":"3525:15:9"},{"kind":"number","nodeType":"YulLiteral","src":"3542:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3521:3:9"},"nodeType":"YulFunctionCall","src":"3521:26:9"},{"name":"end","nodeType":"YulIdentifier","src":"3549:3:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3518:2:9"},"nodeType":"YulFunctionCall","src":"3518:35:9"},"nodeType":"YulIf","src":"3515:55:9"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3596:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3604:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:9"},"nodeType":"YulFunctionCall","src":"3592:17:9"},{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3615:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"3623:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3611:3:9"},"nodeType":"YulFunctionCall","src":"3611:17:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3630:2:9"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"3579:12:9"},"nodeType":"YulFunctionCall","src":"3579:54:9"},"nodeType":"YulExpressionStatement","src":"3579:54:9"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3657:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"3665:2:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3653:3:9"},"nodeType":"YulFunctionCall","src":"3653:15:9"},{"kind":"number","nodeType":"YulLiteral","src":"3670:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3649:3:9"},"nodeType":"YulFunctionCall","src":"3649:26:9"},{"kind":"number","nodeType":"YulLiteral","src":"3677:1:9","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3642:6:9"},"nodeType":"YulFunctionCall","src":"3642:37:9"},"nodeType":"YulExpressionStatement","src":"3642:37:9"},{"nodeType":"YulAssignment","src":"3688:15:9","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"3697:6:9"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3688:5:9"}]}]},"name":"abi_decode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3017:6:9","type":""},{"name":"end","nodeType":"YulTypedName","src":"3025:3:9","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"3033:5:9","type":""}],"src":"2991:718:9"},{"body":{"nodeType":"YulBlock","src":"3870:729:9","statements":[{"body":{"nodeType":"YulBlock","src":"3917:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3926:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3929:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3919:6:9"},"nodeType":"YulFunctionCall","src":"3919:12:9"},"nodeType":"YulExpressionStatement","src":"3919:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3891:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"3900:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3887:3:9"},"nodeType":"YulFunctionCall","src":"3887:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"3912:3:9","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3883:3:9"},"nodeType":"YulFunctionCall","src":"3883:33:9"},"nodeType":"YulIf","src":"3880:53:9"},{"nodeType":"YulVariableDeclaration","src":"3942:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3968:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3955:12:9"},"nodeType":"YulFunctionCall","src":"3955:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3946:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4012:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3987:24:9"},"nodeType":"YulFunctionCall","src":"3987:31:9"},"nodeType":"YulExpressionStatement","src":"3987:31:9"},{"nodeType":"YulAssignment","src":"4027:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"4037:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4027:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"4051:47:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4083:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4079:3:9"},"nodeType":"YulFunctionCall","src":"4079:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4066:12:9"},"nodeType":"YulFunctionCall","src":"4066:32:9"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4055:7:9","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4132:7:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4107:24:9"},"nodeType":"YulFunctionCall","src":"4107:33:9"},"nodeType":"YulExpressionStatement","src":"4107:33:9"},{"nodeType":"YulAssignment","src":"4149:17:9","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4159:7:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4149:6:9"}]},{"nodeType":"YulAssignment","src":"4175:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4202:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4213:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4198:3:9"},"nodeType":"YulFunctionCall","src":"4198:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4185:12:9"},"nodeType":"YulFunctionCall","src":"4185:32:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4175:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"4226:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4257:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4268:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4253:3:9"},"nodeType":"YulFunctionCall","src":"4253:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4240:12:9"},"nodeType":"YulFunctionCall","src":"4240:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4230:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4281:28:9","value":{"kind":"number","nodeType":"YulLiteral","src":"4291:18:9","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4285:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"4336:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4345:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4348:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4338:6:9"},"nodeType":"YulFunctionCall","src":"4338:12:9"},"nodeType":"YulExpressionStatement","src":"4338:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4324:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"4332:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4321:2:9"},"nodeType":"YulFunctionCall","src":"4321:14:9"},"nodeType":"YulIf","src":"4318:34:9"},{"nodeType":"YulAssignment","src":"4361:59:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4392:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"4403:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4388:3:9"},"nodeType":"YulFunctionCall","src":"4388:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4412:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4371:16:9"},"nodeType":"YulFunctionCall","src":"4371:49:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4361:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"4429:49:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4462:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"4473:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4458:3:9"},"nodeType":"YulFunctionCall","src":"4458:19:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4445:12:9"},"nodeType":"YulFunctionCall","src":"4445:33:9"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"4433:8:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"4507:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4516:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4519:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4509:6:9"},"nodeType":"YulFunctionCall","src":"4509:12:9"},"nodeType":"YulExpressionStatement","src":"4509:12:9"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"4493:8:9"},{"name":"_1","nodeType":"YulIdentifier","src":"4503:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4490:2:9"},"nodeType":"YulFunctionCall","src":"4490:16:9"},"nodeType":"YulIf","src":"4487:36:9"},{"nodeType":"YulAssignment","src":"4532:61:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4563:9:9"},{"name":"offset_1","nodeType":"YulIdentifier","src":"4574:8:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4559:3:9"},"nodeType":"YulFunctionCall","src":"4559:24:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4585:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"4542:16:9"},"nodeType":"YulFunctionCall","src":"4542:51:9"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4532:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3804:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3815:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3827:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3835:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3843:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"3851:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"3859:6:9","type":""}],"src":"3714:885:9"},{"body":{"nodeType":"YulBlock","src":"4674:177:9","statements":[{"body":{"nodeType":"YulBlock","src":"4720:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4729:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4732:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4722:6:9"},"nodeType":"YulFunctionCall","src":"4722:12:9"},"nodeType":"YulExpressionStatement","src":"4722:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4695:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4704:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4691:3:9"},"nodeType":"YulFunctionCall","src":"4691:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4716:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4687:3:9"},"nodeType":"YulFunctionCall","src":"4687:32:9"},"nodeType":"YulIf","src":"4684:52:9"},{"nodeType":"YulVariableDeclaration","src":"4745:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4771:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4758:12:9"},"nodeType":"YulFunctionCall","src":"4758:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4749:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4815:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4790:24:9"},"nodeType":"YulFunctionCall","src":"4790:31:9"},"nodeType":"YulExpressionStatement","src":"4790:31:9"},{"nodeType":"YulAssignment","src":"4830:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"4840:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4830:6:9"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4640:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4651:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4663:6:9","type":""}],"src":"4604:247:9"},{"body":{"nodeType":"YulBlock","src":"4926:110:9","statements":[{"body":{"nodeType":"YulBlock","src":"4972:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4981:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4984:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4974:6:9"},"nodeType":"YulFunctionCall","src":"4974:12:9"},"nodeType":"YulExpressionStatement","src":"4974:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4947:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"4956:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4943:3:9"},"nodeType":"YulFunctionCall","src":"4943:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"4968:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4939:3:9"},"nodeType":"YulFunctionCall","src":"4939:32:9"},"nodeType":"YulIf","src":"4936:52:9"},{"nodeType":"YulAssignment","src":"4997:33:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5007:12:9"},"nodeType":"YulFunctionCall","src":"5007:23:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4997:6:9"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4892:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4903:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4915:6:9","type":""}],"src":"4856:180:9"},{"body":{"nodeType":"YulBlock","src":"5142:102:9","statements":[{"nodeType":"YulAssignment","src":"5152:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5164:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5175:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5160:3:9"},"nodeType":"YulFunctionCall","src":"5160:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5152:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5194:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5209:6:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5225:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5230:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5221:3:9"},"nodeType":"YulFunctionCall","src":"5221:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"5234:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5217:3:9"},"nodeType":"YulFunctionCall","src":"5217:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5205:3:9"},"nodeType":"YulFunctionCall","src":"5205:32:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5187:6:9"},"nodeType":"YulFunctionCall","src":"5187:51:9"},"nodeType":"YulExpressionStatement","src":"5187:51:9"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5111:9:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5122:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5133:4:9","type":""}],"src":"5041:203:9"},{"body":{"nodeType":"YulBlock","src":"5362:410:9","statements":[{"body":{"nodeType":"YulBlock","src":"5408:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5417:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5420:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5410:6:9"},"nodeType":"YulFunctionCall","src":"5410:12:9"},"nodeType":"YulExpressionStatement","src":"5410:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5383:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5392:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5379:3:9"},"nodeType":"YulFunctionCall","src":"5379:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5404:2:9","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5375:3:9"},"nodeType":"YulFunctionCall","src":"5375:32:9"},"nodeType":"YulIf","src":"5372:52:9"},{"nodeType":"YulVariableDeclaration","src":"5433:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5459:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5446:12:9"},"nodeType":"YulFunctionCall","src":"5446:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5437:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5503:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5478:24:9"},"nodeType":"YulFunctionCall","src":"5478:31:9"},"nodeType":"YulExpressionStatement","src":"5478:31:9"},{"nodeType":"YulAssignment","src":"5518:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"5528:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5518:6:9"}]},{"nodeType":"YulAssignment","src":"5542:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5569:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5580:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5565:3:9"},"nodeType":"YulFunctionCall","src":"5565:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5552:12:9"},"nodeType":"YulFunctionCall","src":"5552:32:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5542:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"5593:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5624:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"5635:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5620:3:9"},"nodeType":"YulFunctionCall","src":"5620:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5607:12:9"},"nodeType":"YulFunctionCall","src":"5607:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5597:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"5682:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5691:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5694:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5684:6:9"},"nodeType":"YulFunctionCall","src":"5684:12:9"},"nodeType":"YulExpressionStatement","src":"5684:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5654:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"5662:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5651:2:9"},"nodeType":"YulFunctionCall","src":"5651:30:9"},"nodeType":"YulIf","src":"5648:50:9"},{"nodeType":"YulAssignment","src":"5707:59:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5738:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"5749:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5734:3:9"},"nodeType":"YulFunctionCall","src":"5734:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5758:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"5717:16:9"},"nodeType":"YulFunctionCall","src":"5717:49:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5707:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5312:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5323:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5335:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5343:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5351:6:9","type":""}],"src":"5249:523:9"},{"body":{"nodeType":"YulBlock","src":"5864:301:9","statements":[{"body":{"nodeType":"YulBlock","src":"5910:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5919:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5922:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5912:6:9"},"nodeType":"YulFunctionCall","src":"5912:12:9"},"nodeType":"YulExpressionStatement","src":"5912:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5885:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"5894:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5881:3:9"},"nodeType":"YulFunctionCall","src":"5881:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"5906:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5877:3:9"},"nodeType":"YulFunctionCall","src":"5877:32:9"},"nodeType":"YulIf","src":"5874:52:9"},{"nodeType":"YulVariableDeclaration","src":"5935:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5961:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5948:12:9"},"nodeType":"YulFunctionCall","src":"5948:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5939:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6005:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5980:24:9"},"nodeType":"YulFunctionCall","src":"5980:31:9"},"nodeType":"YulExpressionStatement","src":"5980:31:9"},{"nodeType":"YulAssignment","src":"6020:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"6030:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6020:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"6044:47:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6076:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6087:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6072:3:9"},"nodeType":"YulFunctionCall","src":"6072:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6059:12:9"},"nodeType":"YulFunctionCall","src":"6059:32:9"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"6048:7:9","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"6125:7:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6100:24:9"},"nodeType":"YulFunctionCall","src":"6100:33:9"},"nodeType":"YulExpressionStatement","src":"6100:33:9"},{"nodeType":"YulAssignment","src":"6142:17:9","value":{"name":"value_1","nodeType":"YulIdentifier","src":"6152:7:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6142:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5822:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5833:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5845:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5853:6:9","type":""}],"src":"5777:388:9"},{"body":{"nodeType":"YulBlock","src":"6309:604:9","statements":[{"body":{"nodeType":"YulBlock","src":"6356:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6365:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6368:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6358:6:9"},"nodeType":"YulFunctionCall","src":"6358:12:9"},"nodeType":"YulExpressionStatement","src":"6358:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6330:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"6339:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6326:3:9"},"nodeType":"YulFunctionCall","src":"6326:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"6351:3:9","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6322:3:9"},"nodeType":"YulFunctionCall","src":"6322:33:9"},"nodeType":"YulIf","src":"6319:53:9"},{"nodeType":"YulVariableDeclaration","src":"6381:36:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6407:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6394:12:9"},"nodeType":"YulFunctionCall","src":"6394:23:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"6385:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6451:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"6426:24:9"},"nodeType":"YulFunctionCall","src":"6426:31:9"},"nodeType":"YulExpressionStatement","src":"6426:31:9"},{"nodeType":"YulAssignment","src":"6466:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"6476:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6466:6:9"}]},{"nodeType":"YulAssignment","src":"6490:42:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6517:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6528:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6513:3:9"},"nodeType":"YulFunctionCall","src":"6513:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6500:12:9"},"nodeType":"YulFunctionCall","src":"6500:32:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6490:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"6541:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6572:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6583:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6568:3:9"},"nodeType":"YulFunctionCall","src":"6568:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6555:12:9"},"nodeType":"YulFunctionCall","src":"6555:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6545:6:9","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6596:28:9","value":{"kind":"number","nodeType":"YulLiteral","src":"6606:18:9","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6600:2:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6651:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6660:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6663:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6653:6:9"},"nodeType":"YulFunctionCall","src":"6653:12:9"},"nodeType":"YulExpressionStatement","src":"6653:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6639:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"6647:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6636:2:9"},"nodeType":"YulFunctionCall","src":"6636:14:9"},"nodeType":"YulIf","src":"6633:34:9"},{"nodeType":"YulAssignment","src":"6676:59:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6707:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"6718:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6703:3:9"},"nodeType":"YulFunctionCall","src":"6703:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6727:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6686:16:9"},"nodeType":"YulFunctionCall","src":"6686:49:9"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6676:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"6744:48:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6777:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"6788:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6773:3:9"},"nodeType":"YulFunctionCall","src":"6773:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6760:12:9"},"nodeType":"YulFunctionCall","src":"6760:32:9"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"6748:8:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"6821:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6830:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6833:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6823:6:9"},"nodeType":"YulFunctionCall","src":"6823:12:9"},"nodeType":"YulExpressionStatement","src":"6823:12:9"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"6807:8:9"},{"name":"_1","nodeType":"YulIdentifier","src":"6817:2:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6804:2:9"},"nodeType":"YulFunctionCall","src":"6804:16:9"},"nodeType":"YulIf","src":"6801:36:9"},{"nodeType":"YulAssignment","src":"6846:61:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6877:9:9"},{"name":"offset_1","nodeType":"YulIdentifier","src":"6888:8:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6873:3:9"},"nodeType":"YulFunctionCall","src":"6873:24:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6899:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"6856:16:9"},"nodeType":"YulFunctionCall","src":"6856:51:9"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6846:6:9"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6251:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6262:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6274:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6282:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6290:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6298:6:9","type":""}],"src":"6170:743:9"},{"body":{"nodeType":"YulBlock","src":"7014:292:9","statements":[{"body":{"nodeType":"YulBlock","src":"7060:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7069:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7072:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7062:6:9"},"nodeType":"YulFunctionCall","src":"7062:12:9"},"nodeType":"YulExpressionStatement","src":"7062:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7035:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"7044:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7031:3:9"},"nodeType":"YulFunctionCall","src":"7031:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"7056:2:9","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7027:3:9"},"nodeType":"YulFunctionCall","src":"7027:32:9"},"nodeType":"YulIf","src":"7024:52:9"},{"nodeType":"YulAssignment","src":"7085:33:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7108:9:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7095:12:9"},"nodeType":"YulFunctionCall","src":"7095:23:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7085:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"7127:46:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7158:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7169:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7154:3:9"},"nodeType":"YulFunctionCall","src":"7154:18:9"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7141:12:9"},"nodeType":"YulFunctionCall","src":"7141:32:9"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7131:6:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"7216:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7225:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7228:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7218:6:9"},"nodeType":"YulFunctionCall","src":"7218:12:9"},"nodeType":"YulExpressionStatement","src":"7218:12:9"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7188:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7196:18:9","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7185:2:9"},"nodeType":"YulFunctionCall","src":"7185:30:9"},"nodeType":"YulIf","src":"7182:50:9"},{"nodeType":"YulAssignment","src":"7241:59:9","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7272:9:9"},{"name":"offset","nodeType":"YulIdentifier","src":"7283:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7268:3:9"},"nodeType":"YulFunctionCall","src":"7268:22:9"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7292:7:9"}],"functionName":{"name":"abi_decode_bytes","nodeType":"YulIdentifier","src":"7251:16:9"},"nodeType":"YulFunctionCall","src":"7251:49:9"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7241:6:9"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6972:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6983:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6995:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7003:6:9","type":""}],"src":"6918:388:9"},{"body":{"nodeType":"YulBlock","src":"7366:325:9","statements":[{"nodeType":"YulAssignment","src":"7376:22:9","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7390:1:9","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"7393:4:9"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7386:3:9"},"nodeType":"YulFunctionCall","src":"7386:12:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7376:6:9"}]},{"nodeType":"YulVariableDeclaration","src":"7407:38:9","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7437:4:9"},{"kind":"number","nodeType":"YulLiteral","src":"7443:1:9","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7433:3:9"},"nodeType":"YulFunctionCall","src":"7433:12:9"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7411:18:9","type":""}]},{"body":{"nodeType":"YulBlock","src":"7484:31:9","statements":[{"nodeType":"YulAssignment","src":"7486:27:9","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7500:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7508:4:9","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7496:3:9"},"nodeType":"YulFunctionCall","src":"7496:17:9"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7486:6:9"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7464:18:9"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7457:6:9"},"nodeType":"YulFunctionCall","src":"7457:26:9"},"nodeType":"YulIf","src":"7454:61:9"},{"body":{"nodeType":"YulBlock","src":"7574:111:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7595:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7602:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7607:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7598:3:9"},"nodeType":"YulFunctionCall","src":"7598:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7588:6:9"},"nodeType":"YulFunctionCall","src":"7588:31:9"},"nodeType":"YulExpressionStatement","src":"7588:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7639:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7642:4:9","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7632:6:9"},"nodeType":"YulFunctionCall","src":"7632:15:9"},"nodeType":"YulExpressionStatement","src":"7632:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7667:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7670:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7660:6:9"},"nodeType":"YulFunctionCall","src":"7660:15:9"},"nodeType":"YulExpressionStatement","src":"7660:15:9"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7530:18:9"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7553:6:9"},{"kind":"number","nodeType":"YulLiteral","src":"7561:2:9","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7550:2:9"},"nodeType":"YulFunctionCall","src":"7550:14:9"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7527:2:9"},"nodeType":"YulFunctionCall","src":"7527:38:9"},"nodeType":"YulIf","src":"7524:161:9"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7346:4:9","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7355:6:9","type":""}],"src":"7311:380:9"},{"body":{"nodeType":"YulBlock","src":"7870:226:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7887:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7898:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7880:6:9"},"nodeType":"YulFunctionCall","src":"7880:21:9"},"nodeType":"YulExpressionStatement","src":"7880:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7921:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7932:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7917:3:9"},"nodeType":"YulFunctionCall","src":"7917:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"7937:2:9","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7910:6:9"},"nodeType":"YulFunctionCall","src":"7910:30:9"},"nodeType":"YulExpressionStatement","src":"7910:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7960:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"7971:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7956:3:9"},"nodeType":"YulFunctionCall","src":"7956:18:9"},{"hexValue":"4552433737373a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7976:34:9","type":"","value":"ERC777: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7949:6:9"},"nodeType":"YulFunctionCall","src":"7949:62:9"},"nodeType":"YulExpressionStatement","src":"7949:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8031:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8042:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:9"},"nodeType":"YulFunctionCall","src":"8027:18:9"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"8047:6:9","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8020:6:9"},"nodeType":"YulFunctionCall","src":"8020:34:9"},"nodeType":"YulExpressionStatement","src":"8020:34:9"},{"nodeType":"YulAssignment","src":"8063:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8075:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8086:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8071:3:9"},"nodeType":"YulFunctionCall","src":"8071:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8063:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7847:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7861:4:9","type":""}],"src":"7696:400:9"},{"body":{"nodeType":"YulBlock","src":"8275:228:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8292:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8303:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8285:6:9"},"nodeType":"YulFunctionCall","src":"8285:21:9"},"nodeType":"YulExpressionStatement","src":"8285:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8326:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8337:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8322:3:9"},"nodeType":"YulFunctionCall","src":"8322:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"8342:2:9","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8315:6:9"},"nodeType":"YulFunctionCall","src":"8315:30:9"},"nodeType":"YulExpressionStatement","src":"8315:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8365:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8376:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8361:3:9"},"nodeType":"YulFunctionCall","src":"8361:18:9"},{"hexValue":"4552433737373a207472616e736665722066726f6d20746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8381:34:9","type":"","value":"ERC777: transfer from the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8354:6:9"},"nodeType":"YulFunctionCall","src":"8354:62:9"},"nodeType":"YulExpressionStatement","src":"8354:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8436:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8447:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8432:3:9"},"nodeType":"YulFunctionCall","src":"8432:18:9"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8452:8:9","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8425:6:9"},"nodeType":"YulFunctionCall","src":"8425:36:9"},"nodeType":"YulExpressionStatement","src":"8425:36:9"},{"nodeType":"YulAssignment","src":"8470:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8482:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8493:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8478:3:9"},"nodeType":"YulFunctionCall","src":"8478:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8470:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8252:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8266:4:9","type":""}],"src":"8101:402:9"},{"body":{"nodeType":"YulBlock","src":"8682:231:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8699:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8710:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8692:6:9"},"nodeType":"YulFunctionCall","src":"8692:21:9"},"nodeType":"YulExpressionStatement","src":"8692:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8733:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8744:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8729:3:9"},"nodeType":"YulFunctionCall","src":"8729:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"8749:2:9","type":"","value":"41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8722:6:9"},"nodeType":"YulFunctionCall","src":"8722:30:9"},"nodeType":"YulExpressionStatement","src":"8722:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8772:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8783:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8768:3:9"},"nodeType":"YulFunctionCall","src":"8768:18:9"},{"hexValue":"4552433737373a207472616e7366657220616d6f756e74206578636565647320","kind":"string","nodeType":"YulLiteral","src":"8788:34:9","type":"","value":"ERC777: transfer amount exceeds "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8761:6:9"},"nodeType":"YulFunctionCall","src":"8761:62:9"},"nodeType":"YulExpressionStatement","src":"8761:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8843:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8854:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8839:3:9"},"nodeType":"YulFunctionCall","src":"8839:18:9"},{"hexValue":"616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"8859:11:9","type":"","value":"allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8832:6:9"},"nodeType":"YulFunctionCall","src":"8832:39:9"},"nodeType":"YulExpressionStatement","src":"8832:39:9"},{"nodeType":"YulAssignment","src":"8880:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8892:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"8903:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8888:3:9"},"nodeType":"YulFunctionCall","src":"8888:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8880:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8659:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8673:4:9","type":""}],"src":"8508:405:9"},{"body":{"nodeType":"YulBlock","src":"8950:95:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8967:1:9","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8974:3:9","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"8979:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8970:3:9"},"nodeType":"YulFunctionCall","src":"8970:20:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8960:6:9"},"nodeType":"YulFunctionCall","src":"8960:31:9"},"nodeType":"YulExpressionStatement","src":"8960:31:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9007:1:9","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9010:4:9","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9000:6:9"},"nodeType":"YulFunctionCall","src":"9000:15:9"},"nodeType":"YulExpressionStatement","src":"9000:15:9"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9031:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9034:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9024:6:9"},"nodeType":"YulFunctionCall","src":"9024:15:9"},"nodeType":"YulExpressionStatement","src":"9024:15:9"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"8918:127:9"},{"body":{"nodeType":"YulBlock","src":"9099:76:9","statements":[{"body":{"nodeType":"YulBlock","src":"9121:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9123:16:9"},"nodeType":"YulFunctionCall","src":"9123:18:9"},"nodeType":"YulExpressionStatement","src":"9123:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9115:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"9118:1:9"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9112:2:9"},"nodeType":"YulFunctionCall","src":"9112:8:9"},"nodeType":"YulIf","src":"9109:34:9"},{"nodeType":"YulAssignment","src":"9152:17:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"9164:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"9167:1:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9160:3:9"},"nodeType":"YulFunctionCall","src":"9160:9:9"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"9152:4:9"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"9081:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"9084:1:9","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"9090:4:9","type":""}],"src":"9050:125:9"},{"body":{"nodeType":"YulBlock","src":"9354:234:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9371:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9382:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9364:6:9"},"nodeType":"YulFunctionCall","src":"9364:21:9"},"nodeType":"YulExpressionStatement","src":"9364:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9405:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9416:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9401:3:9"},"nodeType":"YulFunctionCall","src":"9401:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"9421:2:9","type":"","value":"44"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9394:6:9"},"nodeType":"YulFunctionCall","src":"9394:30:9"},"nodeType":"YulExpressionStatement","src":"9394:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9444:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9455:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9440:3:9"},"nodeType":"YulFunctionCall","src":"9440:18:9"},{"hexValue":"4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f","kind":"string","nodeType":"YulLiteral","src":"9460:34:9","type":"","value":"ERC777: caller is not an operato"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9433:6:9"},"nodeType":"YulFunctionCall","src":"9433:62:9"},"nodeType":"YulExpressionStatement","src":"9433:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9526:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:9"},"nodeType":"YulFunctionCall","src":"9511:18:9"},{"hexValue":"7220666f7220686f6c646572","kind":"string","nodeType":"YulLiteral","src":"9531:14:9","type":"","value":"r for holder"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9504:6:9"},"nodeType":"YulFunctionCall","src":"9504:42:9"},"nodeType":"YulExpressionStatement","src":"9504:42:9"},{"nodeType":"YulAssignment","src":"9555:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9567:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9578:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9563:3:9"},"nodeType":"YulFunctionCall","src":"9563:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9555:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9331:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9345:4:9","type":""}],"src":"9180:408:9"},{"body":{"nodeType":"YulBlock","src":"9767:226:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9784:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9795:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9777:6:9"},"nodeType":"YulFunctionCall","src":"9777:21:9"},"nodeType":"YulExpressionStatement","src":"9777:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9818:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9829:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9814:3:9"},"nodeType":"YulFunctionCall","src":"9814:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"9834:2:9","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9807:6:9"},"nodeType":"YulFunctionCall","src":"9807:30:9"},"nodeType":"YulExpressionStatement","src":"9807:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9857:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9868:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9853:3:9"},"nodeType":"YulFunctionCall","src":"9853:18:9"},{"hexValue":"4552433737373a20617574686f72697a696e672073656c66206173206f706572","kind":"string","nodeType":"YulLiteral","src":"9873:34:9","type":"","value":"ERC777: authorizing self as oper"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9846:6:9"},"nodeType":"YulFunctionCall","src":"9846:62:9"},"nodeType":"YulExpressionStatement","src":"9846:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9928:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9939:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9924:3:9"},"nodeType":"YulFunctionCall","src":"9924:18:9"},{"hexValue":"61746f72","kind":"string","nodeType":"YulLiteral","src":"9944:6:9","type":"","value":"ator"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9917:6:9"},"nodeType":"YulFunctionCall","src":"9917:34:9"},"nodeType":"YulExpressionStatement","src":"9917:34:9"},{"nodeType":"YulAssignment","src":"9960:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9972:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"9983:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:9"},"nodeType":"YulFunctionCall","src":"9968:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9960:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9744:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9758:4:9","type":""}],"src":"9593:400:9"},{"body":{"nodeType":"YulBlock","src":"10172:223:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10189:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10200:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10182:6:9"},"nodeType":"YulFunctionCall","src":"10182:21:9"},"nodeType":"YulExpressionStatement","src":"10182:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10223:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10234:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10219:3:9"},"nodeType":"YulFunctionCall","src":"10219:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"10239:2:9","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10212:6:9"},"nodeType":"YulFunctionCall","src":"10212:30:9"},"nodeType":"YulExpressionStatement","src":"10212:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10262:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10273:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10258:3:9"},"nodeType":"YulFunctionCall","src":"10258:18:9"},{"hexValue":"4552433737373a207265766f6b696e672073656c66206173206f70657261746f","kind":"string","nodeType":"YulLiteral","src":"10278:34:9","type":"","value":"ERC777: revoking self as operato"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10251:6:9"},"nodeType":"YulFunctionCall","src":"10251:62:9"},"nodeType":"YulExpressionStatement","src":"10251:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10333:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10329:3:9"},"nodeType":"YulFunctionCall","src":"10329:18:9"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"10349:3:9","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10322:6:9"},"nodeType":"YulFunctionCall","src":"10322:31:9"},"nodeType":"YulExpressionStatement","src":"10322:31:9"},{"nodeType":"YulAssignment","src":"10362:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10374:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10385:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10370:3:9"},"nodeType":"YulFunctionCall","src":"10370:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10362:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10149:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10163:4:9","type":""}],"src":"9998:397:9"},{"body":{"nodeType":"YulBlock","src":"10574:227:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10591:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10602:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10584:6:9"},"nodeType":"YulFunctionCall","src":"10584:21:9"},"nodeType":"YulExpressionStatement","src":"10584:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10625:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10636:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:9"},"nodeType":"YulFunctionCall","src":"10621:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"10641:2:9","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10614:6:9"},"nodeType":"YulFunctionCall","src":"10614:30:9"},"nodeType":"YulExpressionStatement","src":"10614:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10664:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10675:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10660:3:9"},"nodeType":"YulFunctionCall","src":"10660:18:9"},{"hexValue":"4552433737373a20617070726f76652066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10680:34:9","type":"","value":"ERC777: approve from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10653:6:9"},"nodeType":"YulFunctionCall","src":"10653:62:9"},"nodeType":"YulExpressionStatement","src":"10653:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10735:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10746:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10731:3:9"},"nodeType":"YulFunctionCall","src":"10731:18:9"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10751:7:9","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10724:6:9"},"nodeType":"YulFunctionCall","src":"10724:35:9"},"nodeType":"YulExpressionStatement","src":"10724:35:9"},{"nodeType":"YulAssignment","src":"10768:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10780:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"10791:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10776:3:9"},"nodeType":"YulFunctionCall","src":"10776:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10768:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10551:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10565:4:9","type":""}],"src":"10400:401:9"},{"body":{"nodeType":"YulBlock","src":"10980:225:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10997:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11008:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10990:6:9"},"nodeType":"YulFunctionCall","src":"10990:21:9"},"nodeType":"YulExpressionStatement","src":"10990:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11031:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11042:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11027:3:9"},"nodeType":"YulFunctionCall","src":"11027:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"11047:2:9","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11020:6:9"},"nodeType":"YulFunctionCall","src":"11020:30:9"},"nodeType":"YulExpressionStatement","src":"11020:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11070:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11081:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11066:3:9"},"nodeType":"YulFunctionCall","src":"11066:18:9"},{"hexValue":"4552433737373a20617070726f766520746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11086:34:9","type":"","value":"ERC777: approve to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11059:6:9"},"nodeType":"YulFunctionCall","src":"11059:62:9"},"nodeType":"YulExpressionStatement","src":"11059:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11141:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11152:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11137:3:9"},"nodeType":"YulFunctionCall","src":"11137:18:9"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"11157:5:9","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11130:6:9"},"nodeType":"YulFunctionCall","src":"11130:33:9"},"nodeType":"YulExpressionStatement","src":"11130:33:9"},{"nodeType":"YulAssignment","src":"11172:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11184:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11195:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11180:3:9"},"nodeType":"YulFunctionCall","src":"11180:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11172:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10957:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10971:4:9","type":""}],"src":"10806:399:9"},{"body":{"nodeType":"YulBlock","src":"11339:145:9","statements":[{"nodeType":"YulAssignment","src":"11349:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11361:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11372:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11357:3:9"},"nodeType":"YulFunctionCall","src":"11357:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11349:4:9"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11391:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11406:6:9"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11422:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"11427:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"11418:3:9"},"nodeType":"YulFunctionCall","src":"11418:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"11431:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11414:3:9"},"nodeType":"YulFunctionCall","src":"11414:19:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11402:3:9"},"nodeType":"YulFunctionCall","src":"11402:32:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11384:6:9"},"nodeType":"YulFunctionCall","src":"11384:51:9"},"nodeType":"YulExpressionStatement","src":"11384:51:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11455:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"11466:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11451:3:9"},"nodeType":"YulFunctionCall","src":"11451:18:9"},{"name":"value1","nodeType":"YulIdentifier","src":"11471:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11444:6:9"},"nodeType":"YulFunctionCall","src":"11444:34:9"},"nodeType":"YulExpressionStatement","src":"11444:34:9"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11300:9:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11311:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11319:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11330:4:9","type":""}],"src":"11210:274:9"},{"body":{"nodeType":"YulBlock","src":"11570:170:9","statements":[{"body":{"nodeType":"YulBlock","src":"11616:16:9","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11625:1:9","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11628:1:9","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11618:6:9"},"nodeType":"YulFunctionCall","src":"11618:12:9"},"nodeType":"YulExpressionStatement","src":"11618:12:9"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11591:7:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"11600:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11587:3:9"},"nodeType":"YulFunctionCall","src":"11587:23:9"},{"kind":"number","nodeType":"YulLiteral","src":"11612:2:9","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11583:3:9"},"nodeType":"YulFunctionCall","src":"11583:32:9"},"nodeType":"YulIf","src":"11580:52:9"},{"nodeType":"YulVariableDeclaration","src":"11641:29:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11660:9:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11654:5:9"},"nodeType":"YulFunctionCall","src":"11654:16:9"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"11645:5:9","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11704:5:9"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"11679:24:9"},"nodeType":"YulFunctionCall","src":"11679:31:9"},"nodeType":"YulExpressionStatement","src":"11679:31:9"},{"nodeType":"YulAssignment","src":"11719:15:9","value":{"name":"value","nodeType":"YulIdentifier","src":"11729:5:9"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11719:6:9"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11536:9:9","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11547:7:9","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11559:6:9","type":""}],"src":"11489:251:9"},{"body":{"nodeType":"YulBlock","src":"12022:455:9","statements":[{"nodeType":"YulVariableDeclaration","src":"12032:29:9","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12050:3:9","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"12055:1:9","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"12046:3:9"},"nodeType":"YulFunctionCall","src":"12046:11:9"},{"kind":"number","nodeType":"YulLiteral","src":"12059:1:9","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12042:3:9"},"nodeType":"YulFunctionCall","src":"12042:19:9"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"12036:2:9","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12077:9:9"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12092:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"12100:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12088:3:9"},"nodeType":"YulFunctionCall","src":"12088:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12070:6:9"},"nodeType":"YulFunctionCall","src":"12070:34:9"},"nodeType":"YulExpressionStatement","src":"12070:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12124:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12135:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12120:3:9"},"nodeType":"YulFunctionCall","src":"12120:18:9"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12144:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"12152:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12140:3:9"},"nodeType":"YulFunctionCall","src":"12140:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12113:6:9"},"nodeType":"YulFunctionCall","src":"12113:43:9"},"nodeType":"YulExpressionStatement","src":"12113:43:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12176:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12187:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12172:3:9"},"nodeType":"YulFunctionCall","src":"12172:18:9"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12196:6:9"},{"name":"_1","nodeType":"YulIdentifier","src":"12204:2:9"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12192:3:9"},"nodeType":"YulFunctionCall","src":"12192:15:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12165:6:9"},"nodeType":"YulFunctionCall","src":"12165:43:9"},"nodeType":"YulExpressionStatement","src":"12165:43:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12228:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12239:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12224:3:9"},"nodeType":"YulFunctionCall","src":"12224:18:9"},{"name":"value3","nodeType":"YulIdentifier","src":"12244:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12217:6:9"},"nodeType":"YulFunctionCall","src":"12217:34:9"},"nodeType":"YulExpressionStatement","src":"12217:34:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12271:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12282:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12267:3:9"},"nodeType":"YulFunctionCall","src":"12267:19:9"},{"kind":"number","nodeType":"YulLiteral","src":"12288:3:9","type":"","value":"192"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12260:6:9"},"nodeType":"YulFunctionCall","src":"12260:32:9"},"nodeType":"YulExpressionStatement","src":"12260:32:9"},{"nodeType":"YulVariableDeclaration","src":"12301:60:9","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"12333:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12345:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12356:3:9","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12341:3:9"},"nodeType":"YulFunctionCall","src":"12341:19:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12315:17:9"},"nodeType":"YulFunctionCall","src":"12315:46:9"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"12305:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12381:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12392:3:9","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12377:3:9"},"nodeType":"YulFunctionCall","src":"12377:19:9"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"12402:6:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"12410:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12398:3:9"},"nodeType":"YulFunctionCall","src":"12398:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12370:6:9"},"nodeType":"YulFunctionCall","src":"12370:51:9"},"nodeType":"YulExpressionStatement","src":"12370:51:9"},{"nodeType":"YulAssignment","src":"12430:41:9","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"12456:6:9"},{"name":"tail_1","nodeType":"YulIdentifier","src":"12464:6:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"12438:17:9"},"nodeType":"YulFunctionCall","src":"12438:33:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12430:4:9"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11951:9:9","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11962:6:9","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11970:6:9","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11978:6:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11986:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11994:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12002:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12013:4:9","type":""}],"src":"11745:732:9"},{"body":{"nodeType":"YulBlock","src":"12656:229:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12673:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12684:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12666:6:9"},"nodeType":"YulFunctionCall","src":"12666:21:9"},"nodeType":"YulExpressionStatement","src":"12666:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12707:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12718:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12703:3:9"},"nodeType":"YulFunctionCall","src":"12703:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"12723:2:9","type":"","value":"39"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12696:6:9"},"nodeType":"YulFunctionCall","src":"12696:30:9"},"nodeType":"YulExpressionStatement","src":"12696:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12746:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12757:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12742:3:9"},"nodeType":"YulFunctionCall","src":"12742:18:9"},{"hexValue":"4552433737373a207472616e7366657220616d6f756e74206578636565647320","kind":"string","nodeType":"YulLiteral","src":"12762:34:9","type":"","value":"ERC777: transfer amount exceeds "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12735:6:9"},"nodeType":"YulFunctionCall","src":"12735:62:9"},"nodeType":"YulExpressionStatement","src":"12735:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12817:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12828:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12813:3:9"},"nodeType":"YulFunctionCall","src":"12813:18:9"},{"hexValue":"62616c616e6365","kind":"string","nodeType":"YulLiteral","src":"12833:9:9","type":"","value":"balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12806:6:9"},"nodeType":"YulFunctionCall","src":"12806:37:9"},"nodeType":"YulExpressionStatement","src":"12806:37:9"},{"nodeType":"YulAssignment","src":"12852:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12864:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"12875:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12860:3:9"},"nodeType":"YulFunctionCall","src":"12860:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12852:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12633:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12647:4:9","type":""}],"src":"12482:403:9"},{"body":{"nodeType":"YulBlock","src":"12938:80:9","statements":[{"body":{"nodeType":"YulBlock","src":"12965:22:9","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12967:16:9"},"nodeType":"YulFunctionCall","src":"12967:18:9"},"nodeType":"YulExpressionStatement","src":"12967:18:9"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12954:1:9"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12961:1:9"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"12957:3:9"},"nodeType":"YulFunctionCall","src":"12957:6:9"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12951:2:9"},"nodeType":"YulFunctionCall","src":"12951:13:9"},"nodeType":"YulIf","src":"12948:39:9"},{"nodeType":"YulAssignment","src":"12996:16:9","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"13007:1:9"},{"name":"y","nodeType":"YulIdentifier","src":"13010:1:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13003:3:9"},"nodeType":"YulFunctionCall","src":"13003:9:9"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12996:3:9"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12921:1:9","type":""},{"name":"y","nodeType":"YulTypedName","src":"12924:1:9","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12930:3:9","type":""}],"src":"12890:128:9"},{"body":{"nodeType":"YulBlock","src":"13216:257:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13233:9:9"},{"name":"value0","nodeType":"YulIdentifier","src":"13244:6:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13226:6:9"},"nodeType":"YulFunctionCall","src":"13226:25:9"},"nodeType":"YulExpressionStatement","src":"13226:25:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13271:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13282:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13267:3:9"},"nodeType":"YulFunctionCall","src":"13267:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"13287:2:9","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13260:6:9"},"nodeType":"YulFunctionCall","src":"13260:30:9"},"nodeType":"YulExpressionStatement","src":"13260:30:9"},{"nodeType":"YulVariableDeclaration","src":"13299:59:9","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13331:6:9"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13343:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13354:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13339:3:9"},"nodeType":"YulFunctionCall","src":"13339:18:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13313:17:9"},"nodeType":"YulFunctionCall","src":"13313:45:9"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"13303:6:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13378:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13389:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13374:3:9"},"nodeType":"YulFunctionCall","src":"13374:18:9"},{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"13398:6:9"},{"name":"headStart","nodeType":"YulIdentifier","src":"13406:9:9"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13394:3:9"},"nodeType":"YulFunctionCall","src":"13394:22:9"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13367:6:9"},"nodeType":"YulFunctionCall","src":"13367:50:9"},"nodeType":"YulExpressionStatement","src":"13367:50:9"},{"nodeType":"YulAssignment","src":"13426:41:9","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"13452:6:9"},{"name":"tail_1","nodeType":"YulIdentifier","src":"13460:6:9"}],"functionName":{"name":"abi_encode_string","nodeType":"YulIdentifier","src":"13434:17:9"},"nodeType":"YulFunctionCall","src":"13434:33:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13426:4:9"}]}]},"name":"abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13169:9:9","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13180:6:9","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13188:6:9","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13196:6:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13207:4:9","type":""}],"src":"13023:450:9"},{"body":{"nodeType":"YulBlock","src":"13652:307:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13669:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13680:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13662:6:9"},"nodeType":"YulFunctionCall","src":"13662:21:9"},"nodeType":"YulExpressionStatement","src":"13662:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13703:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13714:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13699:3:9"},"nodeType":"YulFunctionCall","src":"13699:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"13719:2:9","type":"","value":"77"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13692:6:9"},"nodeType":"YulFunctionCall","src":"13692:30:9"},"nodeType":"YulExpressionStatement","src":"13692:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13742:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13753:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13738:3:9"},"nodeType":"YulFunctionCall","src":"13738:18:9"},{"hexValue":"4552433737373a20746f6b656e20726563697069656e7420636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"13758:34:9","type":"","value":"ERC777: token recipient contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13731:6:9"},"nodeType":"YulFunctionCall","src":"13731:62:9"},"nodeType":"YulExpressionStatement","src":"13731:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13813:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13824:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13809:3:9"},"nodeType":"YulFunctionCall","src":"13809:18:9"},{"hexValue":"20686173206e6f20696d706c656d656e74657220666f7220455243373737546f","kind":"string","nodeType":"YulLiteral","src":"13829:34:9","type":"","value":" has no implementer for ERC777To"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13802:6:9"},"nodeType":"YulFunctionCall","src":"13802:62:9"},"nodeType":"YulExpressionStatement","src":"13802:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13884:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13895:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13880:3:9"},"nodeType":"YulFunctionCall","src":"13880:19:9"},{"hexValue":"6b656e73526563697069656e74","kind":"string","nodeType":"YulLiteral","src":"13901:15:9","type":"","value":"kensRecipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13873:6:9"},"nodeType":"YulFunctionCall","src":"13873:44:9"},"nodeType":"YulExpressionStatement","src":"13873:44:9"},{"nodeType":"YulAssignment","src":"13926:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"13949:3:9","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:9"},"nodeType":"YulFunctionCall","src":"13934:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13926:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13629:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13643:4:9","type":""}],"src":"13478:481:9"},{"body":{"nodeType":"YulBlock","src":"14138:224:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14155:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14166:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14148:6:9"},"nodeType":"YulFunctionCall","src":"14148:21:9"},"nodeType":"YulExpressionStatement","src":"14148:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14189:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14200:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14185:3:9"},"nodeType":"YulFunctionCall","src":"14185:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"14205:2:9","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14178:6:9"},"nodeType":"YulFunctionCall","src":"14178:30:9"},"nodeType":"YulExpressionStatement","src":"14178:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14228:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14239:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14224:3:9"},"nodeType":"YulFunctionCall","src":"14224:18:9"},{"hexValue":"4552433737373a2073656e642066726f6d20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"14244:34:9","type":"","value":"ERC777: send from the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14217:6:9"},"nodeType":"YulFunctionCall","src":"14217:62:9"},"nodeType":"YulExpressionStatement","src":"14217:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14299:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14310:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14295:3:9"},"nodeType":"YulFunctionCall","src":"14295:18:9"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"14315:4:9","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14288:6:9"},"nodeType":"YulFunctionCall","src":"14288:32:9"},"nodeType":"YulExpressionStatement","src":"14288:32:9"},{"nodeType":"YulAssignment","src":"14329:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14341:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14352:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14337:3:9"},"nodeType":"YulFunctionCall","src":"14337:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14329:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14115:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14129:4:9","type":""}],"src":"13964:398:9"},{"body":{"nodeType":"YulBlock","src":"14541:182:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14558:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14569:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14551:6:9"},"nodeType":"YulFunctionCall","src":"14551:21:9"},"nodeType":"YulExpressionStatement","src":"14551:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14592:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14603:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14588:3:9"},"nodeType":"YulFunctionCall","src":"14588:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"14608:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14581:6:9"},"nodeType":"YulFunctionCall","src":"14581:30:9"},"nodeType":"YulExpressionStatement","src":"14581:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14631:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14642:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14627:3:9"},"nodeType":"YulFunctionCall","src":"14627:18:9"},{"hexValue":"4552433737373a2073656e6420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"14647:34:9","type":"","value":"ERC777: send to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14620:6:9"},"nodeType":"YulFunctionCall","src":"14620:62:9"},"nodeType":"YulExpressionStatement","src":"14620:62:9"},{"nodeType":"YulAssignment","src":"14691:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14703:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14714:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14699:3:9"},"nodeType":"YulFunctionCall","src":"14699:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14691:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14518:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14532:4:9","type":""}],"src":"14367:356:9"},{"body":{"nodeType":"YulBlock","src":"14902:224:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14919:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14930:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14912:6:9"},"nodeType":"YulFunctionCall","src":"14912:21:9"},"nodeType":"YulExpressionStatement","src":"14912:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14953:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"14964:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14949:3:9"},"nodeType":"YulFunctionCall","src":"14949:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"14969:2:9","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14942:6:9"},"nodeType":"YulFunctionCall","src":"14942:30:9"},"nodeType":"YulExpressionStatement","src":"14942:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14992:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15003:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14988:3:9"},"nodeType":"YulFunctionCall","src":"14988:18:9"},{"hexValue":"4552433737373a206275726e2066726f6d20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"15008:34:9","type":"","value":"ERC777: burn from the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14981:6:9"},"nodeType":"YulFunctionCall","src":"14981:62:9"},"nodeType":"YulExpressionStatement","src":"14981:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15063:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15074:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15059:3:9"},"nodeType":"YulFunctionCall","src":"15059:18:9"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"15079:4:9","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15052:6:9"},"nodeType":"YulFunctionCall","src":"15052:32:9"},"nodeType":"YulExpressionStatement","src":"15052:32:9"},{"nodeType":"YulAssignment","src":"15093:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15105:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15116:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15101:3:9"},"nodeType":"YulFunctionCall","src":"15101:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15093:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14879:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14893:4:9","type":""}],"src":"14728:398:9"},{"body":{"nodeType":"YulBlock","src":"15305:225:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15322:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15333:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15315:6:9"},"nodeType":"YulFunctionCall","src":"15315:21:9"},"nodeType":"YulExpressionStatement","src":"15315:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15356:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15367:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15352:3:9"},"nodeType":"YulFunctionCall","src":"15352:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"15372:2:9","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15345:6:9"},"nodeType":"YulFunctionCall","src":"15345:30:9"},"nodeType":"YulExpressionStatement","src":"15345:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15395:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15406:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15391:3:9"},"nodeType":"YulFunctionCall","src":"15391:18:9"},{"hexValue":"4552433737373a206275726e20616d6f756e7420657863656564732062616c61","kind":"string","nodeType":"YulLiteral","src":"15411:34:9","type":"","value":"ERC777: burn amount exceeds bala"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15384:6:9"},"nodeType":"YulFunctionCall","src":"15384:62:9"},"nodeType":"YulExpressionStatement","src":"15384:62:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15466:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15477:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15462:3:9"},"nodeType":"YulFunctionCall","src":"15462:18:9"},{"hexValue":"6e6365","kind":"string","nodeType":"YulLiteral","src":"15482:5:9","type":"","value":"nce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15455:6:9"},"nodeType":"YulFunctionCall","src":"15455:33:9"},"nodeType":"YulExpressionStatement","src":"15455:33:9"},{"nodeType":"YulAssignment","src":"15497:27:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15509:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15520:3:9","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15505:3:9"},"nodeType":"YulFunctionCall","src":"15505:19:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15497:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15282:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15296:4:9","type":""}],"src":"15131:399:9"},{"body":{"nodeType":"YulBlock","src":"15709:182:9","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15726:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15737:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15719:6:9"},"nodeType":"YulFunctionCall","src":"15719:21:9"},"nodeType":"YulExpressionStatement","src":"15719:21:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15760:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15771:2:9","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15756:3:9"},"nodeType":"YulFunctionCall","src":"15756:18:9"},{"kind":"number","nodeType":"YulLiteral","src":"15776:2:9","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15749:6:9"},"nodeType":"YulFunctionCall","src":"15749:30:9"},"nodeType":"YulExpressionStatement","src":"15749:30:9"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15799:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15810:2:9","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15795:3:9"},"nodeType":"YulFunctionCall","src":"15795:18:9"},{"hexValue":"4552433737373a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"15815:34:9","type":"","value":"ERC777: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15788:6:9"},"nodeType":"YulFunctionCall","src":"15788:62:9"},"nodeType":"YulExpressionStatement","src":"15788:62:9"},{"nodeType":"YulAssignment","src":"15859:26:9","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15871:9:9"},{"kind":"number","nodeType":"YulLiteral","src":"15882:2:9","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15867:3:9"},"nodeType":"YulFunctionCall","src":"15867:18:9"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15859:4:9"}]}]},"name":"abi_encode_tuple_t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15686:9:9","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15700:4:9","type":""}],"src":"15535:356:9"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), 0)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC777: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC777: transfer from the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d8bf23f1408d4800b3aee66cb36df9b55f0e49735257afe214dda2085ed7cd5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC777: transfer amount exceeds \")\n        mstore(add(headStart, 96), \"allowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC777: caller is not an operato\")\n        mstore(add(headStart, 96), \"r for holder\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC777: authorizing self as oper\")\n        mstore(add(headStart, 96), \"ator\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC777: revoking self as operato\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC777: approve from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC777: approve to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_address_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 192)\n        let tail_1 := abi_encode_string(value4, add(headStart, 192))\n        mstore(add(headStart, 160), sub(tail_1, headStart))\n        tail := abi_encode_string(value5, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"ERC777: transfer amount exceeds \")\n        mstore(add(headStart, 96), \"balance\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        let tail_1 := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 77)\n        mstore(add(headStart, 64), \"ERC777: token recipient contract\")\n        mstore(add(headStart, 96), \" has no implementer for ERC777To\")\n        mstore(add(headStart, 128), \"kensRecipient\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_14f76295ace7a8386ec01140ee9cd688544ad4113a371d47f5a5fb46ac01c401__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC777: send from the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ed80ea5132cda6a72ccf7da466e28cf5f3b5c217583b1b7e92c137a9f3d6b4c3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC777: send to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC777: burn from the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC777: burn amount exceeds bala\")\n        mstore(add(headStart, 96), \"nce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC777: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}","id":9,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012c5760003560e01c806378e7c99a116100ad578063d95b637111610071578063d95b63711461027f578063dd62ed3e14610292578063fad8b32a146102cb578063fc673c4f146102de578063fe9d9303146102f157600080fd5b806378e7c99a14610213578063959b8c3f1461023e57806395d89b41146102515780639bd9bbc614610259578063a9059cbb1461026c57600080fd5b8063313ce567116100f4578063313ce567146101ac57806340c10f19146101bb578063556f0dc7146101d057806362ad1b83146101d757806370a08231146101ea57600080fd5b806306e485381461013157806306fdde031461014f578063095ea7b31461016457806318160ddd1461018757806323b872dd14610199575b600080fd5b610139610304565b60405161014691906113bd565b60405180910390f35b610157610366565b6040516101469190611457565b610177610172366004611482565b6103ef565b6040519015158152602001610146565b6001545b604051908152602001610146565b6101776101a73660046114ae565b610407565b60405160128152602001610146565b6101ce6101c9366004611482565b6105d0565b005b600161018b565b6101ce6101e5366004611592565b6105fe565b61018b6101f8366004611625565b6001600160a01b031660009081526020819052604090205490565b610226610221366004611642565b61063a565b6040516001600160a01b039091168152602001610146565b6101ce61024c366004611625565b610664565b610157610782565b6101ce61026736600461165b565b610791565b61017761027a366004611482565b6107b4565b61017761028d3660046116b4565b610867565b61018b6102a03660046116b4565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101ce6102d9366004611625565b610909565b6101ce6102ec3660046116ed565b610a25565b6101ce6102ff36600461176d565b610a5d565b6060600480548060200260200160405190810160405280929190818152602001828054801561035c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161033e575b5050505050905090565b606060028054610375906117b4565b80601f01602080910402602001604051908101604052809291908181526020018280546103a1906117b4565b801561035c5780601f106103c35761010080835404028352916020019161035c565b820191906000526020600020905b8154815290600101906020018083116103d157509395945050505050565b6000336103fd818585610a78565b5060019392505050565b60006001600160a01b0383166104385760405162461bcd60e51b815260040161042f906117ef565b60405180910390fd5b6001600160a01b03841661049d5760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b606482015260840161042f565b60003390506104ce818686866040518060200160405280600081525060405180602001604052806000815250610b9f565b6104fa818686866040518060200160405280600081525060405180602001604052806000815250610cd6565b6001600160a01b03808616600090815260086020908152604080832093851683529290522054838110156105825760405162461bcd60e51b815260206004820152602960248201527f4552433737373a207472616e7366657220616d6f756e74206578636565647320604482015268616c6c6f77616e636560b81b606482015260840161042f565b61059686836105918785611849565b610a78565b6105c48287878760405180602001604052806000815250604051806020016040528060008152506000610e2a565b50600195945050505050565b6105fa82826040518060200160405280600081525060405180602001604052806000815250610ffe565b5050565b6106083386610867565b6106245760405162461bcd60e51b815260040161042f90611860565b6106338585858585600161100c565b5050505050565b6009818154811061064a57600080fd5b6000918252602090912001546001600160a01b0316905081565b336001600160a01b03821614156106c95760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b606482015260840161042f565b6001600160a01b03811660009081526005602052604090205460ff161561071a573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19169055610749565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b606060038054610375906117b4565b6107af3384848460405180602001604052806000815250600161100c565b505050565b60006001600160a01b0383166107dc5760405162461bcd60e51b815260040161042f906117ef565b600033905061080d818286866040518060200160405280600081525060405180602001604052806000815250610b9f565b610839818286866040518060200160405280600081525060405180602001604052806000815250610cd6565b6103fd8182868660405180602001604052806000815250604051806020016040528060008152506000610e2a565b6000816001600160a01b0316836001600160a01b031614806108d257506001600160a01b03831660009081526005602052604090205460ff1680156108d257506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061090257506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b03811633141561096c5760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b606482015260840161042f565b6001600160a01b03811660009081526005602052604090205460ff16156109c0573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff191660011790556109ec565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b610a2f3385610867565b610a4b5760405162461bcd60e51b815260040161042f90611860565b610a57848484846110ef565b50505050565b6105fa338383604051806020016040528060008152506110ef565b6001600160a01b038316610adc5760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161042f565b6001600160a01b038216610b3e5760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b606482015260840161042f565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610c1b57600080fd5b505afa158015610c2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5391906118ac565b90506001600160a01b03811615610ccd57604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610c9a908a908a908a908a908a908a906004016118c9565b600060405180830381600087803b158015610cb457600080fd5b505af1158015610cc8573d6000803e3d6000fd5b505050505b50505050505050565b6001600160a01b03851660009081526020819052604090205483811015610d4f5760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b606482015260840161042f565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610d86908490611923565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610dde9392919061193b565b60405180910390a4846001600160a01b0316866001600160a01b031660008051602061197183398151915286604051610e1991815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca9060440160206040518083038186803b158015610ea657600080fd5b505afa158015610eba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ede91906118ac565b90506001600160a01b03811615610f5a576040516223de2960e01b81526001600160a01b038216906223de2990610f23908b908b908b908b908b908b906004016118c9565b600060405180830381600087803b158015610f3d57600080fd5b505af1158015610f51573d6000803e3d6000fd5b50505050610ff4565b8115610ff4576001600160a01b0386163b15610ff45760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a40161042f565b5050505050505050565b610a57848484846001611292565b6001600160a01b03861661106d5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a2073656e642066726f6d20746865207a65726f206164647265604482015261737360f01b606482015260840161042f565b6001600160a01b0385166110c35760405162461bcd60e51b815260206004820181905260248201527f4552433737373a2073656e6420746f20746865207a65726f2061646472657373604482015260640161042f565b336110d2818888888888610b9f565b6110e0818888888888610cd6565b610ccd81888888888888610e2a565b6001600160a01b0384166111505760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b606482015260840161042f565b3361116081866000878787610b9f565b6001600160a01b038516600090815260208190526040902054848110156111d55760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b606482015260840161042f565b6001600160a01b0386166000908152602081905260408120868303905560018054879290611204908490611849565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a40988787876040516112529392919061193b565b60405180910390a36040518581526000906001600160a01b03881690600080516020611971833981519152906020015b60405180910390a3505050505050565b6001600160a01b0385166112e85760405162461bcd60e51b815260206004820181905260248201527f4552433737373a206d696e7420746f20746865207a65726f2061646472657373604482015260640161042f565b600033905084600160008282546112ff9190611923565b90915550506001600160a01b0386166000908152602081905260408120805487929061132c908490611923565b9091555061134290508160008888888888610e2a565b856001600160a01b0316816001600160a01b03167f2fe5be0146f74c5bce36c0b80911af6c7d86ff27e89d5cfa61fc681327954e5d8787876040516113899392919061193b565b60405180910390a36040518581526001600160a01b0387169060009060008051602061197183398151915290602001611282565b6020808252825182820181905260009190848201906040850190845b818110156113fe5783516001600160a01b0316835292840192918401916001016113d9565b50909695505050505050565b6000815180845260005b8181101561143057602081850181015186830182015201611414565b81811115611442576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610902602083018461140a565b6001600160a01b038116811461147f57600080fd5b50565b6000806040838503121561149557600080fd5b82356114a08161146a565b946020939093013593505050565b6000806000606084860312156114c357600080fd5b83356114ce8161146a565b925060208401356114de8161146a565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261151657600080fd5b813567ffffffffffffffff80821115611531576115316114ef565b604051601f8301601f19908116603f01168101908282118183101715611559576115596114ef565b8160405283815286602085880101111561157257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a086880312156115aa57600080fd5b85356115b58161146a565b945060208601356115c58161146a565b935060408601359250606086013567ffffffffffffffff808211156115e957600080fd5b6115f589838a01611505565b9350608088013591508082111561160b57600080fd5b5061161888828901611505565b9150509295509295909350565b60006020828403121561163757600080fd5b81356109028161146a565b60006020828403121561165457600080fd5b5035919050565b60008060006060848603121561167057600080fd5b833561167b8161146a565b925060208401359150604084013567ffffffffffffffff81111561169e57600080fd5b6116aa86828701611505565b9150509250925092565b600080604083850312156116c757600080fd5b82356116d28161146a565b915060208301356116e28161146a565b809150509250929050565b6000806000806080858703121561170357600080fd5b843561170e8161146a565b935060208501359250604085013567ffffffffffffffff8082111561173257600080fd5b61173e88838901611505565b9350606087013591508082111561175457600080fd5b5061176187828801611505565b91505092959194509250565b6000806040838503121561178057600080fd5b82359150602083013567ffffffffffffffff81111561179e57600080fd5b6117aa85828601611505565b9150509250929050565b600181811c908216806117c857607f821691505b602082108114156117e957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526024908201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561185b5761185b611833565b500390565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b6000602082840312156118be57600080fd5b81516109028161146a565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906119049083018561140a565b82810360a0840152611916818561140a565b9998505050505050505050565b6000821982111561193657611936611833565b500190565b838152606060208201526000611954606083018561140a565b8281036040840152611966818561140a565b969550505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212200f998e22850d127be9098f56af88cc982f83a4e2cbdc33960e6fdb3e7a42be5364736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x78E7C99A GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x2F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x78E7C99A EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x26C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x13BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x1A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14AE JUMP JUMPDEST PUSH2 0x407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1C9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x5D0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH2 0x18B JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x1E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH2 0x18B PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x221 CALLDATASIZE PUSH1 0x4 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x63A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST PUSH2 0x157 PUSH2 0x782 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x165B JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x1482 JUMP JUMPDEST PUSH2 0x7B4 JUMP JUMPDEST PUSH2 0x177 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x16B4 JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST PUSH2 0x18B PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x909 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0x16ED JUMP JUMPDEST PUSH2 0xA25 JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x2FF CALLDATASIZE PUSH1 0x4 PUSH2 0x176D JUMP JUMPDEST PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x35C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x33E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3A1 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x35C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3C3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x35C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3D1 JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3FD DUP2 DUP6 DUP6 PUSH2 0xA78 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x438 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x4CE DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x4FA DUP2 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP6 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x616C6C6F77616E6365 PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH2 0x596 DUP7 DUP4 PUSH2 0x591 DUP8 DUP6 PUSH2 0x1849 JUMP JUMPDEST PUSH2 0xA78 JUMP JUMPDEST PUSH2 0x5C4 DUP3 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xE2A JUMP JUMPDEST POP PUSH1 0x1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x5FA DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFFE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x608 CALLER DUP7 PUSH2 0x867 JUMP JUMPDEST PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH2 0x633 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x100C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x9 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x64A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x71A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x749 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x375 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH2 0x7AF CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x100C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x17EF JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0x80D DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x839 DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x3FD DUP2 DUP3 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x8D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x8D2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x902 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x96C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x9C0 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x9EC JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0xA2F CALLER DUP6 PUSH2 0x867 JUMP JUMPDEST PUSH2 0xA4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42F SWAP1 PUSH2 0x1860 JUMP JUMPDEST PUSH2 0xA57 DUP5 DUP5 DUP5 DUP5 PUSH2 0x10EF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x5FA CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x10EF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xADC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xCCD JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xC9A SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCC8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xD4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xD86 SWAP1 DUP5 SWAP1 PUSH2 0x1923 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xDDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1971 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP7 PUSH1 0x40 MLOAD PUSH2 0xE19 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEDE SWAP2 SWAP1 PUSH2 0x18AC JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xF5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xF23 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF51 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xFF4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0xFF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x42F JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xA57 DUP5 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x106D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E642066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x10C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A2073656E6420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST CALLER PUSH2 0x10D2 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x10E0 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0xCCD DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1150 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST CALLER PUSH2 0x1160 DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xB9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x1204 SWAP1 DUP5 SWAP1 PUSH2 0x1849 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1252 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1971 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x12E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x42F JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12FF SWAP2 SWAP1 PUSH2 0x1923 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0x132C SWAP1 DUP5 SWAP1 PUSH2 0x1923 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1342 SWAP1 POP DUP2 PUSH1 0x0 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xE2A JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x2FE5BE0146F74C5BCE36C0B80911AF6C7D86FF27E89D5CFA61FC681327954E5D DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x1389 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x193B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1971 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH2 0x1282 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13FE JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13D9 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1430 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1414 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1442 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x902 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x140A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x147F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1495 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x14A0 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x14CE DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x14DE DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1516 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1531 JUMPI PUSH2 0x1531 PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1559 JUMPI PUSH2 0x1559 PUSH2 0x14EF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x15AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x15B5 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x15C5 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F5 DUP10 DUP4 DUP11 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x160B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1618 DUP9 DUP3 DUP10 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x902 DUP2 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x167B DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x169E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16AA DUP7 DUP3 DUP8 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x16D2 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x16E2 DUP2 PUSH2 0x146A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1703 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x170E DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173E DUP9 DUP4 DUP10 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1754 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1761 DUP8 DUP3 DUP9 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x179E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17AA DUP6 DUP3 DUP7 ADD PUSH2 0x1505 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17C8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x17E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x185B JUMPI PUSH2 0x185B PUSH2 0x1833 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x902 DUP2 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1904 SWAP1 DUP4 ADD DUP6 PUSH2 0x140A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x1916 DUP2 DUP6 PUSH2 0x140A JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1936 PUSH2 0x1833 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1954 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x140A JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1966 DUP2 DUP6 PUSH2 0x140A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF SWAP10 DUP15 0x22 DUP6 0xD SLT PUSH28 0xE9098F56AF88CC982F83A4E2CBDC33960E6FDB3E7A42BE5364736F6C PUSH4 0x43000809 STOP CALLER ","sourceMap":"122:266:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6769:130:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2967:98;;;:::i;:::-;;;;;;;:::i;8358:197::-;;;;;;:::i;:::-;;:::i;:::-;;;2000:14:9;;1993:22;1975:41;;1963:2;1948:18;8358:197:1;1835:187:9;3760:123:1;3864:12;;3760:123;;;2173:25:9;;;2161:2;2146:18;3760:123:1;2027:177:9;8929:806:1;;;;;;:::i;:::-;;:::i;3407:82::-;;;3480:2;2812:36:9;;2800:2;2785:18;3407:82:1;2670:184:9;285:101:8;;;;;;:::i;:::-;;:::i;:::-;;3604:95:1;3691:1;3604:95;;7018:366;;;;;;:::i;:::-;;:::i;3983:150::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4104:22:1;4078:7;4104:22;;;;;;;;;;;;3983:150;158:52:8;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5205:32:9;;;5187:51;;5175:2;5160:18;158:52:8;5041:203:9;5824:412:1;;;;;;:::i;:::-;;:::i;3121:102::-;;;:::i;4263:193::-;;;;;;:::i;:::-;;:::i;4687:439::-;;;;;;:::i;:::-;;:::i;5446:311::-;;;;;;:::i;:::-;;:::i;8069:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8185:19:1;;;8159:7;8185:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;8069:151;6300:403;;;;;;:::i;:::-;;:::i;7505:325::-;;;;;;:::i;:::-;;:::i;5256:127::-;;;;;;:::i;:::-;;:::i;6769:130::-;6835:16;6870:22;6863:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6863:29:1;;;;;;;;;;;;;;;;;;;;;;;6769:130;:::o;2967:98::-;3021:13;3053:5;3046:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3046:12:1;;2967:98;-1:-1:-1;;;;;2967:98:1:o;8358:197::-;8440:4;719:10:6;8495:32:1;719:10:6;8512:7:1;8521:5;8495:8;:32::i;:::-;-1:-1:-1;8544:4:1;;8358:197;-1:-1:-1;;;8358:197:1:o;8929:806::-;9065:4;-1:-1:-1;;;;;9089:23:1;;9081:72;;;;-1:-1:-1;;;9081:72:1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;9171:20:1;;9163:71;;;;-1:-1:-1;;;9163:71:1;;8303:2:9;9163:71:1;;;8285:21:9;8342:2;8322:18;;;8315:30;8381:34;8361:18;;;8354:62;-1:-1:-1;;;8432:18:9;;;8425:36;8478:19;;9163:71:1;8101:402:9;9163:71:1;9245:15;719:10:6;9245:30:1;;9286:61;9304:7;9313:6;9321:9;9332:6;9286:61;;;;;;;;;;;;;;;;;;;;;;;;:17;:61::i;:::-;9358:49;9364:7;9373:6;9381:9;9392:6;9358:49;;;;;;;;;;;;;;;;;;;;;;;;:5;:49::i;:::-;-1:-1:-1;;;;;9445:19:1;;;9418:24;9445:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;9491:26;;;;9483:80;;;;-1:-1:-1;;;9483:80:1;;8710:2:9;9483:80:1;;;8692:21:9;8749:2;8729:18;;;8722:30;8788:34;8768:18;;;8761:62;-1:-1:-1;;;8839:18:9;;;8832:39;8888:19;;9483:80:1;8508:405:9;9483:80:1;9573:52;9582:6;9590:7;9599:25;9618:6;9599:16;:25;:::i;:::-;9573:8;:52::i;:::-;9636:70;9656:7;9665:6;9673:9;9684:6;9636:70;;;;;;;;;;;;;;;;;;;;;;;;9700:5;9636:19;:70::i;:::-;-1:-1:-1;9724:4:1;;8929:806;-1:-1:-1;;;;;8929:806:1:o;285:101:8:-;349:30;355:7;364:6;349:30;;;;;;;;;;;;;;;;;;;;;;;;:5;:30::i;:::-;285:101;;:::o;7018:366:1:-;7225:35;719:10:6;7253:6:1;7225:13;:35::i;:::-;7217:92;;;;-1:-1:-1;;;7217:92:1;;;;;;;:::i;:::-;7319:58;7325:6;7333:9;7344:6;7352:4;7358:12;7372:4;7319:5;:58::i;:::-;7018:366;;;;;:::o;158:52:8:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;158:52:8;;-1:-1:-1;158:52:8;:::o;5824:412:1:-;719:10:6;-1:-1:-1;;;;;5911:24:1;;;;5903:73;;;;-1:-1:-1;;;5903:73:1;;9795:2:9;5903:73:1;;;9777:21:9;9834:2;9814:18;;;9807:30;9873:34;9853:18;;;9846:62;-1:-1:-1;;;9924:18:9;;;9917:34;9968:19;;5903:73:1;9593:400:9;5903:73:1;-1:-1:-1;;;;;5991:27:1;;;;;;:17;:27;;;;;;;;5987:185;;;719:10:6;6041:38:1;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6041:48:1;;;;;;;;;6034:55;;-1:-1:-1;;6034:55:1;;;5987:185;;;719:10:6;6120:24:1;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6120:34:1;;;;;;;;;:41;;-1:-1:-1;;6120:41:1;6157:4;6120:41;;;5987:185;6187:42;;719:10:6;;-1:-1:-1;;;;;6187:42:1;;;;;;;;5824:412;:::o;3121:102::-;3177:13;3209:7;3202:14;;;;;:::i;4263:193::-;4395:54;719:10:6;4415:9:1;4426:6;4434:4;4395:54;;;;;;;;;;;;4444:4;4395:5;:54::i;:::-;4263:193;;;:::o;4687:439::-;4773:4;-1:-1:-1;;;;;4797:23:1;;4789:72;;;;-1:-1:-1;;;4789:72:1;;;;;;;:::i;:::-;4872:12;719:10:6;4872:27:1;;4910:56;4928:4;4934;4940:9;4951:6;4910:56;;;;;;;;;;;;;;;;;;;;;;;;:17;:56::i;:::-;4977:44;4983:4;4989;4995:9;5006:6;4977:44;;;;;;;;;;;;;;;;;;;;;;;;:5;:44::i;:::-;5032:65;5052:4;5058;5064:9;5075:6;5032:65;;;;;;;;;;;;;;;;;;;;;;;;5091:5;5032:19;:65::i;5446:311::-;5546:4;5593:11;-1:-1:-1;;;;;5581:23:1;:8;-1:-1:-1;;;;;5581:23:1;;:120;;;-1:-1:-1;;;;;;5621:27:1;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5653:37:1;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5652:48;5621:79;5581:169;;;-1:-1:-1;;;;;;5717:23:1;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5581:169;5562:188;5446:311;-1:-1:-1;;;5446:311:1:o;6300:403::-;-1:-1:-1;;;;;6384:24:1;;719:10:6;6384:24:1;;6376:70;;;;-1:-1:-1;;;6376:70:1;;10200:2:9;6376:70:1;;;10182:21:9;10239:2;10219:18;;;10212:30;10278:34;10258:18;;;10251:62;-1:-1:-1;;;10329:18:9;;;10322:31;10370:19;;6376:70:1;9998:397:9;6376:70:1;-1:-1:-1;;;;;6461:27:1;;;;;;:17;:27;;;;;;;;6457:185;;;719:10:6;6504:38:1;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6504:48:1;;;;;;;;;:55;;-1:-1:-1;;6504:55:1;6555:4;6504:55;;;6457:185;;;719:10:6;6597:24:1;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6597:34:1;;;;;;;;;6590:41;;-1:-1:-1;;6590:41:1;;;6457:185;6657:39;;719:10:6;;-1:-1:-1;;;;;6657:39:1;;;;;;;;6300:403;:::o;7505:325::-;7686:36;719:10:6;7714:7:1;7686:13;:36::i;:::-;7678:93;;;;-1:-1:-1;;;7678:93:1;;;;;;;:::i;:::-;7781:42;7787:7;7796:6;7804:4;7810:12;7781:5;:42::i;:::-;7505:325;;;;:::o;5256:127::-;5339:37;719:10:6;5359:6:1;5367:4;5339:37;;;;;;;;;;;;:5;:37::i;14872:365::-;-1:-1:-1;;;;;14995:20:1;;14987:70;;;;-1:-1:-1;;;14987:70:1;;10602:2:9;14987:70:1;;;10584:21:9;10641:2;10621:18;;;10614:30;10680:34;10660:18;;;10653:62;-1:-1:-1;;;10731:18:9;;;10724:35;10776:19;;14987:70:1;10400:401:9;14987:70:1;-1:-1:-1;;;;;15075:21:1;;15067:69;;;;-1:-1:-1;;;15067:69:1;;11008:2:9;15067:69:1;;;10990:21:9;11047:2;11027:18;;;11020:30;11086:34;11066:18;;;11059:62;-1:-1:-1;;;11137:18:9;;;11130:33;11180:19;;15067:69:1;10806:399:9;15067:69:1;-1:-1:-1;;;;;15147:19:1;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;15198:32;;2173:25:9;;;15198:32:1;;2146:18:9;15198:32:1;;;;;;;14872:365;;;:::o;15710:472::-;15941:78;;-1:-1:-1;;;15941:78:1;;-1:-1:-1;;;;;11402:32:9;;15941:78:1;;;11384:51:9;1476:31:1;11451:18:9;;;11444:34;15919:19:1;;1227:42;;15941:41;;11357:18:9;;15941:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15919:100;-1:-1:-1;;;;;;16033:25:1;;;16029:147;;16074:91;;-1:-1:-1;;;16074:91:1;;-1:-1:-1;;;;;16074:39:1;;;;;:91;;16114:8;;16124:4;;16130:2;;16134:6;;16142:8;;16152:12;;16074:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16029:147;15909:273;15710:472;;;;;;:::o;14123:611::-;-1:-1:-1;;;;;14401:15:1;;14379:19;14401:15;;;;;;;;;;;14434:21;;;;14426:73;;;;-1:-1:-1;;;14426:73:1;;12684:2:9;14426:73:1;;;12666:21:9;12723:2;12703:18;;;12696:30;12762:34;12742:18;;;12735:62;-1:-1:-1;;;12813:18:9;;;12806:37;12860:19;;14426:73:1;12482:403:9;14426:73:1;-1:-1:-1;;;;;14533:15:1;;;:9;:15;;;;;;;;;;;14551:20;;;14533:38;;14591:13;;;;;;;;:23;;14565:6;;14533:9;14591:23;;14565:6;;14591:23;:::i;:::-;;;;;;;;14651:2;-1:-1:-1;;;;;14630:56:1;14645:4;-1:-1:-1;;;;;14630:56:1;14635:8;-1:-1:-1;;;;;14630:56:1;;14655:6;14663:8;14673:12;14630:56;;;;;;;;:::i;:::-;;;;;;;;14716:2;-1:-1:-1;;;;;14701:26:1;14710:4;-1:-1:-1;;;;;14701:26:1;-1:-1:-1;;;;;;;;;;;14720:6:1;14701:26;;;;2173:25:9;;2161:2;2146:18;;2027:177;14701:26:1;;;;;;;;14310:424;14123:611;;;;;;:::o;16871:676::-;17138:79;;-1:-1:-1;;;17138:79:1;;-1:-1:-1;;;;;11402:32:9;;17138:79:1;;;11384:51:9;1573:34:1;11451:18:9;;;11444:34;17116:19:1;;1227:42;;17138:41;;11357:18:9;;17138:79:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17116:101;-1:-1:-1;;;;;;17231:25:1;;;17227:314;;17272:96;;-1:-1:-1;;;17272:96:1;;-1:-1:-1;;;;;17272:44:1;;;;;:96;;17317:8;;17327:4;;17333:2;;17337:6;;17345:8;;17355:12;;17272:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17227:314;;;17389:19;17385:156;;;-1:-1:-1;;;;;17433:13:1;;1087:20:5;1133:8;17424:106:1;;;;-1:-1:-1;;;17424:106:1;;13680:2:9;17424:106:1;;;13662:21:9;13719:2;13699:18;;;13692:30;13758:34;13738:18;;;13731:62;13829:34;13809:18;;;13802:62;-1:-1:-1;;;13880:19:9;;;13873:44;13934:19;;17424:106:1;13478:481:9;17424:106:1;17106:441;16871:676;;;;;;;:::o;10305:222::-;10468:52;10474:7;10483:6;10491:8;10501:12;10515:4;10468:5;:52::i;12351:650::-;-1:-1:-1;;;;;12573:18:1;;12565:65;;;;-1:-1:-1;;;12565:65:1;;14166:2:9;12565:65:1;;;14148:21:9;14205:2;14185:18;;;14178:30;14244:34;14224:18;;;14217:62;-1:-1:-1;;;14295:18:9;;;14288:32;14337:19;;12565:65:1;13964:398:9;12565:65:1;-1:-1:-1;;;;;12648:16:1;;12640:61;;;;-1:-1:-1;;;12640:61:1;;14569:2:9;12640:61:1;;;14551:21:9;;;14588:18;;;14581:30;14647:34;14627:18;;;14620:62;14699:18;;12640:61:1;14367:356:9;12640:61:1;719:10:6;12754:69:1;719:10:6;12782:4:1;12788:2;12792:6;12800:8;12810:12;12754:17;:69::i;:::-;12834:57;12840:8;12850:4;12856:2;12860:6;12868:8;12878:12;12834:5;:57::i;:::-;12902:92;12922:8;12932:4;12938:2;12942:6;12950:8;12960:12;12974:19;12902;:92::i;13306:811::-;-1:-1:-1;;;;;13470:18:1;;13462:65;;;;-1:-1:-1;;;13462:65:1;;14930:2:9;13462:65:1;;;14912:21:9;14969:2;14949:18;;;14942:30;15008:34;14988:18;;;14981:62;-1:-1:-1;;;15059:18:9;;;15052:32;15101:19;;13462:65:1;14728:398:9;13462:65:1;719:10:6;13580:73:1;719:10:6;13608:4:1;13538:16;13626:6;13634:4;13640:12;13580:17;:73::i;:::-;-1:-1:-1;;;;;13787:15:1;;13765:19;13787:15;;;;;;;;;;;13820:21;;;;13812:69;;;;-1:-1:-1;;;13812:69:1;;15333:2:9;13812:69:1;;;15315:21:9;15372:2;15352:18;;;15345:30;15411:34;15391:18;;;15384:62;-1:-1:-1;;;15462:18:9;;;15455:33;15505:19;;13812:69:1;15131:399:9;13812:69:1;-1:-1:-1;;;;;13915:15:1;;:9;:15;;;;;;;;;;13933:20;;;13915:38;;13973:12;:22;;13947:6;;13915:9;13973:22;;13947:6;;13973:22;:::i;:::-;;;;;;;;14028:4;-1:-1:-1;;;;;14011:50:1;14018:8;-1:-1:-1;;;;;14011:50:1;;14034:6;14042:4;14048:12;14011:50;;;;;;;;:::i;:::-;;;;;;;;14076:34;;2173:25:9;;;14099:1:1;;-1:-1:-1;;;;;14076:34:1;;;-1:-1:-1;;;;;;;;;;;14076:34:1;2161:2:9;2146:18;14076:34:1;;;;;;;;13452:665;;13306:811;;;;:::o;11149:726::-;-1:-1:-1;;;;;11354:21:1;;11346:66;;;;-1:-1:-1;;;11346:66:1;;15737:2:9;11346:66:1;;;15719:21:9;;;15756:18;;;15749:30;15815:34;15795:18;;;15788:62;15867:18;;11346:66:1;15535:356:9;11346:66:1;11423:16;719:10:6;11423:31:1;;11585:6;11569:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;11601:18:1;;:9;:18;;;;;;;;;;:28;;11623:6;;11601:9;:28;;11623:6;;11601:28;:::i;:::-;;;;-1:-1:-1;11640:103:1;;-1:-1:-1;11660:8:1;11678:1;11682:7;11691:6;11699:8;11709:12;11723:19;11640;:103::i;:::-;11776:7;-1:-1:-1;;;;;11759:57:1;11766:8;-1:-1:-1;;;;;11759:57:1;;11785:6;11793:8;11803:12;11759:57;;;;;;;;:::i;:::-;;;;;;;;11831:37;;2173:25:9;;;-1:-1:-1;;;;;11831:37:1;;;11848:1;;-1:-1:-1;;;;;;;;;;;11831:37:1;2161:2:9;2146:18;11831:37:1;2027:177:9;14:658;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:9;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:9;;14:658;-1:-1:-1;;;;;;14:658:9:o;677:472::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;999:6;996:1;993:13;990:87;;;1065:1;1058:4;1049:6;1044:3;1040:16;1036:27;1029:38;990:87;-1:-1:-1;1131:2:9;1110:15;-1:-1:-1;;1106:29:9;1097:39;;;;1138:4;1093:50;;677:472;-1:-1:-1;;677:472:9:o;1154:220::-;1303:2;1292:9;1285:21;1266:4;1323:45;1364:2;1353:9;1349:18;1341:6;1323:45;:::i;1379:131::-;-1:-1:-1;;;;;1454:31:9;;1444:42;;1434:70;;1500:1;1497;1490:12;1434:70;1379:131;:::o;1515:315::-;1583:6;1591;1644:2;1632:9;1623:7;1619:23;1615:32;1612:52;;;1660:1;1657;1650:12;1612:52;1699:9;1686:23;1718:31;1743:5;1718:31;:::i;:::-;1768:5;1820:2;1805:18;;;;1792:32;;-1:-1:-1;;;1515:315:9:o;2209:456::-;2286:6;2294;2302;2355:2;2343:9;2334:7;2330:23;2326:32;2323:52;;;2371:1;2368;2361:12;2323:52;2410:9;2397:23;2429:31;2454:5;2429:31;:::i;:::-;2479:5;-1:-1:-1;2536:2:9;2521:18;;2508:32;2549:33;2508:32;2549:33;:::i;:::-;2209:456;;2601:7;;-1:-1:-1;;;2655:2:9;2640:18;;;;2627:32;;2209:456::o;2859:127::-;2920:10;2915:3;2911:20;2908:1;2901:31;2951:4;2948:1;2941:15;2975:4;2972:1;2965:15;2991:718;3033:5;3086:3;3079:4;3071:6;3067:17;3063:27;3053:55;;3104:1;3101;3094:12;3053:55;3140:6;3127:20;3166:18;3203:2;3199;3196:10;3193:36;;;3209:18;;:::i;:::-;3284:2;3278:9;3252:2;3338:13;;-1:-1:-1;;3334:22:9;;;3358:2;3330:31;3326:40;3314:53;;;3382:18;;;3402:22;;;3379:46;3376:72;;;3428:18;;:::i;:::-;3468:10;3464:2;3457:22;3503:2;3495:6;3488:18;3549:3;3542:4;3537:2;3529:6;3525:15;3521:26;3518:35;3515:55;;;3566:1;3563;3556:12;3515:55;3630:2;3623:4;3615:6;3611:17;3604:4;3596:6;3592:17;3579:54;3677:1;3670:4;3665:2;3657:6;3653:15;3649:26;3642:37;3697:6;3688:15;;;;;;2991:718;;;;:::o;3714:885::-;3827:6;3835;3843;3851;3859;3912:3;3900:9;3891:7;3887:23;3883:33;3880:53;;;3929:1;3926;3919:12;3880:53;3968:9;3955:23;3987:31;4012:5;3987:31;:::i;:::-;4037:5;-1:-1:-1;4094:2:9;4079:18;;4066:32;4107:33;4066:32;4107:33;:::i;:::-;4159:7;-1:-1:-1;4213:2:9;4198:18;;4185:32;;-1:-1:-1;4268:2:9;4253:18;;4240:32;4291:18;4321:14;;;4318:34;;;4348:1;4345;4338:12;4318:34;4371:49;4412:7;4403:6;4392:9;4388:22;4371:49;:::i;:::-;4361:59;;4473:3;4462:9;4458:19;4445:33;4429:49;;4503:2;4493:8;4490:16;4487:36;;;4519:1;4516;4509:12;4487:36;;4542:51;4585:7;4574:8;4563:9;4559:24;4542:51;:::i;:::-;4532:61;;;3714:885;;;;;;;;:::o;4604:247::-;4663:6;4716:2;4704:9;4695:7;4691:23;4687:32;4684:52;;;4732:1;4729;4722:12;4684:52;4771:9;4758:23;4790:31;4815:5;4790:31;:::i;4856:180::-;4915:6;4968:2;4956:9;4947:7;4943:23;4939:32;4936:52;;;4984:1;4981;4974:12;4936:52;-1:-1:-1;5007:23:9;;4856:180;-1:-1:-1;4856:180:9:o;5249:523::-;5335:6;5343;5351;5404:2;5392:9;5383:7;5379:23;5375:32;5372:52;;;5420:1;5417;5410:12;5372:52;5459:9;5446:23;5478:31;5503:5;5478:31;:::i;:::-;5528:5;-1:-1:-1;5580:2:9;5565:18;;5552:32;;-1:-1:-1;5635:2:9;5620:18;;5607:32;5662:18;5651:30;;5648:50;;;5694:1;5691;5684:12;5648:50;5717:49;5758:7;5749:6;5738:9;5734:22;5717:49;:::i;:::-;5707:59;;;5249:523;;;;;:::o;5777:388::-;5845:6;5853;5906:2;5894:9;5885:7;5881:23;5877:32;5874:52;;;5922:1;5919;5912:12;5874:52;5961:9;5948:23;5980:31;6005:5;5980:31;:::i;:::-;6030:5;-1:-1:-1;6087:2:9;6072:18;;6059:32;6100:33;6059:32;6100:33;:::i;:::-;6152:7;6142:17;;;5777:388;;;;;:::o;6170:743::-;6274:6;6282;6290;6298;6351:3;6339:9;6330:7;6326:23;6322:33;6319:53;;;6368:1;6365;6358:12;6319:53;6407:9;6394:23;6426:31;6451:5;6426:31;:::i;:::-;6476:5;-1:-1:-1;6528:2:9;6513:18;;6500:32;;-1:-1:-1;6583:2:9;6568:18;;6555:32;6606:18;6636:14;;;6633:34;;;6663:1;6660;6653:12;6633:34;6686:49;6727:7;6718:6;6707:9;6703:22;6686:49;:::i;:::-;6676:59;;6788:2;6777:9;6773:18;6760:32;6744:48;;6817:2;6807:8;6804:16;6801:36;;;6833:1;6830;6823:12;6801:36;;6856:51;6899:7;6888:8;6877:9;6873:24;6856:51;:::i;:::-;6846:61;;;6170:743;;;;;;;:::o;6918:388::-;6995:6;7003;7056:2;7044:9;7035:7;7031:23;7027:32;7024:52;;;7072:1;7069;7062:12;7024:52;7108:9;7095:23;7085:33;;7169:2;7158:9;7154:18;7141:32;7196:18;7188:6;7185:30;7182:50;;;7228:1;7225;7218:12;7182:50;7251:49;7292:7;7283:6;7272:9;7268:22;7251:49;:::i;:::-;7241:59;;;6918:388;;;;;:::o;7311:380::-;7390:1;7386:12;;;;7433;;;7454:61;;7508:4;7500:6;7496:17;7486:27;;7454:61;7561:2;7553:6;7550:14;7530:18;7527:38;7524:161;;;7607:10;7602:3;7598:20;7595:1;7588:31;7642:4;7639:1;7632:15;7670:4;7667:1;7660:15;7524:161;;7311:380;;;:::o;7696:400::-;7898:2;7880:21;;;7937:2;7917:18;;;7910:30;7976:34;7971:2;7956:18;;7949:62;-1:-1:-1;;;8042:2:9;8027:18;;8020:34;8086:3;8071:19;;7696:400::o;8918:127::-;8979:10;8974:3;8970:20;8967:1;8960:31;9010:4;9007:1;9000:15;9034:4;9031:1;9024:15;9050:125;9090:4;9118:1;9115;9112:8;9109:34;;;9123:18;;:::i;:::-;-1:-1:-1;9160:9:9;;9050:125::o;9180:408::-;9382:2;9364:21;;;9421:2;9401:18;;;9394:30;9460:34;9455:2;9440:18;;9433:62;-1:-1:-1;;;9526:2:9;9511:18;;9504:42;9578:3;9563:19;;9180:408::o;11489:251::-;11559:6;11612:2;11600:9;11591:7;11587:23;11583:32;11580:52;;;11628:1;11625;11618:12;11580:52;11660:9;11654:16;11679:31;11704:5;11679:31;:::i;11745:732::-;-1:-1:-1;;;;;12088:15:9;;;12070:34;;12140:15;;;12135:2;12120:18;;12113:43;12192:15;;12187:2;12172:18;;12165:43;12239:2;12224:18;;12217:34;;;12288:3;12282;12267:19;;12260:32;;;12013:4;;12315:46;;12341:19;;12333:6;12315:46;:::i;:::-;12410:9;12402:6;12398:22;12392:3;12381:9;12377:19;12370:51;12438:33;12464:6;12456;12438:33;:::i;:::-;12430:41;11745:732;-1:-1:-1;;;;;;;;;11745:732:9:o;12890:128::-;12930:3;12961:1;12957:6;12954:1;12951:13;12948:39;;;12967:18;;:::i;:::-;-1:-1:-1;13003:9:9;;12890:128::o;13023:450::-;13244:6;13233:9;13226:25;13287:2;13282;13271:9;13267:18;13260:30;13207:4;13313:45;13354:2;13343:9;13339:18;13331:6;13313:45;:::i;:::-;13406:9;13398:6;13394:22;13389:2;13378:9;13374:18;13367:50;13434:33;13460:6;13452;13434:33;:::i;:::-;13426:41;13023:450;-1:-1:-1;;;;;;13023:450:9:o"},"gasEstimates":{"creation":{"codeDepositCost":"1319600","executionCost":"infinite","totalCost":"infinite"},"external":{"_defaultOperators(uint256)":"4637","allowance(address,address)":"infinite","approve(address,uint256)":"24663","authorizeOperator(address)":"28533","balanceOf(address)":"2645","burn(uint256,bytes)":"infinite","decimals()":"200","defaultOperators()":"infinite","granularity()":"259","isOperatorFor(address,address)":"infinite","mint(address,uint256)":"infinite","name()":"infinite","operatorBurn(address,uint256,bytes,bytes)":"infinite","operatorSend(address,address,uint256,bytes,bytes)":"infinite","revokeOperator(address)":"28560","send(address,uint256,bytes)":"infinite","symbol()":"infinite","totalSupply()":"2371","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"_defaultOperators(uint256)":"78e7c99a","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authorizeOperator(address)":"959b8c3f","balanceOf(address)":"70a08231","burn(uint256,bytes)":"fe9d9303","decimals()":"313ce567","defaultOperators()":"06e48538","granularity()":"556f0dc7","isOperatorFor(address,address)":"d95b6371","mint(address,uint256)":"40c10f19","name()":"06fdde03","operatorBurn(address,uint256,bytes,bytes)":"fc673c4f","operatorSend(address,address,uint256,bytes,bytes)":"62ad1b83","revokeOperator(address)":"fad8b32a","send(address,uint256,bytes)":"9bd9bbc6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"AuthorizedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Burned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Minted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"RevokedOperator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"Sent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_defaultOperators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"authorizeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"defaultOperators\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"granularity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenHolder\",\"type\":\"address\"}],\"name\":\"isOperatorFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"operatorSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"revokeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Note that accounts cannot have allowance issued by their operators.\"},\"authorizeOperator(address)\":{\"details\":\"See {IERC777-authorizeOperator}.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by an account (`tokenHolder`).\"},\"burn(uint256,bytes)\":{\"details\":\"See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"decimals()\":{\"details\":\"See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\"},\"defaultOperators()\":{\"details\":\"See {IERC777-defaultOperators}.\"},\"granularity()\":{\"details\":\"See {IERC777-granularity}. This implementation always returns `1`.\"},\"isOperatorFor(address,address)\":{\"details\":\"See {IERC777-isOperatorFor}.\"},\"name()\":{\"details\":\"See {IERC777-name}.\"},\"operatorBurn(address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events.\"},\"operatorSend(address,address,uint256,bytes,bytes)\":{\"details\":\"See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events.\"},\"revokeOperator(address)\":{\"details\":\"See {IERC777-revokeOperator}.\"},\"send(address,uint256,bytes)\":{\"details\":\"See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility.\"},\"symbol()\":{\"details\":\"See {IERC777-symbol}.\"},\"totalSupply()\":{\"details\":\"See {IERC777-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TestTokens/ERC777TestToken.sol\":\"TestERC777\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/ERC777.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/ERC777.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC777.sol\\\";\\nimport \\\"./IERC777Recipient.sol\\\";\\nimport \\\"./IERC777Sender.sol\\\";\\nimport \\\"../ERC20/IERC20.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/IERC1820Registry.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC777} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * Support for ERC20 is included in this contract, as specified by the EIP: both\\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\\n * movements.\\n *\\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\\n * are no special restrictions in the amount of tokens that created, moved, or\\n * destroyed. This makes integration with ERC20 applications seamless.\\n */\\ncontract ERC777 is Context, IERC777, IERC20 {\\n    using Address for address;\\n\\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\\n\\n    mapping(address => uint256) private _balances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\\\"ERC777TokensSender\\\");\\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\\\"ERC777TokensRecipient\\\");\\n\\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\\n    address[] private _defaultOperatorsArray;\\n\\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\\n    mapping(address => bool) private _defaultOperators;\\n\\n    // For each account, a mapping of its operators and revoked default operators.\\n    mapping(address => mapping(address => bool)) private _operators;\\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\\n\\n    // ERC20-allowances\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    /**\\n     * @dev `defaultOperators` may be an empty array.\\n     */\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        address[] memory defaultOperators_\\n    ) {\\n        _name = name_;\\n        _symbol = symbol_;\\n\\n        _defaultOperatorsArray = defaultOperators_;\\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\\n            _defaultOperators[defaultOperators_[i]] = true;\\n        }\\n\\n        // register interfaces\\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\\\"ERC777Token\\\"), address(this));\\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\\\"ERC20Token\\\"), address(this));\\n    }\\n\\n    /**\\n     * @dev See {IERC777-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {ERC20-decimals}.\\n     *\\n     * Always returns 18, as per the\\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\\n     */\\n    function decimals() public pure virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-granularity}.\\n     *\\n     * This implementation always returns `1`.\\n     */\\n    function granularity() public view virtual override returns (uint256) {\\n        return 1;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\\n     */\\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\\n        return _balances[tokenHolder];\\n    }\\n\\n    /**\\n     * @dev See {IERC777-send}.\\n     *\\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\\n     */\\n    function send(\\n        address recipient,\\n        uint256 amount,\\n        bytes memory data\\n    ) public virtual override {\\n        _send(_msgSender(), recipient, amount, data, \\\"\\\", true);\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\\n     * interface if it is a contract.\\n     *\\n     * Also emits a {Sent} event.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        require(recipient != address(0), \\\"ERC777: transfer to the zero address\\\");\\n\\n        address from = _msgSender();\\n\\n        _callTokensToSend(from, from, recipient, amount, \\\"\\\", \\\"\\\");\\n\\n        _move(from, from, recipient, amount, \\\"\\\", \\\"\\\");\\n\\n        _callTokensReceived(from, from, recipient, amount, \\\"\\\", \\\"\\\", false);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-burn}.\\n     *\\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\\n     */\\n    function burn(uint256 amount, bytes memory data) public virtual override {\\n        _burn(_msgSender(), amount, data, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC777-isOperatorFor}.\\n     */\\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\\n        return\\n            operator == tokenHolder ||\\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\\n            _operators[tokenHolder][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC777-authorizeOperator}.\\n     */\\n    function authorizeOperator(address operator) public virtual override {\\n        require(_msgSender() != operator, \\\"ERC777: authorizing self as operator\\\");\\n\\n        if (_defaultOperators[operator]) {\\n            delete _revokedDefaultOperators[_msgSender()][operator];\\n        } else {\\n            _operators[_msgSender()][operator] = true;\\n        }\\n\\n        emit AuthorizedOperator(operator, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC777-revokeOperator}.\\n     */\\n    function revokeOperator(address operator) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC777: revoking self as operator\\\");\\n\\n        if (_defaultOperators[operator]) {\\n            _revokedDefaultOperators[_msgSender()][operator] = true;\\n        } else {\\n            delete _operators[_msgSender()][operator];\\n        }\\n\\n        emit RevokedOperator(operator, _msgSender());\\n    }\\n\\n    /**\\n     * @dev See {IERC777-defaultOperators}.\\n     */\\n    function defaultOperators() public view virtual override returns (address[] memory) {\\n        return _defaultOperatorsArray;\\n    }\\n\\n    /**\\n     * @dev See {IERC777-operatorSend}.\\n     *\\n     * Emits {Sent} and {IERC20-Transfer} events.\\n     */\\n    function operatorSend(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes memory data,\\n        bytes memory operatorData\\n    ) public virtual override {\\n        require(isOperatorFor(_msgSender(), sender), \\\"ERC777: caller is not an operator for holder\\\");\\n        _send(sender, recipient, amount, data, operatorData, true);\\n    }\\n\\n    /**\\n     * @dev See {IERC777-operatorBurn}.\\n     *\\n     * Emits {Burned} and {IERC20-Transfer} events.\\n     */\\n    function operatorBurn(\\n        address account,\\n        uint256 amount,\\n        bytes memory data,\\n        bytes memory operatorData\\n    ) public virtual override {\\n        require(isOperatorFor(_msgSender(), account), \\\"ERC777: caller is not an operator for holder\\\");\\n        _burn(account, amount, data, operatorData);\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     *\\n     * Note that operator and allowance concepts are orthogonal: operators may\\n     * not have allowance, and accounts with allowance may not be operators\\n     * themselves.\\n     */\\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\\n        return _allowances[holder][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Note that accounts cannot have allowance issued by their operators.\\n     */\\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\\n        address holder = _msgSender();\\n        _approve(holder, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Note that operator and allowance concepts are orthogonal: operators cannot\\n     * call `transferFrom` (unless they have allowance), and accounts with\\n     * allowance cannot call `operatorSend` (unless they are operators).\\n     *\\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\\n     */\\n    function transferFrom(\\n        address holder,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        require(recipient != address(0), \\\"ERC777: transfer to the zero address\\\");\\n        require(holder != address(0), \\\"ERC777: transfer from the zero address\\\");\\n\\n        address spender = _msgSender();\\n\\n        _callTokensToSend(spender, holder, recipient, amount, \\\"\\\", \\\"\\\");\\n\\n        _move(spender, holder, recipient, amount, \\\"\\\", \\\"\\\");\\n\\n        uint256 currentAllowance = _allowances[holder][spender];\\n        require(currentAllowance >= amount, \\\"ERC777: transfer amount exceeds allowance\\\");\\n        _approve(holder, spender, currentAllowance - amount);\\n\\n        _callTokensReceived(spender, holder, recipient, amount, \\\"\\\", \\\"\\\", false);\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * If a send hook is registered for `account`, the corresponding function\\n     * will be called with `operator`, `data` and `operatorData`.\\n     *\\n     * See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits {Minted} and {IERC20-Transfer} events.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function _mint(\\n        address account,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData\\n    ) internal virtual {\\n        _mint(account, amount, userData, operatorData, true);\\n    }\\n\\n    /**\\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * If `requireReceptionAck` is set to true, and if a send hook is\\n     * registered for `account`, the corresponding function will be called with\\n     * `operator`, `data` and `operatorData`.\\n     *\\n     * See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits {Minted} and {IERC20-Transfer} events.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function _mint(\\n        address account,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData,\\n        bool requireReceptionAck\\n    ) internal virtual {\\n        require(account != address(0), \\\"ERC777: mint to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _beforeTokenTransfer(operator, address(0), account, amount);\\n\\n        // Update state variables\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n\\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\\n\\n        emit Minted(operator, account, amount, userData, operatorData);\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Send tokens\\n     * @param from address token holder address\\n     * @param to address recipient address\\n     * @param amount uint256 amount of tokens to transfer\\n     * @param userData bytes extra information provided by the token holder (if any)\\n     * @param operatorData bytes extra information provided by the operator (if any)\\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\\n     */\\n    function _send(\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData,\\n        bool requireReceptionAck\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC777: send from the zero address\\\");\\n        require(to != address(0), \\\"ERC777: send to the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\\n\\n        _move(operator, from, to, amount, userData, operatorData);\\n\\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\\n    }\\n\\n    /**\\n     * @dev Burn tokens\\n     * @param from address token holder address\\n     * @param amount uint256 amount of tokens to burn\\n     * @param data bytes extra information provided by the token holder\\n     * @param operatorData bytes extra information provided by the operator (if any)\\n     */\\n    function _burn(\\n        address from,\\n        uint256 amount,\\n        bytes memory data,\\n        bytes memory operatorData\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC777: burn from the zero address\\\");\\n\\n        address operator = _msgSender();\\n\\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\\n\\n        _beforeTokenTransfer(operator, from, address(0), amount);\\n\\n        // Update state variables\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC777: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Burned(operator, from, amount, data, operatorData);\\n        emit Transfer(from, address(0), amount);\\n    }\\n\\n    function _move(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData\\n    ) private {\\n        _beforeTokenTransfer(operator, from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC777: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n        }\\n        _balances[to] += amount;\\n\\n        emit Sent(operator, from, to, amount, userData, operatorData);\\n        emit Transfer(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev See {ERC20-_approve}.\\n     *\\n     * Note that accounts cannot have allowance issued by their operators.\\n     */\\n    function _approve(\\n        address holder,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        require(holder != address(0), \\\"ERC777: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC777: approve to the zero address\\\");\\n\\n        _allowances[holder][spender] = value;\\n        emit Approval(holder, spender, value);\\n    }\\n\\n    /**\\n     * @dev Call from.tokensToSend() if the interface is registered\\n     * @param operator address operator requesting the transfer\\n     * @param from address token holder address\\n     * @param to address recipient address\\n     * @param amount uint256 amount of tokens to transfer\\n     * @param userData bytes extra information provided by the token holder (if any)\\n     * @param operatorData bytes extra information provided by the operator (if any)\\n     */\\n    function _callTokensToSend(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData\\n    ) private {\\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\\n        if (implementer != address(0)) {\\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\\n        }\\n    }\\n\\n    /**\\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\\n     * tokensReceived() was not registered for the recipient\\n     * @param operator address operator requesting the transfer\\n     * @param from address token holder address\\n     * @param to address recipient address\\n     * @param amount uint256 amount of tokens to transfer\\n     * @param userData bytes extra information provided by the token holder (if any)\\n     * @param operatorData bytes extra information provided by the operator (if any)\\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\\n     */\\n    function _callTokensReceived(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes memory userData,\\n        bytes memory operatorData,\\n        bool requireReceptionAck\\n    ) private {\\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\\n        if (implementer != address(0)) {\\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\\n        } else if (requireReceptionAck) {\\n            require(!to.isContract(), \\\"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes\\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be to transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x72d06ad8a9e0b3603ed5ed945a8994112c10e377b1c920a7c64a3350cd3d23f2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/IERC777.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777Token standard as defined in the EIP.\\n *\\n * This contract uses the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\\n * token holders and recipients react to token movements by using setting implementers\\n * for the associated interfaces in said registry. See {IERC1820Registry} and\\n * {ERC1820Implementer}.\\n */\\ninterface IERC777 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the smallest part of the token that is not divisible. This\\n     * means all token operations (creation, movement and destruction) must have\\n     * amounts that are a multiple of this number.\\n     *\\n     * For most token contracts, this value will equal 1.\\n     */\\n    function granularity() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by an account (`owner`).\\n     */\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * If send or receive hooks are registered for the caller and `recipient`,\\n     * the corresponding functions will be called with `data` and empty\\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits a {Sent} event.\\n     *\\n     * Requirements\\n     *\\n     * - the caller must have at least `amount` tokens.\\n     * - `recipient` cannot be the zero address.\\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function send(\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\\n     * total supply.\\n     *\\n     * If a send hook is registered for the caller, the corresponding function\\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\\n     *\\n     * Emits a {Burned} event.\\n     *\\n     * Requirements\\n     *\\n     * - the caller must have at least `amount` tokens.\\n     */\\n    function burn(uint256 amount, bytes calldata data) external;\\n\\n    /**\\n     * @dev Returns true if an account is an operator of `tokenHolder`.\\n     * Operators can send and burn tokens on behalf of their owners. All\\n     * accounts are their own operator.\\n     *\\n     * See {operatorSend} and {operatorBurn}.\\n     */\\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\\n\\n    /**\\n     * @dev Make an account an operator of the caller.\\n     *\\n     * See {isOperatorFor}.\\n     *\\n     * Emits an {AuthorizedOperator} event.\\n     *\\n     * Requirements\\n     *\\n     * - `operator` cannot be calling address.\\n     */\\n    function authorizeOperator(address operator) external;\\n\\n    /**\\n     * @dev Revoke an account's operator status for the caller.\\n     *\\n     * See {isOperatorFor} and {defaultOperators}.\\n     *\\n     * Emits a {RevokedOperator} event.\\n     *\\n     * Requirements\\n     *\\n     * - `operator` cannot be calling address.\\n     */\\n    function revokeOperator(address operator) external;\\n\\n    /**\\n     * @dev Returns the list of default operators. These accounts are operators\\n     * for all token holders, even if {authorizeOperator} was never called on\\n     * them.\\n     *\\n     * This list is immutable, but individual holders may revoke these via\\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\\n     */\\n    function defaultOperators() external view returns (address[] memory);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\\n     * be an operator of `sender`.\\n     *\\n     * If send or receive hooks are registered for `sender` and `recipient`,\\n     * the corresponding functions will be called with `data` and\\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\\n     *\\n     * Emits a {Sent} event.\\n     *\\n     * Requirements\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `sender` must have at least `amount` tokens.\\n     * - the caller must be an operator for `sender`.\\n     * - `recipient` cannot be the zero address.\\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\\n     * interface.\\n     */\\n    function operatorSend(\\n        address sender,\\n        address recipient,\\n        uint256 amount,\\n        bytes calldata data,\\n        bytes calldata operatorData\\n    ) external;\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\\n     * The caller must be an operator of `account`.\\n     *\\n     * If a send hook is registered for `account`, the corresponding function\\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\\n     *\\n     * Emits a {Burned} event.\\n     *\\n     * Requirements\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     * - the caller must be an operator for `account`.\\n     */\\n    function operatorBurn(\\n        address account,\\n        uint256 amount,\\n        bytes calldata data,\\n        bytes calldata operatorData\\n    ) external;\\n\\n    event Sent(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256 amount,\\n        bytes data,\\n        bytes operatorData\\n    );\\n\\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\\n\\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\\n\\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\\n\\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\\n}\\n\",\"keccak256\":\"0xe4e0b7e3f0265ffaa565d26acd2d45f2633f19127ed625e5a05a9f201a87a667\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\\n *\\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\\n * contract implement this interface (contract holders can be their own\\n * implementer) and registering it on the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\\n *\\n * See {IERC1820Registry} and {ERC1820Implementer}.\\n */\\ninterface IERC777Recipient {\\n    /**\\n     * @dev Called by an {IERC777} token contract whenever tokens are being\\n     * moved or created into a registered account (`to`). The type of operation\\n     * is conveyed by `from` being the zero address or not.\\n     *\\n     * This call occurs _after_ the token contract's state is updated, so\\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\\n     *\\n     * This function may revert to prevent the operation from being executed.\\n     */\\n    function tokensReceived(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes calldata userData,\\n        bytes calldata operatorData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Sender.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\\n *\\n * {IERC777} Token holders can be notified of operations performed on their\\n * tokens by having a contract implement this interface (contract holders can be\\n * their own implementer) and registering it on the\\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\\n *\\n * See {IERC1820Registry} and {ERC1820Implementer}.\\n */\\ninterface IERC777Sender {\\n    /**\\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\\n     * is conveyed by `to` being the zero address or not.\\n     *\\n     * This call occurs _before_ the token contract's state is updated, so\\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\\n     *\\n     * This function may revert to prevent the operation from being executed.\\n     */\\n    function tokensToSend(\\n        address operator,\\n        address from,\\n        address to,\\n        uint256 amount,\\n        bytes calldata userData,\\n        bytes calldata operatorData\\n    ) external;\\n}\\n\",\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC1820Registry.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC1820Registry.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the global ERC1820 Registry, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1820[EIP]. Accounts may register\\n * implementers for interfaces in this registry, as well as query support.\\n *\\n * Implementers may be shared by multiple accounts, and can also implement more\\n * than a single interface for each account. Contracts can implement interfaces\\n * for themselves, but externally-owned accounts (EOA) must delegate this to a\\n * contract.\\n *\\n * {IERC165} interfaces can also be queried via the registry.\\n *\\n * For an in-depth explanation and source code analysis, see the EIP text.\\n */\\ninterface IERC1820Registry {\\n    /**\\n     * @dev Sets `newManager` as the manager for `account`. A manager of an\\n     * account is able to set interface implementers for it.\\n     *\\n     * By default, each account is its own manager. Passing a value of `0x0` in\\n     * `newManager` will reset the manager to this initial state.\\n     *\\n     * Emits a {ManagerChanged} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be the current manager for `account`.\\n     */\\n    function setManager(address account, address newManager) external;\\n\\n    /**\\n     * @dev Returns the manager for `account`.\\n     *\\n     * See {setManager}.\\n     */\\n    function getManager(address account) external view returns (address);\\n\\n    /**\\n     * @dev Sets the `implementer` contract as ``account``'s implementer for\\n     * `interfaceHash`.\\n     *\\n     * `account` being the zero address is an alias for the caller's address.\\n     * The zero address can also be used in `implementer` to remove an old one.\\n     *\\n     * See {interfaceHash} to learn how these are created.\\n     *\\n     * Emits an {InterfaceImplementerSet} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be the current manager for `account`.\\n     * - `interfaceHash` must not be an {IERC165} interface id (i.e. it must not\\n     * end in 28 zeroes).\\n     * - `implementer` must implement {IERC1820Implementer} and return true when\\n     * queried for support, unless `implementer` is the caller. See\\n     * {IERC1820Implementer-canImplementInterfaceForAddress}.\\n     */\\n    function setInterfaceImplementer(\\n        address account,\\n        bytes32 _interfaceHash,\\n        address implementer\\n    ) external;\\n\\n    /**\\n     * @dev Returns the implementer of `interfaceHash` for `account`. If no such\\n     * implementer is registered, returns the zero address.\\n     *\\n     * If `interfaceHash` is an {IERC165} interface id (i.e. it ends with 28\\n     * zeroes), `account` will be queried for support of it.\\n     *\\n     * `account` being the zero address is an alias for the caller's address.\\n     */\\n    function getInterfaceImplementer(address account, bytes32 _interfaceHash) external view returns (address);\\n\\n    /**\\n     * @dev Returns the interface hash for an `interfaceName`, as defined in the\\n     * corresponding\\n     * https://eips.ethereum.org/EIPS/eip-1820#interface-name[section of the EIP].\\n     */\\n    function interfaceHash(string calldata interfaceName) external pure returns (bytes32);\\n\\n    /**\\n     * @notice Updates the cache with whether the contract implements an ERC165 interface or not.\\n     * @param account Address of the contract for which to update the cache.\\n     * @param interfaceId ERC165 interface for which to update the cache.\\n     */\\n    function updateERC165Cache(address account, bytes4 interfaceId) external;\\n\\n    /**\\n     * @notice Checks whether a contract implements an ERC165 interface or not.\\n     * If the result is not cached a direct lookup on the contract address is performed.\\n     * If the result is not cached or the cached value is out-of-date, the cache MUST be updated manually by calling\\n     * {updateERC165Cache} with the contract address.\\n     * @param account Address of the contract to check.\\n     * @param interfaceId ERC165 interface to check.\\n     * @return True if `account` implements `interfaceId`, false otherwise.\\n     */\\n    function implementsERC165Interface(address account, bytes4 interfaceId) external view returns (bool);\\n\\n    /**\\n     * @notice Checks whether a contract implements an ERC165 interface or not without using nor updating the cache.\\n     * @param account Address of the contract to check.\\n     * @param interfaceId ERC165 interface to check.\\n     * @return True if `account` implements `interfaceId`, false otherwise.\\n     */\\n    function implementsERC165InterfaceNoCache(address account, bytes4 interfaceId) external view returns (bool);\\n\\n    event InterfaceImplementerSet(address indexed account, bytes32 indexed interfaceHash, address indexed implementer);\\n\\n    event ManagerChanged(address indexed account, address indexed newManager);\\n}\\n\",\"keccak256\":\"0x6e306f9ab28416a9e5931f0b6e264676e8ac68fad184f9a9d8bb125c6ec23bc3\",\"license\":\"MIT\"},\"contracts/TestTokens/ERC777TestToken.sol\":{\"content\":\"// SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC777/ERC777.sol\\\";\\n\\ncontract TestERC777 is ERC777 {\\n    address[] public _defaultOperators = [address(this)];\\n    constructor () ERC777(\\\"TestToken\\\", \\\"TST\\\", _defaultOperators) {}\\n\\n    function mint(address account, uint256 amount) public {\\n        _mint(account, amount, \\\"\\\", \\\"\\\");\\n    }\\n}\",\"keccak256\":\"0xb1ede7bde27dee9a2c70528430168753d9c172dec929fa341bcf83d6c6f5cec6\",\"license\":\"Unlicense\"}},\"version\":1}","storageLayout":{"storage":[{"astId":106,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_balances","offset":0,"slot":"0","type":"t_mapping(t_address,t_uint256)"},{"astId":108,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_totalSupply","offset":0,"slot":"1","type":"t_uint256"},{"astId":110,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_name","offset":0,"slot":"2","type":"t_string_storage"},{"astId":112,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_symbol","offset":0,"slot":"3","type":"t_string_storage"},{"astId":125,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_defaultOperatorsArray","offset":0,"slot":"4","type":"t_array(t_address)dyn_storage"},{"astId":129,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_defaultOperators","offset":0,"slot":"5","type":"t_mapping(t_address,t_bool)"},{"astId":135,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_operators","offset":0,"slot":"6","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":141,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_revokedDefaultOperators","offset":0,"slot":"7","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":147,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_allowances","offset":0,"slot":"8","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":1835,"contract":"contracts/TestTokens/ERC777TestToken.sol:TestERC777","label":"_defaultOperators","offset":0,"slot":"9","type":"t_array(t_address)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}