specVersion: 0.0.2
description: Subgraph definitions for tatum bounty contracts
repository:
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: BountyFactory
    network: xDai
    source:
      # make sure this is same as config.contracts.BountyFactory in https://github.com/streamr-dev/network-contracts/blob/develop/packages/config/src/networks.json
      address: '0xbfa4EcF9d107De5720446e6dd8162ef6bf4b3873'
      abi: BountyFactory
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/bountyFactory.ts
      entities:
        - Bounty
      abis:
        - name: BountyFactory
          file: ../../packages/network-contracts/artifacts/contracts/BrokerEconomics/Bounties/BountyFactory.sol/BountyFactory.json
      eventHandlers:
        - event: NewBounty(address)
          handler: handleBountyCreated
  - kind: ethereum/contract
    name: BrokerPoolFactory
    network: xDai
    source:
      # make sure this is same as config.contracts.BountyFactory in https://github.com/streamr-dev/network-contracts/blob/develop/packages/config/src/networks.json
      address: '0x1Cc93b7f91727e7c9bC86025C622A664e93DFb29'
      abi: BrokerPoolFactory
      startBlock: 0
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/poolFactory.ts
      entities:
        - Pool
        - PoolInvestment
      abis:
        - name: BrokerPoolFactory
          file: ../../packages/network-contracts/artifacts/contracts/BrokerEconomics/Delegation/BrokerPoolFactory.sol/BrokerPoolFactory.json
      eventHandlers:
        - event: NewBrokerPool(address)
          handler: handlePoolCreated

templates:
  - name: Bounty
    kind: ethereum/contract
    network: xDai
    source:
      abi: Bounty
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/bounty.ts
      entities:
        - Bounty
        - Stake
        - BrokerPool
      abis:
        - name: Bounty
          file: ../../packages/network-contracts/artifacts/contracts/BrokerEconomics/Bounties/Bounty.sol/Bounty.json
      eventHandlers:
          - event: StakeUpdate(indexed address,uint256,uint256)
            handler: handleStakeUpdated
          - event: BountyUpdate(uint256,uint256,uint256,uint32,bool)
            handler: handleBountyUpdated
        # - event: StakeAdded(indexed address,uint256,uint256)
        #   handler: handleStakeAdded
        # - event: SponsorshipReceived(indexed address,uint256)
        #   handler: handleSponsorshipReceived
        # - event: BrokerJoined(indexed address)
        #   handler: handleBrokerJoined
        # - event: BrokerLeft(indexed address,uint256)
        #   handler: handleBrokerLeft
  - name: BrokerPool
    kind: ethereum/contract
    network: xDai
    source:
      abi: BrokerPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      file: ./src/pool.ts
      entities:
        - BrokerPool
        - PoolInvestment
      abis:
        - name: BrokerPool
          file: ../../packages/network-contracts/artifacts/contracts/BrokerEconomics/Delegation/BrokerPool.sol/BrokerPool.json
      eventHandlers:
          # - event: Staked(indexed address,uint256)
          #   handler: handleStakeUpdated
          # - event: BountyUpdate(uint256,uint256,uint256,uint32,bool)
          #   handler: handleBountyUpdated
          - event: InvestmentReceived(indexed address,uint256)
            handler: handleInvestmentReceived
    # event InvestmentReturned(address indexed investor, uint amountWei);
    # event Staked(Bounty indexed bounty, uint amountWei);
    # event Losses(Bounty indexed bounty, uint amountWei);
    # event Unstaked(Bounty indexed bounty, uint stakeWei, uint gainsWei);
    # event QueuedDataPayout(address user, uint amountDataWei);
    # event UnqueuedDataPayout(address user, uint amountDataWei);